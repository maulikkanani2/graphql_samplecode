type AvailabilityTemplate {
  id: Int
  name: String
  description: String
  scenario: Scenario
  availabilityTemplateItems(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateAvailabilityTemplateItem]
  availabilityTemplateItemsConnection(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateAvailabilityTemplateItemConnection
  calendarisedAvailabilityTemplateSetItems(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateCalendarisedAvailabilityTemplateSetItemConnection
}

type AvailabilityTemplateAvailabilityTemplateItem {
  id: Int
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

type AvailabilityTemplateAvailabilityTemplateItemConnection {
  pageInfo: PageInfo
  edges: [AvailabilityTemplateAvailabilityTemplateItemsEdge]
  availabilityTemplateItems: [AvailabilityTemplate]
}

type AvailabilityTemplateAvailabilityTemplateItemsEdge {
  node: AvailabilityTemplateAvailabilityTemplateItem
  cursor: String
}

type AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem {
  id: Int
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  startTime: String
  endTime: String
}

type AvailabilityTemplateCalendarisedAvailabilityTemplateSetItemConnection {
  pageInfo: PageInfo
  edges: [AvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsEdge]
  calendarisedAvailabilityTemplateSetItems: [AvailabilityTemplate]
}

type AvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsEdge {
  node: AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem
  cursor: String
}

type AvailabilityTemplateConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [AvailabilityTemplateEdge]
  availabilityTemplates: [AvailabilityTemplate]
}

type AvailabilityTemplateEdge {
  node: AvailabilityTemplate
  cursor: String
}

type AvailabilityTemplateItem {
  id: Int
  availabilityTemplate: AvailabilityTemplate
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

type AvailabilityTemplateItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [AvailabilityTemplateItemEdge]
  availabilityTemplateItems: [AvailabilityTemplateItem]
}

type AvailabilityTemplateItemEdge {
  node: AvailabilityTemplateItem
  cursor: String
}

type CalendarisedAvailabilityTemplateSet {
  id: Int
  name: String
  scenario: Scenario
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemConnection
  equipments(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetEquipment]
  equipmentsConnection(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetEquipmentConnection
  persons(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetPerson]
  personsConnection(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetPersonConnection
}

type CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: AvailabilityTemplate
}

type CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemConnection {
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsEdge]
  calendarisedAvailabilityTemplateSetItems: [CalendarisedAvailabilityTemplateSet]
}

type CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsEdge {
  node: CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem
  cursor: String
}

type CalendarisedAvailabilityTemplateSetConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetEdge]
  calendarisedAvailabilityTemplateSets: [CalendarisedAvailabilityTemplateSet]
}

type CalendarisedAvailabilityTemplateSetEdge {
  node: CalendarisedAvailabilityTemplateSet
  cursor: String
}

type CalendarisedAvailabilityTemplateSetEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type CalendarisedAvailabilityTemplateSetEquipmentConnection {
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetEquipmentsEdge]
  equipments: [CalendarisedAvailabilityTemplateSet]
}

type CalendarisedAvailabilityTemplateSetEquipmentsEdge {
  node: CalendarisedAvailabilityTemplateSetEquipment
  cursor: String
}

type CalendarisedAvailabilityTemplateSetItem {
  id: Int
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  startTime: String
  endTime: String
  availabilityTemplate: AvailabilityTemplate
}

type CalendarisedAvailabilityTemplateSetItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetItemEdge]
  calendarisedAvailabilityTemplateSetItems: [CalendarisedAvailabilityTemplateSetItem]
}

type CalendarisedAvailabilityTemplateSetItemEdge {
  node: CalendarisedAvailabilityTemplateSetItem
  cursor: String
}

type CalendarisedAvailabilityTemplateSetPerson {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personPropertiesConnection(where: FilterPersonPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPersonPropertyConnection
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonOperationsSegmentPersonnelSpecificationConnection
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterPersonOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): PersonOperationsRequestPersonnelConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonSegmentRequirementPersonnelRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type CalendarisedAvailabilityTemplateSetPersonConnection {
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetPersonsEdge]
  persons: [CalendarisedAvailabilityTemplateSet]
}

type CalendarisedAvailabilityTemplateSetPersonsEdge {
  node: CalendarisedAvailabilityTemplateSetPerson
  cursor: String
}

type CalendarisedThroughputSet {
  id: Int
  name: String
  scenario: Scenario
  operationsSegments(where: FilterCalendarisedThroughputSetOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetOperationsSegment]
  operationsSegmentsConnection(where: FilterCalendarisedThroughputSetOperationsSegmentInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetOperationsSegmentConnection
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetCalendarisedThroughputSetItemConnection
}

type CalendarisedThroughputSetCalendarisedThroughputSetItem {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: MaterialDefinition
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type CalendarisedThroughputSetCalendarisedThroughputSetItemConnection {
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetCalendarisedThroughputSetItemsEdge]
  calendarisedThroughputSetItems: [CalendarisedThroughputSet]
}

type CalendarisedThroughputSetCalendarisedThroughputSetItemsEdge {
  node: CalendarisedThroughputSetCalendarisedThroughputSetItem
  cursor: String
}

type CalendarisedThroughputSetConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetEdge]
  calendarisedThroughputSets: [CalendarisedThroughputSet]
}

type CalendarisedThroughputSetEdge {
  node: CalendarisedThroughputSet
  cursor: String
}

type CalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: MaterialDefinition
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type CalendarisedThroughputSetItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetItemEdge]
  calendarisedThroughputSetItems: [CalendarisedThroughputSetItem]
}

type CalendarisedThroughputSetItemEdge {
  node: CalendarisedThroughputSetItem
  cursor: String
}

type CalendarisedThroughputSetOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterOperationsSegmentChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentChangeoverSetItemConnection
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentConnection
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterOperationsSegmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentCapabilityConnection
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterOperationsSegmentPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelCapabilityConnection
  descendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  descendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  ascendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  ascendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPropertyConnection
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesFromOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentDependenciesToOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsSegmentOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsRequestConnection
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsSegmentSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsSegmentSegmentRequirementConnection
}

type CalendarisedThroughputSetOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetOperationsSegmentsEdge]
  operationsSegments: [CalendarisedThroughputSet]
}

type CalendarisedThroughputSetOperationsSegmentsEdge {
  node: CalendarisedThroughputSetOperationsSegment
  cursor: String
}

type ChangeoverSet {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: Scenario
  changeoverSetItems(where: FilterChangeoverSetChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterChangeoverSetChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): ChangeoverSetChangeoverSetItemConnection
  equipments(where: FilterChangeoverSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetEquipment]
  equipmentsConnection(where: FilterChangeoverSetEquipmentInput, first: Int, after: String, orderBy: [String]): ChangeoverSetEquipmentConnection
}

type ChangeoverSetChangeoverSetItem {
  id: Int
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: OperationsSegment
}

type ChangeoverSetChangeoverSetItemConnection {
  pageInfo: PageInfo
  edges: [ChangeoverSetChangeoverSetItemsEdge]
  changeoverSetItems: [ChangeoverSet]
}

type ChangeoverSetChangeoverSetItemsEdge {
  node: ChangeoverSetChangeoverSetItem
  cursor: String
}

type ChangeoverSetConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ChangeoverSetEdge]
  changeoverSets: [ChangeoverSet]
}

type ChangeoverSetEdge {
  node: ChangeoverSet
  cursor: String
}

type ChangeoverSetEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type ChangeoverSetEquipmentConnection {
  pageInfo: PageInfo
  edges: [ChangeoverSetEquipmentsEdge]
  equipments: [ChangeoverSet]
}

type ChangeoverSetEquipmentsEdge {
  node: ChangeoverSetEquipment
  cursor: String
}

type ChangeoverSetItem {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: OperationsSegment
}

type ChangeoverSetItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ChangeoverSetItemEdge]
  changeoverSetItems: [ChangeoverSetItem]
}

type ChangeoverSetItemEdge {
  node: ChangeoverSetItem
  cursor: String
}

type ColourScheme {
  id: Int
  name: String
  scenario: Scenario
  colourSchemeItems(where: FilterColourSchemeColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeColourSchemeItem]
  colourSchemeItemsConnection(where: FilterColourSchemeColourSchemeItemInput, first: Int, after: String, orderBy: [String]): ColourSchemeColourSchemeItemConnection
}

type ColourSchemeColourSchemeItem {
  id: Int
  propertyValue: OptimisationPropertyValue
  red: Int
  green: Int
  blue: Int
}

type ColourSchemeColourSchemeItemConnection {
  pageInfo: PageInfo
  edges: [ColourSchemeColourSchemeItemsEdge]
  colourSchemeItems: [ColourScheme]
}

type ColourSchemeColourSchemeItemsEdge {
  node: ColourSchemeColourSchemeItem
  cursor: String
}

type ColourSchemeConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ColourSchemeEdge]
  colourSchemes: [ColourScheme]
}

type ColourSchemeEdge {
  node: ColourScheme
  cursor: String
}

type ColourSchemeItem {
  id: Int
  colourScheme: ColourScheme
  propertyValue: OptimisationPropertyValue
  red: Int
  green: Int
  blue: Int
}

type ColourSchemeItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ColourSchemeItemEdge]
  colourSchemeItems: [ColourSchemeItem]
}

type ColourSchemeItemEdge {
  node: ColourSchemeItem
  cursor: String
}

type ConfigurableApplicationParameter {
  id: Int
  name: String
  dataType: String
  valueAsString: String
  scenario: Scenario
}

type ConfigurableApplicationParameterConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ConfigurableApplicationParameterEdge]
  configurableApplicationParameters: [ConfigurableApplicationParameter]
}

type ConfigurableApplicationParameterEdge {
  node: ConfigurableApplicationParameter
  cursor: String
}

input CreateAscendantEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateAscendantOperationsSegmentsInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateAscendantSegmentRequirementsInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateAvailabilityTemplateAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

input CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
}

input CreateAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  scenario: CreateScenarioParentInput
  availabilityTemplateItems: CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input CreateAvailabilityTemplateItemInput {
  id: Int
  availabilityTemplate: CreateAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

input CreateAvailabilityTemplateParentInput {
  connect: FindAvailabilityTemplateInput
  create: CreateAvailabilityTemplateInput
  upsert: UpsertAvailabilityTemplateInput
}

input CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: CreateAvailabilityTemplateParentInput
}

input CreateCalendarisedAvailabilityTemplateSetEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  calendarisedAvailabilityTemplateSetItems: CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: CreateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input CreateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: CreateAvailabilityTemplateParentInput
}

input CreateCalendarisedAvailabilityTemplateSetParentInput {
  connect: FindCalendarisedAvailabilityTemplateSetInput
  create: CreateCalendarisedAvailabilityTemplateSetInput
  upsert: UpsertCalendarisedAvailabilityTemplateSetInput
}

input CreateCalendarisedAvailabilityTemplateSetPersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  operationsSegments: CreateManyCalendarisedThroughputSetOperationsSegmentsInput
  calendarisedThroughputSetItems: CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
}

input CreateCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateCalendarisedThroughputSetOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateCalendarisedThroughputSetParentInput {
  connect: FindCalendarisedThroughputSetInput
  create: CreateCalendarisedThroughputSetInput
  upsert: UpsertCalendarisedThroughputSetInput
}

input CreateChangeoverSetChangeoverSetItemInput {
  id: Int
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateChangeoverSetEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyChangeoverSetChangeoverSetItemsInput
  equipments: CreateManyChangeoverSetEquipmentsInput
}

input CreateChangeoverSetItemInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateChangeoverSetParentInput {
  connect: FindChangeoverSetInput
  create: CreateChangeoverSetInput
  upsert: UpsertChangeoverSetInput
}

input CreateChildEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateColourSchemeColourSchemeItemInput {
  id: Int
  propertyValue: CreateOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input CreateColourSchemeInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  colourSchemeItems: CreateManyColourSchemeColourSchemeItemsInput
}

input CreateColourSchemeItemInput {
  id: Int
  colourScheme: CreateColourSchemeParentInput
  propertyValue: CreateOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input CreateColourSchemeParentInput {
  connect: FindColourSchemeInput
  create: CreateColourSchemeInput
  upsert: UpsertColourSchemeInput
}

input CreateConfigurableApplicationParameterInput {
  id: Int
  name: String!
  dataType: String!
  valueAsString: String
  scenario: CreateScenarioParentInput
}

input CreateDescendantEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateDescendantOperationsSegmentsInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateDescendantSegmentRequirementsInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateDowntimePeriodEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: CreateScenarioParentInput
  equipments: CreateManyDowntimePeriodEquipmentsInput
  persons: CreateManyDowntimePeriodPersonsInput
}

input CreateDowntimePeriodParentInput {
  connect: FindDowntimePeriodInput
  create: CreateDowntimePeriodInput
  upsert: UpsertDowntimePeriodInput
}

input CreateDowntimePeriodPersonsInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreateEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateEquipmentChildInput {
  id: Int
  parent: CreateEquipmentParentInput
  child: CreateEquipmentParentInput
}

input CreateEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
}

input CreateEquipmentClassEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateEquipmentClassParentInput {
  connect: FindEquipmentClassInput
  create: CreateEquipmentClassInput
  upsert: UpsertEquipmentClassInput
}

input CreateEquipmentDescendantInput {
  id: Int
  ascendant: CreateEquipmentParentInput
  descendant: CreateEquipmentParentInput
}

input CreateEquipmentDowntimePeriodInput {
  id: Int
  equipment: CreateEquipmentParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
}

input CreateEquipmentDowntimePeriodsInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: CreateScenarioParentInput
  equipments: CreateManyDowntimePeriodEquipmentsInput
  persons: CreateManyDowntimePeriodPersonsInput
}

input CreateEquipmentEquipmentCapabilityInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateEquipmentEquipmentClassesInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateEquipmentEquipmentPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreateEquipmentHierarchyScopeInput {
  id: Int
  externalId: String
  parent: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateEquipmentOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
}

input CreateEquipmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateEquipmentParentInput {
  connect: FindEquipmentInput
  create: CreateEquipmentInput
  upsert: UpsertEquipmentInput
}

input CreateEquipmentPropertyInput {
  id: Int
  equipment: CreateEquipmentParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateEquipmentSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateHierarchyScopeDescendantInput {
  id: Int
  ascendant: CreateHierarchyScopeParentInput
  descendant: CreateHierarchyScopeParentInput
}

input CreateHierarchyScopeEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateHierarchyScopeEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateHierarchyScopeEquipmentInput {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateHierarchyScopeHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  parent: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateHierarchyScopeMaterialDefinitionInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  calendarisedThroughputSetItems: CreateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateHierarchyScopeMaterialLotInput {
  id: Int
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateHierarchyScopeOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeOperationalLocationInput {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateHierarchyScopeOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: CreateScenarioParentInput
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateHierarchyScopeOperationsDefinitionInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateHierarchyScopeOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: CreateScenarioParentInput
  operationsRequestProfile: CreateOperationsRequestProfileParentInput
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateHierarchyScopeOperationsSegmentInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreateHierarchyScopeParentInput {
  connect: FindHierarchyScopeInput
  create: CreateHierarchyScopeInput
  upsert: UpsertHierarchyScopeInput
}

input CreateHierarchyScopePersonInput {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreateHierarchyScopePersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateHierarchyScopePersonnelClassInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  persons: CreateManyPersonnelClassPersonsInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreateHierarchyScopePersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  persons: CreateManyPersonnelPositionPersonsInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateHierarchyScopeSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateHierarchyScopeSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreateManyAscendantEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateAscendantEquipmentsInput]
  upsert: [UpsertAscendantEquipmentsInput]
}

input CreateManyAscendantOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateAscendantOperationsSegmentsInput]
  upsert: [UpsertAscendantOperationsSegmentsInput]
}

input CreateManyAscendantSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateAscendantSegmentRequirementsInput]
  upsert: [UpsertAscendantSegmentRequirementsInput]
}

input CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput {
  connect: [FindAvailabilityTemplateItemInput]
  create: [CreateAvailabilityTemplateAvailabilityTemplateItemInput]
  upsert: [UpsertAvailabilityTemplateAvailabilityTemplateItemInput]
}

input CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateCalendarisedAvailabilityTemplateSetEquipmentInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetEquipmentInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetPersonsInput {
  connect: [FindPersonInput]
  create: [CreateCalendarisedAvailabilityTemplateSetPersonInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetPersonInput]
}

input CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  upsert: [UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
}

input CreateManyCalendarisedThroughputSetOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateCalendarisedThroughputSetOperationsSegmentInput]
  upsert: [UpsertCalendarisedThroughputSetOperationsSegmentInput]
}

input CreateManyChangeoverSetChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateChangeoverSetChangeoverSetItemInput]
  upsert: [UpsertChangeoverSetChangeoverSetItemInput]
}

input CreateManyChangeoverSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChangeoverSetEquipmentInput]
  upsert: [UpsertChangeoverSetEquipmentInput]
}

input CreateManyChildEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChildEquipmentsInput]
  upsert: [UpsertChildEquipmentsInput]
}

input CreateManyColourSchemeColourSchemeItemsInput {
  connect: [FindColourSchemeItemInput]
  create: [CreateColourSchemeColourSchemeItemInput]
  upsert: [UpsertColourSchemeColourSchemeItemInput]
}

input CreateManyDescendantEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateDescendantEquipmentsInput]
  upsert: [UpsertDescendantEquipmentsInput]
}

input CreateManyDescendantOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateDescendantOperationsSegmentsInput]
  upsert: [UpsertDescendantOperationsSegmentsInput]
}

input CreateManyDescendantSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateDescendantSegmentRequirementsInput]
  upsert: [UpsertDescendantSegmentRequirementsInput]
}

input CreateManyDowntimePeriodEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateDowntimePeriodEquipmentsInput]
  upsert: [UpsertDowntimePeriodEquipmentsInput]
}

input CreateManyDowntimePeriodPersonsInput {
  connect: [FindPersonInput]
  create: [CreateDowntimePeriodPersonsInput]
  upsert: [UpsertDowntimePeriodPersonsInput]
}

input CreateManyEquipmentClassEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateEquipmentClassEquipmentsInput]
  upsert: [UpsertEquipmentClassEquipmentsInput]
}

input CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyEquipmentDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreateEquipmentDowntimePeriodsInput]
  upsert: [UpsertEquipmentDowntimePeriodsInput]
}

input CreateManyEquipmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateEquipmentEquipmentCapabilityInput]
  upsert: [UpsertEquipmentEquipmentCapabilityInput]
}

input CreateManyEquipmentEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateEquipmentEquipmentClassesInput]
  upsert: [UpsertEquipmentEquipmentClassesInput]
}

input CreateManyEquipmentEquipmentPropertiesInput {
  connect: [FindEquipmentPropertyInput]
  create: [CreateEquipmentEquipmentPropertyInput]
  upsert: [UpsertEquipmentEquipmentPropertyInput]
}

input CreateManyEquipmentHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateEquipmentHierarchyScopeInput]
  upsert: [UpsertEquipmentHierarchyScopeInput]
}

input CreateManyEquipmentOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateEquipmentOperationsRequestEquipmentInput]
  upsert: [UpsertEquipmentOperationsRequestEquipmentInput]
}

input CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateEquipmentSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertEquipmentSegmentRequirementEquipmentRequirementInput]
}

input CreateManyHierarchyScopeEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateHierarchyScopeEquipmentCapabilityInput]
  upsert: [UpsertHierarchyScopeEquipmentCapabilityInput]
}

input CreateManyHierarchyScopeEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateHierarchyScopeEquipmentClassInput]
  upsert: [UpsertHierarchyScopeEquipmentClassInput]
}

input CreateManyHierarchyScopeEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateHierarchyScopeEquipmentInput]
  upsert: [UpsertHierarchyScopeEquipmentInput]
}

input CreateManyHierarchyScopeHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateHierarchyScopeHierarchyScopeInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeInput]
}

input CreateManyHierarchyScopeMaterialDefinitionsInput {
  connect: [FindMaterialDefinitionInput]
  create: [CreateHierarchyScopeMaterialDefinitionInput]
  upsert: [UpsertHierarchyScopeMaterialDefinitionInput]
}

input CreateManyHierarchyScopeMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateHierarchyScopeMaterialLotInput]
  upsert: [UpsertHierarchyScopeMaterialLotInput]
}

input CreateManyHierarchyScopeOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateHierarchyScopeOpenPurchaseOrderInput]
  upsert: [UpsertHierarchyScopeOpenPurchaseOrderInput]
}

input CreateManyHierarchyScopeOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateHierarchyScopeOperationalLocationInput]
  upsert: [UpsertHierarchyScopeOperationalLocationInput]
}

input CreateManyHierarchyScopeOperationsDefinitionClassesInput {
  connect: [FindOperationsDefinitionClassInput]
  create: [CreateHierarchyScopeOperationsDefinitionClassInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionClassInput]
}

input CreateManyHierarchyScopeOperationsDefinitionsInput {
  connect: [FindOperationsDefinitionInput]
  create: [CreateHierarchyScopeOperationsDefinitionInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionInput]
}

input CreateManyHierarchyScopeOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateHierarchyScopeOperationsRequestInput]
  upsert: [UpsertHierarchyScopeOperationsRequestInput]
}

input CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateHierarchyScopeOperationsSegmentInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentInput]
}

input CreateManyHierarchyScopePersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateHierarchyScopePersonnelCapabilityInput]
  upsert: [UpsertHierarchyScopePersonnelCapabilityInput]
}

input CreateManyHierarchyScopePersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreateHierarchyScopePersonnelClassInput]
  upsert: [UpsertHierarchyScopePersonnelClassInput]
}

input CreateManyHierarchyScopePersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreateHierarchyScopePersonnelPositionInput]
  upsert: [UpsertHierarchyScopePersonnelPositionInput]
}

input CreateManyHierarchyScopePersonsInput {
  connect: [FindPersonInput]
  create: [CreateHierarchyScopePersonInput]
  upsert: [UpsertHierarchyScopePersonInput]
}

input CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementInput]
}

input CreateManyMaterialDefinitionCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateMaterialDefinitionCalendarisedThroughputSetItemInput]
  upsert: [UpsertMaterialDefinitionCalendarisedThroughputSetItemInput]
}

input CreateManyMaterialDefinitionMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateMaterialDefinitionMaterialLotInput]
  upsert: [UpsertMaterialDefinitionMaterialLotInput]
}

input CreateManyMaterialDefinitionMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateMaterialDefinitionMaterialPropertyInput]
  upsert: [UpsertMaterialDefinitionMaterialPropertyInput]
}

input CreateManyMaterialDefinitionOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateMaterialDefinitionOpenPurchaseOrderInput]
  upsert: [UpsertMaterialDefinitionOpenPurchaseOrderInput]
}

input CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
}

input CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput]
}

input CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialLotSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialLotSegmentRequirementMaterialRequirementInput]
}

input CreateManyOperationalLocationMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateOperationalLocationMaterialLotInput]
  upsert: [UpsertOperationalLocationMaterialLotInput]
}

input CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput]
}

input CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementMaterialRequirementInput]
}

input CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput]
}

input CreateManyOperationsDefinitionClassOperationsDefinitionsInput {
  connect: [FindOperationsDefinitionInput]
  create: [CreateOperationsDefinitionClassOperationsDefinitionInput]
  upsert: [UpsertOperationsDefinitionClassOperationsDefinitionInput]
}

input CreateManyOperationsDefinitionClassOrderItemsInput {
  connect: [FindOrderItemInput]
  create: [CreateOperationsDefinitionClassOrderItemInput]
  upsert: [UpsertOperationsDefinitionClassOrderItemInput]
}

input CreateManyOperationsDefinitionOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsDefinitionOperationsSegmentInput]
  upsert: [UpsertOperationsDefinitionOperationsSegmentInput]
}

input CreateManyOperationsRequestOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateOperationsRequestOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsRequestOperationsRequestEquipmentInput]
}

input CreateManyOperationsRequestOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreateOperationsRequestOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsRequestOperationsRequestPersonnelInput]
}

input CreateManyOperationsRequestProfileOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateOperationsRequestProfileOperationsRequestInput]
  upsert: [UpsertOperationsRequestProfileOperationsRequestInput]
}

input CreateManyOperationsRequestSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsRequestSegmentRequirementInput]
  upsert: [UpsertOperationsRequestSegmentRequirementInput]
}

input CreateManyOperationsSegmentChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOperationsSegmentChangeoverSetItemInput]
  upsert: [UpsertOperationsSegmentChangeoverSetItemInput]
}

input CreateManyOperationsSegmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateOperationsSegmentEquipmentCapabilityInput]
  upsert: [UpsertOperationsSegmentEquipmentCapabilityInput]
}

input CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  upsert: [UpsertOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
}

input CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
}

input CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationsSegmentOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateOperationsSegmentOperationsRequestInput]
  upsert: [UpsertOperationsSegmentOperationsRequestInput]
}

input CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput {
  connect: [FindOperationsSegmentDependencyInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
}

input CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput {
  connect: [FindOperationsSegmentDependencyInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
}

input CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentPropertiesInput {
  connect: [FindOperationsSegmentPropertyInput]
  create: [CreateOperationsSegmentOperationsSegmentPropertyInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPropertyInput]
}

input CreateManyOperationsSegmentOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentInput]
}

input CreateManyOperationsSegmentPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateOperationsSegmentPersonnelCapabilityInput]
  upsert: [UpsertOperationsSegmentPersonnelCapabilityInput]
}

input CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  upsert: [UpsertOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
}

input CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
}

input CreateManyOperationsSegmentSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsSegmentSegmentRequirementInput]
  upsert: [UpsertOperationsSegmentSegmentRequirementInput]
}

input CreateManyOptimisationHierarchyEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationHierarchyEquipmentInput]
  upsert: [UpsertOptimisationHierarchyEquipmentInput]
}

input CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput {
  connect: [FindOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput]
}

input CreateManyOptimisationPreferredSequenceEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationPreferredSequenceEquipmentInput]
  upsert: [UpsertOptimisationPreferredSequenceEquipmentInput]
}

input CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput {
  connect: [FindOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
}

input CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput {
  connect: [FindOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationPropertyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationPropertyOptimisationHierarchyAttributeInput]
}

input CreateManyOptimisationPropertyOptimisationPreferredSequencesInput {
  connect: [FindOptimisationPreferredSequenceInput]
  create: [CreateOptimisationPropertyOptimisationPreferredSequenceInput]
  upsert: [UpsertOptimisationPropertyOptimisationPreferredSequenceInput]
}

input CreateManyOptimisationPropertyOptimisationPropertyValuesInput {
  connect: [FindOptimisationPropertyValueInput]
  create: [CreateOptimisationPropertyOptimisationPropertyValueInput]
  upsert: [UpsertOptimisationPropertyOptimisationPropertyValueInput]
}

input CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput]
}

input CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemToValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemToValueInput]
}

input CreateManyOptimisationPropertyValueColourSchemeItemsInput {
  connect: [FindColourSchemeItemInput]
  create: [CreateOptimisationPropertyValueColourSchemeItemInput]
  upsert: [UpsertOptimisationPropertyValueColourSchemeItemInput]
}

input CreateManyOptimisationPropertyValueMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateOptimisationPropertyValueMaterialPropertyInput]
  upsert: [UpsertOptimisationPropertyValueMaterialPropertyInput]
}

input CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput {
  connect: [FindOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
}

input CreateManyOrderItemOperationsRequestProfilesInput {
  connect: [FindOperationsRequestProfileInput]
  create: [CreateOrderItemOperationsRequestProfileInput]
  upsert: [UpsertOrderItemOperationsRequestProfileInput]
}

input CreateManyOrderOrderItemsInput {
  connect: [FindOrderItemInput]
  create: [CreateOrderOrderItemInput]
  upsert: [UpsertOrderOrderItemInput]
}

input CreateManyOrderOrderPropertiesInput {
  connect: [FindOrderPropertyInput]
  create: [CreateOrderOrderPropertyInput]
  upsert: [UpsertOrderOrderPropertyInput]
}

input CreateManyOrderStatusOrdersInput {
  connect: [FindOrderInput]
  create: [CreateOrderStatusOrderInput]
  upsert: [UpsertOrderStatusOrderInput]
}

input CreateManyParentEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateParentEquipmentsInput]
  upsert: [UpsertParentEquipmentsInput]
}

input CreateManyPersonDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreatePersonDowntimePeriodsInput]
  upsert: [UpsertPersonDowntimePeriodsInput]
}

input CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyPersonnelClassPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreatePersonnelClassPersonnelCapabilityInput]
  upsert: [UpsertPersonnelClassPersonnelCapabilityInput]
}

input CreateManyPersonnelClassPersonnelClassPropertiesInput {
  connect: [FindPersonnelClassPropertyInput]
  create: [CreatePersonnelClassPersonnelClassPropertyInput]
  upsert: [UpsertPersonnelClassPersonnelClassPropertyInput]
}

input CreateManyPersonnelClassPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonnelClassPersonnelPositionInput]
  upsert: [UpsertPersonnelClassPersonnelPositionInput]
}

input CreateManyPersonnelClassPersonsInput {
  connect: [FindPersonInput]
  create: [CreatePersonnelClassPersonsInput]
  upsert: [UpsertPersonnelClassPersonsInput]
}

input CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput]
}

input CreateManyPersonnelPositionPersonnelPositionPropertiesInput {
  connect: [FindPersonnelPositionPropertyInput]
  create: [CreatePersonnelPositionPersonnelPositionPropertyInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPropertyInput]
}

input CreateManyPersonnelPositionPersonsInput {
  connect: [FindPersonInput]
  create: [CreatePersonnelPositionPersonsInput]
  upsert: [UpsertPersonnelPositionPersonsInput]
}

input CreateManyPersonOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreatePersonOperationsRequestPersonnelInput]
  upsert: [UpsertPersonOperationsRequestPersonnelInput]
}

input CreateManyPersonOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyPersonPersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreatePersonPersonnelClassesInput]
  upsert: [UpsertPersonPersonnelClassesInput]
}

input CreateManyPersonPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonPersonnelPositionsInput]
  upsert: [UpsertPersonPersonnelPositionsInput]
}

input CreateManyPersonPersonPropertiesInput {
  connect: [FindPersonPropertyInput]
  create: [CreatePersonPersonPropertyInput]
  upsert: [UpsertPersonPersonPropertyInput]
}

input CreateManyPersonSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonSegmentRequirementPersonnelRequirementInput]
}

input CreateManyScenarioAvailabilityTemplatesInput {
  connect: [FindAvailabilityTemplateInput]
  create: [CreateScenarioAvailabilityTemplateInput]
  upsert: [UpsertScenarioAvailabilityTemplateInput]
}

input CreateManyScenarioCalendarisedAvailabilityTemplateSetsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetInput]
}

input CreateManyScenarioCalendarisedThroughputSetsInput {
  connect: [FindCalendarisedThroughputSetInput]
  create: [CreateScenarioCalendarisedThroughputSetInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetInput]
}

input CreateManyScenarioChangeoverSetsInput {
  connect: [FindChangeoverSetInput]
  create: [CreateScenarioChangeoverSetInput]
  upsert: [UpsertScenarioChangeoverSetInput]
}

input CreateManyScenarioColourSchemesInput {
  connect: [FindColourSchemeInput]
  create: [CreateScenarioColourSchemeInput]
  upsert: [UpsertScenarioColourSchemeInput]
}

input CreateManyScenarioConfigurableApplicationParametersInput {
  connect: [FindConfigurableApplicationParameterInput]
  create: [CreateScenarioConfigurableApplicationParameterInput]
  upsert: [UpsertScenarioConfigurableApplicationParameterInput]
}

input CreateManyScenarioDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreateScenarioDowntimePeriodInput]
  upsert: [UpsertScenarioDowntimePeriodInput]
}

input CreateManyScenarioEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateScenarioEquipmentClassInput]
  upsert: [UpsertScenarioEquipmentClassInput]
}

input CreateManyScenarioEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateScenarioEquipmentInput]
  upsert: [UpsertScenarioEquipmentInput]
}

input CreateManyScenarioHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateScenarioHierarchyScopeInput]
  upsert: [UpsertScenarioHierarchyScopeInput]
}

input CreateManyScenarioMaterialDefinitionsInput {
  connect: [FindMaterialDefinitionInput]
  create: [CreateScenarioMaterialDefinitionInput]
  upsert: [UpsertScenarioMaterialDefinitionInput]
}

input CreateManyScenarioMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateScenarioMaterialLotInput]
  upsert: [UpsertScenarioMaterialLotInput]
}

input CreateManyScenarioOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateScenarioOpenPurchaseOrderInput]
  upsert: [UpsertScenarioOpenPurchaseOrderInput]
}

input CreateManyScenarioOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateScenarioOperationalLocationInput]
  upsert: [UpsertScenarioOperationalLocationInput]
}

input CreateManyScenarioOperationsDefinitionClassesInput {
  connect: [FindOperationsDefinitionClassInput]
  create: [CreateScenarioOperationsDefinitionClassInput]
  upsert: [UpsertScenarioOperationsDefinitionClassInput]
}

input CreateManyScenarioOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateScenarioOperationsRequestInput]
  upsert: [UpsertScenarioOperationsRequestInput]
}

input CreateManyScenarioOptimisationHierarchiesInput {
  connect: [FindOptimisationHierarchyInput]
  create: [CreateScenarioOptimisationHierarchyInput]
  upsert: [UpsertScenarioOptimisationHierarchyInput]
}

input CreateManyScenarioOptimisationPreferredSequencesInput {
  connect: [FindOptimisationPreferredSequenceInput]
  create: [CreateScenarioOptimisationPreferredSequenceInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceInput]
}

input CreateManyScenarioOptimisationPropertiesInput {
  connect: [FindOptimisationPropertyInput]
  create: [CreateScenarioOptimisationPropertyInput]
  upsert: [UpsertScenarioOptimisationPropertyInput]
}

input CreateManyScenarioOrdersInput {
  connect: [FindOrderInput]
  create: [CreateScenarioOrderInput]
  upsert: [UpsertScenarioOrderInput]
}

input CreateManyScenarioOrderStatusesInput {
  connect: [FindOrderStatusInput]
  create: [CreateScenarioOrderStatusInput]
  upsert: [UpsertScenarioOrderStatusInput]
}

input CreateManyScenarioPersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreateScenarioPersonnelClassInput]
  upsert: [UpsertScenarioPersonnelClassInput]
}

input CreateManyScenarioPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreateScenarioPersonnelPositionInput]
  upsert: [UpsertScenarioPersonnelPositionInput]
}

input CreateManyScenarioPersonsInput {
  connect: [FindPersonInput]
  create: [CreateScenarioPersonInput]
  upsert: [UpsertScenarioPersonInput]
}

input CreateManyScenarioTimePeriodsInput {
  connect: [FindTimePeriodInput]
  create: [CreateScenarioTimePeriodInput]
  upsert: [UpsertScenarioTimePeriodInput]
}

input CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementPropertiesInput {
  connect: [FindSegmentRequirementPropertyInput]
  create: [CreateSegmentRequirementSegmentRequirementPropertyInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPropertyInput]
}

input CreateManySegmentRequirementSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementInput]
}

input CreateMaterialDefinitionCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateMaterialDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  calendarisedThroughputSetItems: CreateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateMaterialDefinitionMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialDefinitionMaterialPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
}

input CreateMaterialDefinitionOpenPurchaseOrderInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateMaterialDefinitionParentInput {
  connect: FindMaterialDefinitionInput
  create: CreateMaterialDefinitionInput
  upsert: UpsertMaterialDefinitionInput
}

input CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialLotParentInput {
  connect: FindMaterialLotInput
  create: CreateMaterialLotInput
  upsert: UpsertMaterialLotInput
}

input CreateMaterialLotSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialPropertyInput {
  id: Int
  materialDefinition: CreateMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
}

input CreateOneScenarioScenarioAttributeInput {
  connect: FindScenarioAttributeInput
  create: CreateScenarioScenarioAttributeInput
}

input CreateOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateOperationalLocationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateOperationalLocationMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateOperationalLocationOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreateOperationalLocationParentInput {
  connect: FindOperationalLocationInput
  create: CreateOperationalLocationInput
  upsert: UpsertOperationalLocationInput
}

input CreateOperationalLocationSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
}

input CreateOperationalLocationSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateOperationalLocationSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
}

input CreateOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  operationsType: String
  scenario: CreateScenarioParentInput
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateOperationsDefinitionClassOperationsDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateOperationsDefinitionClassOrderItemInput {
  id: Int
  order: CreateOrderParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOperationsDefinitionClassParentInput {
  connect: FindOperationsDefinitionClassInput
  create: CreateOperationsDefinitionClassInput
  upsert: UpsertOperationsDefinitionClassInput
}

input CreateOperationsDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateOperationsDefinitionOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsDefinitionParentInput {
  connect: FindOperationsDefinitionInput
  create: CreateOperationsDefinitionInput
  upsert: UpsertOperationsDefinitionInput
}

input CreateOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  equipment: CreateEquipmentParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
}

input CreateOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: CreateScenarioParentInput
  operationsRequestProfile: CreateOperationsRequestProfileParentInput
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateOperationsRequestOperationsRequestEquipmentInput {
  id: Int
  equipment: CreateEquipmentParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
}

input CreateOperationsRequestOperationsRequestPersonnelInput {
  id: Int
  person: CreatePersonParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateOperationsRequestParentInput {
  connect: FindOperationsRequestInput
  create: CreateOperationsRequestInput
  upsert: UpsertOperationsRequestInput
}

input CreateOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  person: CreatePersonParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateOperationsRequestProfileInput {
  id: Int
  orderItem: CreateOrderItemParentInput
  startupCost: Float
  quantity: Float
  operationsRequests: CreateManyOperationsRequestProfileOperationsRequestsInput
}

input CreateOperationsRequestProfileOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: CreateScenarioParentInput
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateOperationsRequestProfileParentInput {
  connect: FindOperationsRequestProfileInput
  create: CreateOperationsRequestProfileInput
  upsert: UpsertOperationsRequestProfileInput
}

input CreateOperationsRequestSegmentRequirementInput {
  id: Int
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateOperationsSegmentChangeoverSetItemInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
}

input CreateOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: CreateOperationsSegmentParentInput
  toOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input CreateOperationsSegmentDescendantInput {
  id: Int
  ascendant: CreateOperationsSegmentParentInput
  descendant: CreateOperationsSegmentParentInput
}

input CreateOperationsSegmentEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreateOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  equipment: CreateEquipmentParentInput
}

input CreateOperationsSegmentEquipmentSpecificationParentInput {
  connect: FindOperationsSegmentEquipmentSpecificationInput
  create: CreateOperationsSegmentEquipmentSpecificationInput
  upsert: UpsertOperationsSegmentEquipmentSpecificationInput
}

input CreateOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentMaterialSpecificationParentInput {
  connect: FindOperationsSegmentMaterialSpecificationInput
  create: CreateOperationsSegmentMaterialSpecificationInput
  upsert: UpsertOperationsSegmentMaterialSpecificationInput
}

input CreateOperationsSegmentOperationsRequestInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: CreateScenarioParentInput
  operationsRequestProfile: CreateOperationsRequestProfileParentInput
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  id: Int
  toOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  id: Int
  fromOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: CreateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input CreateOperationsSegmentOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: CreateOperationsDefinitionParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: CreateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: CreateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreateOperationsSegmentOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreateOperationsSegmentParentInput {
  connect: FindOperationsSegmentInput
  create: CreateOperationsSegmentInput
  upsert: UpsertOperationsSegmentInput
}

input CreateOperationsSegmentPersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: CreateOperationsSegmentEquipmentSpecificationParentInput
}

input CreateOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  person: CreatePersonParentInput
}

input CreateOperationsSegmentPersonnelSpecificationParentInput {
  connect: FindOperationsSegmentPersonnelSpecificationInput
  create: CreateOperationsSegmentPersonnelSpecificationInput
  upsert: UpsertOperationsSegmentPersonnelSpecificationInput
}

input CreateOperationsSegmentPropertyInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateOperationsSegmentSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationProperty: CreateOptimisationPropertyParentInput
  description: String
  priority: Int
}

input CreateOptimisationHierarchyEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input CreateOptimisationHierarchyOptimisationHierarchyAttributeInput {
  id: Int
  optimisationProperty: CreateOptimisationPropertyParentInput
  description: String
  priority: Int
}

input CreateOptimisationHierarchyParentInput {
  connect: FindOptimisationHierarchyInput
  create: CreateOptimisationHierarchyInput
  upsert: UpsertOptimisationHierarchyInput
}

input CreateOptimisationPreferredSequenceEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  optimisationProperty: CreateOptimisationPropertyParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  priority: Int!
}

input CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  priority: Int!
}

input CreateOptimisationPreferredSequenceParentInput {
  connect: FindOptimisationPreferredSequenceInput
  create: CreateOptimisationPreferredSequenceInput
  upsert: UpsertOptimisationPreferredSequenceInput
}

input CreateOptimisationPropertyInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  optimisationPropertyValues: CreateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: CreateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input CreateOptimisationPropertyOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  description: String
  priority: Int
}

input CreateOptimisationPropertyOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyOptimisationPropertyValueInput {
  id: Int
  value: String
  dataType: String
  changeoverSetItemsFromValue: CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: CreateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: CreateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyParentInput {
  connect: FindOptimisationPropertyInput
  create: CreateOptimisationPropertyInput
  upsert: UpsertOptimisationPropertyInput
}

input CreateOptimisationPropertyValueChangeoverSetItemFromValueInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateOptimisationPropertyValueChangeoverSetItemToValueInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateOptimisationPropertyValueColourSchemeItemInput {
  id: Int
  colourScheme: CreateColourSchemeParentInput
  red: Int
  green: Int
  blue: Int
}

input CreateOptimisationPropertyValueInput {
  id: Int
  optimisationProperty: CreateOptimisationPropertyParentInput
  value: String
  dataType: String
  changeoverSetItemsFromValue: CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: CreateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: CreateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyValueMaterialPropertyInput {
  id: Int
  materialDefinition: CreateMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  priority: Int!
}

input CreateOptimisationPropertyValueParentInput {
  connect: FindOptimisationPropertyValueInput
  create: CreateOptimisationPropertyValueInput
  upsert: UpsertOptimisationPropertyValueInput
}

input CreateOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: CreateOrderStatusParentInput
  priority: Int
  scenario: CreateScenarioParentInput
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateOrderItemInput {
  id: Int
  order: CreateOrderParentInput
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOrderItemOperationsRequestProfileInput {
  id: Int
  startupCost: Float
  quantity: Float
  operationsRequests: CreateManyOperationsRequestProfileOperationsRequestsInput
}

input CreateOrderItemParentInput {
  connect: FindOrderItemInput
  create: CreateOrderItemInput
  upsert: UpsertOrderItemInput
}

input CreateOrderOrderItemInput {
  id: Int
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOrderOrderPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreateOrderParentInput {
  connect: FindOrderInput
  create: CreateOrderInput
  upsert: UpsertOrderInput
}

input CreateOrderPropertyInput {
  id: Int
  order: CreateOrderParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateOrderStatusInput {
  id: Int
  status: String
  scenario: CreateScenarioParentInput
  orders: CreateManyOrderStatusOrdersInput
}

input CreateOrderStatusOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: CreateScenarioParentInput
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateOrderStatusParentInput {
  connect: FindOrderStatusInput
  create: CreateOrderStatusInput
  upsert: UpsertOrderStatusInput
}

input CreateParentEquipmentsInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreatePersonDowntimePeriodInput {
  id: Int
  person: CreatePersonParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
}

input CreatePersonDowntimePeriodsInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: CreateScenarioParentInput
  equipments: CreateManyDowntimePeriodEquipmentsInput
  persons: CreateManyDowntimePeriodPersonsInput
}

input CreatePersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreatePersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreatePersonnelClassInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  persons: CreateManyPersonnelClassPersonsInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreatePersonnelClassParentInput {
  connect: FindPersonnelClassInput
  create: CreatePersonnelClassInput
  upsert: UpsertPersonnelClassInput
}

input CreatePersonnelClassPersonMemberInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  person: CreatePersonParentInput
}

input CreatePersonnelClassPersonnelCapabilityInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreatePersonnelClassPersonnelClassPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreatePersonnelClassPersonnelPositionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  persons: CreateManyPersonnelPositionPersonsInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreatePersonnelClassPersonsInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreatePersonnelClassPropertyInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
}

input CreatePersonnelClassSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreatePersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  persons: CreateManyPersonnelPositionPersonsInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreatePersonnelPositionParentInput {
  connect: FindPersonnelPositionInput
  create: CreatePersonnelPositionInput
  upsert: UpsertPersonnelPositionInput
}

input CreatePersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  person: CreatePersonParentInput
}

input CreatePersonnelPositionPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreatePersonnelPositionPersonsInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreatePersonnelPositionPropertyInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
}

input CreatePersonOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  operationsSegmentPersonnelSpecification: CreateOperationsSegmentPersonnelSpecificationParentInput
}

input CreatePersonOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSetItems: CreateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: CreateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input CreatePersonParentInput {
  connect: FindPersonInput
  create: CreatePersonInput
  upsert: UpsertPersonInput
}

input CreatePersonPersonnelClassesInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  persons: CreateManyPersonnelClassPersonsInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreatePersonPersonnelPositionsInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  persons: CreateManyPersonnelPositionPersonsInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreatePersonPersonPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreatePersonPropertyInput {
  id: Int
  person: CreatePersonParentInput
  externalId: String
  value: String
  dataType: String
}

input CreatePersonSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreateScenarioAttributeInput {
  id: Int
  scenario: CreateScenarioParentInput
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input CreateScenarioAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  availabilityTemplateItems: CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input CreateScenarioCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems: CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: CreateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input CreateScenarioCalendarisedThroughputSetInput {
  id: Int
  name: String
  operationsSegments: CreateManyCalendarisedThroughputSetOperationsSegmentsInput
  calendarisedThroughputSetItems: CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
}

input CreateScenarioChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems: CreateManyChangeoverSetChangeoverSetItemsInput
  equipments: CreateManyChangeoverSetEquipmentsInput
}

input CreateScenarioColourSchemeInput {
  id: Int
  name: String
  colourSchemeItems: CreateManyColourSchemeColourSchemeItemsInput
}

input CreateScenarioConfigurableApplicationParameterInput {
  id: Int
  name: String!
  dataType: String!
  valueAsString: String
}

input CreateScenarioDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipments: CreateManyDowntimePeriodEquipmentsInput
  persons: CreateManyDowntimePeriodPersonsInput
}

input CreateScenarioEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  equipments: CreateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateScenarioEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  childEquipments: CreateManyParentEquipmentsInput
  parentEquipments: CreateManyChildEquipmentsInput
  descendantEquipments: CreateManyAscendantEquipmentsInput
  ascendantEquipments: CreateManyDescendantEquipmentsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: CreateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: CreateManyEquipmentDowntimePeriodsInput
}

input CreateScenarioHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  parent: CreateHierarchyScopeParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateScenarioInput {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes: CreateManyScenarioHierarchyScopesInput
  optimisationProperties: CreateManyScenarioOptimisationPropertiesInput
  changeoverSets: CreateManyScenarioChangeoverSetsInput
  availabilityTemplates: CreateManyScenarioAvailabilityTemplatesInput
  calendarisedAvailabilityTemplateSets: CreateManyScenarioCalendarisedAvailabilityTemplateSetsInput
  equipments: CreateManyScenarioEquipmentsInput
  equipmentClasses: CreateManyScenarioEquipmentClassesInput
  materialDefinitions: CreateManyScenarioMaterialDefinitionsInput
  personnelClasses: CreateManyScenarioPersonnelClassesInput
  personnelPositions: CreateManyScenarioPersonnelPositionsInput
  persons: CreateManyScenarioPersonsInput
  operationsDefinitionClasses: CreateManyScenarioOperationsDefinitionClassesInput
  operationalLocations: CreateManyScenarioOperationalLocationsInput
  calendarisedThroughputSets: CreateManyScenarioCalendarisedThroughputSetsInput
  timePeriods: CreateManyScenarioTimePeriodsInput
  orderStatuses: CreateManyScenarioOrderStatusesInput
  orders: CreateManyScenarioOrdersInput
  operationsRequests: CreateManyScenarioOperationsRequestsInput
  materialLots: CreateManyScenarioMaterialLotsInput
  openPurchaseOrders: CreateManyScenarioOpenPurchaseOrdersInput
  configurableApplicationParameters: CreateManyScenarioConfigurableApplicationParametersInput
  colourSchemes: CreateManyScenarioColourSchemesInput
  downtimePeriods: CreateManyScenarioDowntimePeriodsInput
  optimisationHierarchies: CreateManyScenarioOptimisationHierarchiesInput
  scenarioAttribute: CreateOneScenarioScenarioAttributeInput
  optimisationPreferredSequences: CreateManyScenarioOptimisationPreferredSequencesInput
}

input CreateScenarioMaterialDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  calendarisedThroughputSetItems: CreateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateScenarioMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateScenarioOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

input CreateScenarioOperationalLocationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateScenarioOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  operationsType: String
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateScenarioOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestProfile: CreateOperationsRequestProfileParentInput
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateScenarioOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  equipments: CreateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input CreateScenarioOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  optimisationProperty: CreateOptimisationPropertyParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateScenarioOptimisationPropertyInput {
  id: Int
  name: String
  optimisationPropertyValues: CreateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: CreateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input CreateScenarioOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: CreateOrderStatusParentInput
  priority: Int
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateScenarioOrderStatusInput {
  id: Int
  status: String
  orders: CreateManyOrderStatusOrdersInput
}

input CreateScenarioParentInput {
  connect: FindScenarioInput
  create: CreateScenarioInput
  upsert: UpsertScenarioInput
}

input CreateScenarioPersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClasses: CreateManyPersonPersonnelClassesInput
  personnelPositions: CreateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: CreateManyPersonDowntimePeriodsInput
}

input CreateScenarioPersonnelClassInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  persons: CreateManyPersonnelClassPersonsInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreateScenarioPersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  persons: CreateManyPersonnelPositionPersonsInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreateScenarioScenarioAttributeInput {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input CreateScenarioTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
}

input CreateSegmentRequirementDescendantInput {
  id: Int
  ascendant: CreateSegmentRequirementParentInput
  descendant: CreateSegmentRequirementParentInput
}

input CreateSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementMaterialRequirementParentInput {
  connect: FindSegmentRequirementMaterialRequirementInput
  create: CreateSegmentRequirementMaterialRequirementInput
  upsert: UpsertSegmentRequirementMaterialRequirementInput
}

input CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementParentInput {
  connect: FindSegmentRequirementInput
  create: CreateSegmentRequirementInput
  upsert: UpsertSegmentRequirementInput
}

input CreateSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreateSegmentRequirementPropertyInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateSegmentRequirementSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: CreateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: CreateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateSegmentRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreateSegmentRequirementSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input CreateTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
  scenario: CreateScenarioParentInput
}

type DowntimePeriod {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: Scenario
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
}

type DowntimePeriodConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [DowntimePeriodEdge]
  downtimePeriods: [DowntimePeriod]
}

type DowntimePeriodEdge {
  node: DowntimePeriod
  cursor: String
}

type Equipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type EquipmentCapability {
  id: Int
  equipment: Equipment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type EquipmentCapabilityConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentCapabilityEdge]
  equipmentCapabilities: [EquipmentCapability]
}

type EquipmentCapabilityEdge {
  node: EquipmentCapability
  cursor: String
}

type EquipmentChild {
  id: Int
  parent: Equipment
  child: Equipment
}

type EquipmentChildConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentChildEdge]
  equipmentChildren: [EquipmentChild]
}

type EquipmentChildEdge {
  node: EquipmentChild
  cursor: String
}

type EquipmentClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  scenario: Scenario
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentClassOperationsSegmentEquipmentSpecificationConnection
}

type EquipmentClassConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentClassEdge]
  equipmentClasses: [EquipmentClass]
}

type EquipmentClassEdge {
  node: EquipmentClass
  cursor: String
}

type EquipmentClassEquipmentMember {
  id: Int
  equipmentClass: EquipmentClass
  equipment: Equipment
}

type EquipmentClassEquipmentMemberConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentClassEquipmentMemberEdge]
  equipmentClassEquipmentMembers: [EquipmentClassEquipmentMember]
}

type EquipmentClassEquipmentMemberEdge {
  node: EquipmentClassEquipmentMember
  cursor: String
}

type EquipmentClassOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type EquipmentClassOperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [EquipmentClassOperationsSegmentEquipmentSpecificationsEdge]
  operationsSegmentEquipmentSpecifications: [EquipmentClass]
}

type EquipmentClassOperationsSegmentEquipmentSpecificationsEdge {
  node: EquipmentClassOperationsSegmentEquipmentSpecification
  cursor: String
}

type EquipmentConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentEdge]
  equipments: [Equipment]
}

type EquipmentDescendant {
  id: Int
  ascendant: Equipment
  descendant: Equipment
}

type EquipmentDescendantConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentDescendantEdge]
  equipmentDescendants: [EquipmentDescendant]
}

type EquipmentDescendantEdge {
  node: EquipmentDescendant
  cursor: String
}

type EquipmentDowntimePeriod {
  id: Int
  equipment: Equipment
  downtimePeriod: DowntimePeriod
}

type EquipmentDowntimePeriodConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentDowntimePeriodEdge]
  equipmentDowntimePeriods: [EquipmentDowntimePeriod]
}

type EquipmentDowntimePeriodEdge {
  node: EquipmentDowntimePeriod
  cursor: String
}

type EquipmentEdge {
  node: Equipment
  cursor: String
}

type EquipmentEquipmentCapabilitiesEdge {
  node: EquipmentEquipmentCapability
  cursor: String
}

type EquipmentEquipmentCapability {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type EquipmentEquipmentCapabilityConnection {
  pageInfo: PageInfo
  edges: [EquipmentEquipmentCapabilitiesEdge]
  equipmentCapabilities: [Equipment]
}

type EquipmentEquipmentPropertiesEdge {
  node: EquipmentEquipmentProperty
  cursor: String
}

type EquipmentEquipmentProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type EquipmentEquipmentPropertyConnection {
  pageInfo: PageInfo
  edges: [EquipmentEquipmentPropertiesEdge]
  equipmentProperties: [Equipment]
}

type EquipmentHierarchyScope {
  id: Int
  externalId: String
  parent: HierarchyScope
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeHierarchyScopeConnection
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  equipmentsConnection(where: FilterHierarchyScopeEquipmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentConnection
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  equipmentClassesConnection(where: FilterHierarchyScopeEquipmentClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentClassConnection
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  materialDefinitionsConnection(where: FilterHierarchyScopeMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialDefinitionConnection
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelClassesConnection(where: FilterHierarchyScopePersonnelClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelClassConnection
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  personnelPositionsConnection(where: FilterHierarchyScopePersonnelPositionInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelPositionConnection
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  personsConnection(where: FilterHierarchyScopePersonInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonConnection
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterHierarchyScopeOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionClassConnection
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsDefinitionsConnection(where: FilterHierarchyScopeOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionConnection
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  operationsSegmentsConnection(where: FilterHierarchyScopeOperationsSegmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentConnection
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterHierarchyScopeEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentCapabilityConnection
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  personnelCapabilitiesConnection(where: FilterHierarchyScopePersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelCapabilityConnection
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationalLocationsConnection(where: FilterHierarchyScopeOperationalLocationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationalLocationConnection
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  operationsRequestsConnection(where: FilterHierarchyScopeOperationsRequestInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsRequestConnection
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  segmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementConnection
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  materialLotsConnection(where: FilterHierarchyScopeMaterialLotInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementEquipmentRequirementConnection
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterHierarchyScopeOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOpenPurchaseOrderConnection
}

type EquipmentHierarchyScopeConnection {
  pageInfo: PageInfo
  edges: [EquipmentHierarchyScopesEdge]
  hierarchyScopes: [Equipment]
}

type EquipmentHierarchyScopesEdge {
  node: EquipmentHierarchyScope
  cursor: String
}

type EquipmentOperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
}

type EquipmentOperationsRequestEquipmentConnection {
  pageInfo: PageInfo
  edges: [EquipmentOperationsRequestEquipmentsEdge]
  operationsRequestEquipments: [Equipment]
}

type EquipmentOperationsRequestEquipmentsEdge {
  node: EquipmentOperationsRequestEquipment
  cursor: String
}

type EquipmentOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type EquipmentOperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [EquipmentOperationsSegmentEquipmentSpecificationsEdge]
  operationsSegmentEquipmentSpecifications: [Equipment]
}

type EquipmentOperationsSegmentEquipmentSpecificationsEdge {
  node: EquipmentOperationsSegmentEquipmentSpecification
  cursor: String
}

type EquipmentProperty {
  id: Int
  equipment: Equipment
  externalId: String
  value: String
  dataType: String
}

type EquipmentPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [EquipmentPropertyEdge]
  equipmentProperties: [EquipmentProperty]
}

type EquipmentPropertyEdge {
  node: EquipmentProperty
  cursor: String
}

type EquipmentSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
}

type EquipmentSegmentRequirementEquipmentRequirementConnection {
  pageInfo: PageInfo
  edges: [EquipmentSegmentRequirementEquipmentRequirementsEdge]
  segmentRequirementEquipmentRequirements: [Equipment]
}

type EquipmentSegmentRequirementEquipmentRequirementsEdge {
  node: EquipmentSegmentRequirementEquipmentRequirement
  cursor: String
}

input FilterAscendantEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterAscendantEquipmentsInput]
  or: [FilterAscendantEquipmentsInput]
  not: [FilterAscendantEquipmentsInput]
  descendant: FilterEquipmentInput
}

input FilterAscendantOperationsSegmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterAscendantOperationsSegmentsInput]
  or: [FilterAscendantOperationsSegmentsInput]
  not: [FilterAscendantOperationsSegmentsInput]
  descendant: FilterOperationsSegmentInput
}

input FilterAscendantSegmentRequirementsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterAscendantSegmentRequirementsInput]
  or: [FilterAscendantSegmentRequirementsInput]
  not: [FilterAscendantSegmentRequirementsInput]
  descendant: FilterSegmentRequirementInput
}

input FilterAvailabilityTemplateAvailabilityTemplateItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  dayOfTheWeek: Int
  dayOfTheWeek_lt: Int
  dayOfTheWeek_le: Int
  dayOfTheWeek_ge: Int
  dayOfTheWeek_gt: Int
  dayOfTheWeek_ne: Int
  dayOfTheWeek_null: Boolean
  dayOfTheWeek_in: [Int]
  startTime: Int
  startTime_lt: Int
  startTime_le: Int
  startTime_ge: Int
  startTime_gt: Int
  startTime_ne: Int
  startTime_null: Boolean
  startTime_in: [Int]
  endTime: Int
  endTime_lt: Int
  endTime_le: Int
  endTime_ge: Int
  endTime_gt: Int
  endTime_ne: Int
  endTime_null: Boolean
  endTime_in: [Int]
  and: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  or: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  not: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
}

input FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
}

input FilterAvailabilityTemplateInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterAvailabilityTemplateInput]
  or: [FilterAvailabilityTemplateInput]
  not: [FilterAvailabilityTemplateInput]
  scenario: FilterScenarioInput
  availabilityTemplateItems_some: FilterAvailabilityTemplateAvailabilityTemplateItemInput
  availabilityTemplateItems_none: FilterAvailabilityTemplateAvailabilityTemplateItemInput
  calendarisedAvailabilityTemplateSetItems_some: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
  calendarisedAvailabilityTemplateSetItems_none: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
}

input FilterAvailabilityTemplateItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  dayOfTheWeek: Int
  dayOfTheWeek_lt: Int
  dayOfTheWeek_le: Int
  dayOfTheWeek_ge: Int
  dayOfTheWeek_gt: Int
  dayOfTheWeek_ne: Int
  dayOfTheWeek_null: Boolean
  dayOfTheWeek_in: [Int]
  startTime: Int
  startTime_lt: Int
  startTime_le: Int
  startTime_ge: Int
  startTime_gt: Int
  startTime_ne: Int
  startTime_null: Boolean
  startTime_in: [Int]
  endTime: Int
  endTime_lt: Int
  endTime_le: Int
  endTime_ge: Int
  endTime_gt: Int
  endTime_ne: Int
  endTime_null: Boolean
  endTime_in: [Int]
  and: [FilterAvailabilityTemplateItemInput]
  or: [FilterAvailabilityTemplateItemInput]
  not: [FilterAvailabilityTemplateItemInput]
  availabilityTemplate: FilterAvailabilityTemplateInput
}

input FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  availabilityTemplate: FilterAvailabilityTemplateInput
}

input FilterCalendarisedAvailabilityTemplateSetEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  or: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  not: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedAvailabilityTemplateSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetInput]
  or: [FilterCalendarisedAvailabilityTemplateSetInput]
  not: [FilterCalendarisedAvailabilityTemplateSetInput]
  scenario: FilterScenarioInput
  calendarisedAvailabilityTemplateSetItems_some: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  calendarisedAvailabilityTemplateSetItems_none: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  equipments_some: FilterCalendarisedAvailabilityTemplateSetEquipmentInput
  equipments_none: FilterCalendarisedAvailabilityTemplateSetEquipmentInput
  persons_some: FilterCalendarisedAvailabilityTemplateSetPersonInput
  persons_none: FilterCalendarisedAvailabilityTemplateSetPersonInput
}

input FilterCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  availabilityTemplate: FilterAvailabilityTemplateInput
}

input FilterCalendarisedAvailabilityTemplateSetPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  or: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  not: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  or: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  not: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  materialDefinition: FilterMaterialDefinitionInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterCalendarisedThroughputSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterCalendarisedThroughputSetInput]
  or: [FilterCalendarisedThroughputSetInput]
  not: [FilterCalendarisedThroughputSetInput]
  scenario: FilterScenarioInput
  operationsSegments_some: FilterCalendarisedThroughputSetOperationsSegmentInput
  operationsSegments_none: FilterCalendarisedThroughputSetOperationsSegmentInput
  calendarisedThroughputSetItems_some: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput
}

input FilterCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterCalendarisedThroughputSetItemInput]
  or: [FilterCalendarisedThroughputSetItemInput]
  not: [FilterCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  materialDefinition: FilterMaterialDefinitionInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterCalendarisedThroughputSetOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterCalendarisedThroughputSetOperationsSegmentInput]
  or: [FilterCalendarisedThroughputSetOperationsSegmentInput]
  not: [FilterCalendarisedThroughputSetOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
  changeoverSetItems_some: FilterOperationsSegmentChangeoverSetItemInput
  changeoverSetItems_none: FilterOperationsSegmentChangeoverSetItemInput
  operationsSegments_some: FilterOperationsSegmentOperationsSegmentInput
  operationsSegments_none: FilterOperationsSegmentOperationsSegmentInput
  equipmentCapabilities_some: FilterOperationsSegmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterOperationsSegmentEquipmentCapabilityInput
  personnelCapabilities_some: FilterOperationsSegmentPersonnelCapabilityInput
  personnelCapabilities_none: FilterOperationsSegmentPersonnelCapabilityInput
  descendantOperationsSegments_some: FilterAscendantOperationsSegmentsInput
  descendantOperationsSegments_none: FilterAscendantOperationsSegmentsInput
  ascendantOperationsSegments_some: FilterDescendantOperationsSegmentsInput
  ascendantOperationsSegments_none: FilterDescendantOperationsSegmentsInput
  operationsSegmentProperties_some: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentProperties_none: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentDependenciesFromOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesFromOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentMaterialSpecifications_some: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterOperationsSegmentOperationsRequestInput
  operationsRequests_none: FilterOperationsSegmentOperationsRequestInput
  segmentRequirements_some: FilterOperationsSegmentSegmentRequirementInput
  segmentRequirements_none: FilterOperationsSegmentSegmentRequirementInput
}

input FilterChangeoverSetChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterChangeoverSetChangeoverSetItemInput]
  or: [FilterChangeoverSetChangeoverSetItemInput]
  not: [FilterChangeoverSetChangeoverSetItemInput]
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterChangeoverSetEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterChangeoverSetEquipmentInput]
  or: [FilterChangeoverSetEquipmentInput]
  not: [FilterChangeoverSetEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterChangeoverSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  defaultTime: Float
  defaultTime_lt: Float
  defaultTime_le: Float
  defaultTime_ge: Float
  defaultTime_gt: Float
  defaultTime_ne: Float
  defaultTime_null: Boolean
  defaultTime_in: [Float]
  and: [FilterChangeoverSetInput]
  or: [FilterChangeoverSetInput]
  not: [FilterChangeoverSetInput]
  scenario: FilterScenarioInput
  changeoverSetItems_some: FilterChangeoverSetChangeoverSetItemInput
  changeoverSetItems_none: FilterChangeoverSetChangeoverSetItemInput
  equipments_some: FilterChangeoverSetEquipmentInput
  equipments_none: FilterChangeoverSetEquipmentInput
}

input FilterChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterChangeoverSetItemInput]
  or: [FilterChangeoverSetItemInput]
  not: [FilterChangeoverSetItemInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterChildEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterChildEquipmentsInput]
  or: [FilterChildEquipmentsInput]
  not: [FilterChildEquipmentsInput]
  parent: FilterEquipmentInput
}

input FilterColourSchemeColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterColourSchemeColourSchemeItemInput]
  or: [FilterColourSchemeColourSchemeItemInput]
  not: [FilterColourSchemeColourSchemeItemInput]
  propertyValue: FilterOptimisationPropertyValueInput
}

input FilterColourSchemeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterColourSchemeInput]
  or: [FilterColourSchemeInput]
  not: [FilterColourSchemeInput]
  scenario: FilterScenarioInput
  colourSchemeItems_some: FilterColourSchemeColourSchemeItemInput
  colourSchemeItems_none: FilterColourSchemeColourSchemeItemInput
}

input FilterColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterColourSchemeItemInput]
  or: [FilterColourSchemeItemInput]
  not: [FilterColourSchemeItemInput]
  colourScheme: FilterColourSchemeInput
  propertyValue: FilterOptimisationPropertyValueInput
}

input FilterConfigurableApplicationParameterInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  valueAsString: String
  valueAsString_lt: String
  valueAsString_le: String
  valueAsString_ge: String
  valueAsString_gt: String
  valueAsString_ne: String
  valueAsString_null: Boolean
  valueAsString_in: [String]
  valueAsString_like: String
  and: [FilterConfigurableApplicationParameterInput]
  or: [FilterConfigurableApplicationParameterInput]
  not: [FilterConfigurableApplicationParameterInput]
  scenario: FilterScenarioInput
}

input FilterDescendantEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDescendantEquipmentsInput]
  or: [FilterDescendantEquipmentsInput]
  not: [FilterDescendantEquipmentsInput]
  ascendant: FilterEquipmentInput
}

input FilterDescendantOperationsSegmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDescendantOperationsSegmentsInput]
  or: [FilterDescendantOperationsSegmentsInput]
  not: [FilterDescendantOperationsSegmentsInput]
  ascendant: FilterOperationsSegmentInput
}

input FilterDescendantSegmentRequirementsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDescendantSegmentRequirementsInput]
  or: [FilterDescendantSegmentRequirementsInput]
  not: [FilterDescendantSegmentRequirementsInput]
  ascendant: FilterSegmentRequirementInput
}

input FilterDowntimePeriodEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDowntimePeriodEquipmentsInput]
  or: [FilterDowntimePeriodEquipmentsInput]
  not: [FilterDowntimePeriodEquipmentsInput]
  equipment: FilterEquipmentInput
}

input FilterDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  percentageAvailability: Float
  percentageAvailability_lt: Float
  percentageAvailability_le: Float
  percentageAvailability_ge: Float
  percentageAvailability_gt: Float
  percentageAvailability_ne: Float
  percentageAvailability_null: Boolean
  percentageAvailability_in: [Float]
  and: [FilterDowntimePeriodInput]
  or: [FilterDowntimePeriodInput]
  not: [FilterDowntimePeriodInput]
  scenario: FilterScenarioInput
  equipments_some: FilterDowntimePeriodEquipmentsInput
  equipments_none: FilterDowntimePeriodEquipmentsInput
  persons_some: FilterDowntimePeriodPersonsInput
  persons_none: FilterDowntimePeriodPersonsInput
}

input FilterDowntimePeriodPersonsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDowntimePeriodPersonsInput]
  or: [FilterDowntimePeriodPersonsInput]
  not: [FilterDowntimePeriodPersonsInput]
  person: FilterPersonInput
}

input FilterEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterEquipmentCapabilityInput]
  or: [FilterEquipmentCapabilityInput]
  not: [FilterEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterEquipmentChildInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentChildInput]
  or: [FilterEquipmentChildInput]
  not: [FilterEquipmentChildInput]
  parent: FilterEquipmentInput
  child: FilterEquipmentInput
}

input FilterEquipmentClassEquipmentMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentClassEquipmentMemberInput]
  or: [FilterEquipmentClassEquipmentMemberInput]
  not: [FilterEquipmentClassEquipmentMemberInput]
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
}

input FilterEquipmentClassEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentClassEquipmentsInput]
  or: [FilterEquipmentClassEquipmentsInput]
  not: [FilterEquipmentClassEquipmentsInput]
  equipment: FilterEquipmentInput
}

input FilterEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterEquipmentClassInput]
  or: [FilterEquipmentClassInput]
  not: [FilterEquipmentClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  equipments_some: FilterEquipmentClassEquipmentsInput
  equipments_none: FilterEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput
}

input FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  or: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  not: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterEquipmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentDescendantInput]
  or: [FilterEquipmentDescendantInput]
  not: [FilterEquipmentDescendantInput]
  ascendant: FilterEquipmentInput
  descendant: FilterEquipmentInput
}

input FilterEquipmentDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentDowntimePeriodInput]
  or: [FilterEquipmentDowntimePeriodInput]
  not: [FilterEquipmentDowntimePeriodInput]
  equipment: FilterEquipmentInput
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterEquipmentDowntimePeriodsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentDowntimePeriodsInput]
  or: [FilterEquipmentDowntimePeriodsInput]
  not: [FilterEquipmentDowntimePeriodsInput]
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterEquipmentEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterEquipmentEquipmentCapabilityInput]
  or: [FilterEquipmentEquipmentCapabilityInput]
  not: [FilterEquipmentEquipmentCapabilityInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterEquipmentEquipmentClassesInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentClassesInput]
  or: [FilterEquipmentEquipmentClassesInput]
  not: [FilterEquipmentEquipmentClassesInput]
  equipmentClass: FilterEquipmentClassInput
}

input FilterEquipmentEquipmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterEquipmentEquipmentPropertyInput]
  or: [FilterEquipmentEquipmentPropertyInput]
  not: [FilterEquipmentEquipmentPropertyInput]
}

input FilterEquipmentHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterEquipmentHierarchyScopeInput]
  or: [FilterEquipmentHierarchyScopeInput]
  not: [FilterEquipmentHierarchyScopeInput]
  parent: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterHierarchyScopeHierarchyScopeInput
  hierarchyScopes_none: FilterHierarchyScopeHierarchyScopeInput
  equipments_some: FilterHierarchyScopeEquipmentInput
  equipments_none: FilterHierarchyScopeEquipmentInput
  equipmentClasses_some: FilterHierarchyScopeEquipmentClassInput
  equipmentClasses_none: FilterHierarchyScopeEquipmentClassInput
  materialDefinitions_some: FilterHierarchyScopeMaterialDefinitionInput
  materialDefinitions_none: FilterHierarchyScopeMaterialDefinitionInput
  personnelClasses_some: FilterHierarchyScopePersonnelClassInput
  personnelClasses_none: FilterHierarchyScopePersonnelClassInput
  personnelPositions_some: FilterHierarchyScopePersonnelPositionInput
  personnelPositions_none: FilterHierarchyScopePersonnelPositionInput
  persons_some: FilterHierarchyScopePersonInput
  persons_none: FilterHierarchyScopePersonInput
  operationsDefinitionClasses_some: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitions_some: FilterHierarchyScopeOperationsDefinitionInput
  operationsDefinitions_none: FilterHierarchyScopeOperationsDefinitionInput
  operationsSegments_some: FilterHierarchyScopeOperationsSegmentInput
  operationsSegments_none: FilterHierarchyScopeOperationsSegmentInput
  equipmentCapabilities_some: FilterHierarchyScopeEquipmentCapabilityInput
  equipmentCapabilities_none: FilterHierarchyScopeEquipmentCapabilityInput
  personnelCapabilities_some: FilterHierarchyScopePersonnelCapabilityInput
  personnelCapabilities_none: FilterHierarchyScopePersonnelCapabilityInput
  operationalLocations_some: FilterHierarchyScopeOperationalLocationInput
  operationalLocations_none: FilterHierarchyScopeOperationalLocationInput
  operationsSegmentMaterialSpecifications_some: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterHierarchyScopeOperationsRequestInput
  operationsRequests_none: FilterHierarchyScopeOperationsRequestInput
  segmentRequirements_some: FilterHierarchyScopeSegmentRequirementInput
  segmentRequirements_none: FilterHierarchyScopeSegmentRequirementInput
  materialLots_some: FilterHierarchyScopeMaterialLotInput
  materialLots_none: FilterHierarchyScopeMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  openPurchaseOrders_some: FilterHierarchyScopeOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterHierarchyScopeOpenPurchaseOrderInput
}

input FilterEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterEquipmentInput]
  or: [FilterEquipmentInput]
  not: [FilterEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  childEquipments_some: FilterParentEquipmentsInput
  childEquipments_none: FilterParentEquipmentsInput
  parentEquipments_some: FilterChildEquipmentsInput
  parentEquipments_none: FilterChildEquipmentsInput
  descendantEquipments_some: FilterAscendantEquipmentsInput
  descendantEquipments_none: FilterAscendantEquipmentsInput
  ascendantEquipments_some: FilterDescendantEquipmentsInput
  ascendantEquipments_none: FilterDescendantEquipmentsInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClasses_some: FilterEquipmentEquipmentClassesInput
  equipmentClasses_none: FilterEquipmentEquipmentClassesInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  downtimePeriods_some: FilterEquipmentDowntimePeriodsInput
  downtimePeriods_none: FilterEquipmentDowntimePeriodsInput
}

input FilterEquipmentOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentOperationsRequestEquipmentInput]
  or: [FilterEquipmentOperationsRequestEquipmentInput]
  not: [FilterEquipmentOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
}

input FilterEquipmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  or: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  not: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterEquipmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterEquipmentPropertyInput]
  or: [FilterEquipmentPropertyInput]
  not: [FilterEquipmentPropertyInput]
  equipment: FilterEquipmentInput
}

input FilterEquipmentSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  or: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  not: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterHierarchyScopeDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterHierarchyScopeDescendantInput]
  or: [FilterHierarchyScopeDescendantInput]
  not: [FilterHierarchyScopeDescendantInput]
  ascendant: FilterHierarchyScopeInput
  descendant: FilterHierarchyScopeInput
}

input FilterHierarchyScopeEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterHierarchyScopeEquipmentCapabilityInput]
  or: [FilterHierarchyScopeEquipmentCapabilityInput]
  not: [FilterHierarchyScopeEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterHierarchyScopeEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterHierarchyScopeEquipmentClassInput]
  or: [FilterHierarchyScopeEquipmentClassInput]
  not: [FilterHierarchyScopeEquipmentClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeEquipmentInput]
  or: [FilterHierarchyScopeEquipmentInput]
  not: [FilterHierarchyScopeEquipmentInput]
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterHierarchyScopeHierarchyScopeInput]
  or: [FilterHierarchyScopeHierarchyScopeInput]
  not: [FilterHierarchyScopeHierarchyScopeInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterHierarchyScopeInput]
  or: [FilterHierarchyScopeInput]
  not: [FilterHierarchyScopeInput]
  equipment: FilterEquipmentInput
  parent: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterHierarchyScopeHierarchyScopeInput
  hierarchyScopes_none: FilterHierarchyScopeHierarchyScopeInput
  equipments_some: FilterHierarchyScopeEquipmentInput
  equipments_none: FilterHierarchyScopeEquipmentInput
  equipmentClasses_some: FilterHierarchyScopeEquipmentClassInput
  equipmentClasses_none: FilterHierarchyScopeEquipmentClassInput
  materialDefinitions_some: FilterHierarchyScopeMaterialDefinitionInput
  materialDefinitions_none: FilterHierarchyScopeMaterialDefinitionInput
  personnelClasses_some: FilterHierarchyScopePersonnelClassInput
  personnelClasses_none: FilterHierarchyScopePersonnelClassInput
  personnelPositions_some: FilterHierarchyScopePersonnelPositionInput
  personnelPositions_none: FilterHierarchyScopePersonnelPositionInput
  persons_some: FilterHierarchyScopePersonInput
  persons_none: FilterHierarchyScopePersonInput
  operationsDefinitionClasses_some: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitions_some: FilterHierarchyScopeOperationsDefinitionInput
  operationsDefinitions_none: FilterHierarchyScopeOperationsDefinitionInput
  operationsSegments_some: FilterHierarchyScopeOperationsSegmentInput
  operationsSegments_none: FilterHierarchyScopeOperationsSegmentInput
  equipmentCapabilities_some: FilterHierarchyScopeEquipmentCapabilityInput
  equipmentCapabilities_none: FilterHierarchyScopeEquipmentCapabilityInput
  personnelCapabilities_some: FilterHierarchyScopePersonnelCapabilityInput
  personnelCapabilities_none: FilterHierarchyScopePersonnelCapabilityInput
  operationalLocations_some: FilterHierarchyScopeOperationalLocationInput
  operationalLocations_none: FilterHierarchyScopeOperationalLocationInput
  operationsSegmentMaterialSpecifications_some: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterHierarchyScopeOperationsRequestInput
  operationsRequests_none: FilterHierarchyScopeOperationsRequestInput
  segmentRequirements_some: FilterHierarchyScopeSegmentRequirementInput
  segmentRequirements_none: FilterHierarchyScopeSegmentRequirementInput
  materialLots_some: FilterHierarchyScopeMaterialLotInput
  materialLots_none: FilterHierarchyScopeMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  openPurchaseOrders_some: FilterHierarchyScopeOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterHierarchyScopeOpenPurchaseOrderInput
}

input FilterHierarchyScopeMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeMaterialDefinitionInput]
  or: [FilterHierarchyScopeMaterialDefinitionInput]
  not: [FilterHierarchyScopeMaterialDefinitionInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterHierarchyScopeMaterialLotInput]
  or: [FilterHierarchyScopeMaterialLotInput]
  not: [FilterHierarchyScopeMaterialLotInput]
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterHierarchyScopeOpenPurchaseOrderInput]
  or: [FilterHierarchyScopeOpenPurchaseOrderInput]
  not: [FilterHierarchyScopeOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterHierarchyScopeOperationalLocationInput]
  or: [FilterHierarchyScopeOperationalLocationInput]
  not: [FilterHierarchyScopeOperationalLocationInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterHierarchyScopeOperationsDefinitionClassInput]
  or: [FilterHierarchyScopeOperationsDefinitionClassInput]
  not: [FilterHierarchyScopeOperationsDefinitionClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterHierarchyScopeOperationsDefinitionInput]
  or: [FilterHierarchyScopeOperationsDefinitionInput]
  not: [FilterHierarchyScopeOperationsDefinitionInput]
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
}

input FilterHierarchyScopeOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterHierarchyScopeOperationsRequestInput]
  or: [FilterHierarchyScopeOperationsRequestInput]
  not: [FilterHierarchyScopeOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
  operationsRequestProfile: FilterOperationsRequestProfileInput
}

input FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterHierarchyScopeOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentInput]
  or: [FilterHierarchyScopeOperationsSegmentInput]
  not: [FilterHierarchyScopeOperationsSegmentInput]
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
}

input FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
}

input FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterHierarchyScopePersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonInput]
  or: [FilterHierarchyScopePersonInput]
  not: [FilterHierarchyScopePersonInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterHierarchyScopePersonnelCapabilityInput]
  or: [FilterHierarchyScopePersonnelCapabilityInput]
  not: [FilterHierarchyScopePersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterHierarchyScopePersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonnelClassInput]
  or: [FilterHierarchyScopePersonnelClassInput]
  not: [FilterHierarchyScopePersonnelClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonnelPositionInput]
  or: [FilterHierarchyScopePersonnelPositionInput]
  not: [FilterHierarchyScopePersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterHierarchyScopeSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterHierarchyScopeSegmentRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterHierarchyScopeSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterMaterialDefinitionCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterMaterialDefinitionCalendarisedThroughputSetItemInput]
  or: [FilterMaterialDefinitionCalendarisedThroughputSetItemInput]
  not: [FilterMaterialDefinitionCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterMaterialDefinitionInput]
  or: [FilterMaterialDefinitionInput]
  not: [FilterMaterialDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  calendarisedThroughputSetItems_some: FilterMaterialDefinitionCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterMaterialDefinitionCalendarisedThroughputSetItemInput
  operationsSegmentMaterialSpecifications_some: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  materialLots_some: FilterMaterialDefinitionMaterialLotInput
  materialLots_none: FilterMaterialDefinitionMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput
  openPurchaseOrders_some: FilterMaterialDefinitionOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterMaterialDefinitionOpenPurchaseOrderInput
  materialProperties_some: FilterMaterialDefinitionMaterialPropertyInput
  materialProperties_none: FilterMaterialDefinitionMaterialPropertyInput
}

input FilterMaterialDefinitionMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialDefinitionMaterialLotInput]
  or: [FilterMaterialDefinitionMaterialLotInput]
  not: [FilterMaterialDefinitionMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterMaterialDefinitionMaterialPropertyInput]
  or: [FilterMaterialDefinitionMaterialPropertyInput]
  not: [FilterMaterialDefinitionMaterialPropertyInput]
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterMaterialDefinitionOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  or: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  not: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  or: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  not: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
}

input FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  or: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  not: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialLotInput]
  or: [FilterMaterialLotInput]
  not: [FilterMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
  segmentRequirementMaterialRequirements_some: FilterMaterialLotSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterMaterialLotSegmentRequirementMaterialRequirementInput
}

input FilterMaterialLotSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  or: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  not: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterMaterialPropertyInput]
  or: [FilterMaterialPropertyInput]
  not: [FilterMaterialPropertyInput]
  materialDefinition: FilterMaterialDefinitionInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterOpenPurchaseOrderInput]
  or: [FilterOpenPurchaseOrderInput]
  not: [FilterOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterOperationalLocationInput]
  or: [FilterOperationalLocationInput]
  not: [FilterOperationalLocationInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsSegmentMaterialSpecifications_some: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput
  materialLots_some: FilterOperationalLocationMaterialLotInput
  materialLots_none: FilterOperationalLocationMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterOperationalLocationSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterOperationalLocationSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput
}

input FilterOperationalLocationMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterOperationalLocationMaterialLotInput]
  or: [FilterOperationalLocationMaterialLotInput]
  not: [FilterOperationalLocationMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
}

input FilterOperationalLocationOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
}

input FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
}

input FilterOperationalLocationSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
}

input FilterOperationalLocationSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterOperationalLocationSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
}

input FilterOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterOperationsDefinitionClassInput]
  or: [FilterOperationsDefinitionClassInput]
  not: [FilterOperationsDefinitionClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsDefinitions_some: FilterOperationsDefinitionClassOperationsDefinitionInput
  operationsDefinitions_none: FilterOperationsDefinitionClassOperationsDefinitionInput
  orderItems_some: FilterOperationsDefinitionClassOrderItemInput
  orderItems_none: FilterOperationsDefinitionClassOrderItemInput
}

input FilterOperationsDefinitionClassOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  or: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  not: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOperationsDefinitionClassOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsDefinitionClassOrderItemInput]
  or: [FilterOperationsDefinitionClassOrderItemInput]
  not: [FilterOperationsDefinitionClassOrderItemInput]
  order: FilterOrderInput
}

input FilterOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterOperationsDefinitionInput]
  or: [FilterOperationsDefinitionInput]
  not: [FilterOperationsDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
  operationsSegments_some: FilterOperationsDefinitionOperationsSegmentInput
  operationsSegments_none: FilterOperationsDefinitionOperationsSegmentInput
}

input FilterOperationsDefinitionOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsDefinitionOperationsSegmentInput]
  or: [FilterOperationsDefinitionOperationsSegmentInput]
  not: [FilterOperationsDefinitionOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
}

input FilterOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestEquipmentInput]
  or: [FilterOperationsRequestEquipmentInput]
  not: [FilterOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  equipment: FilterEquipmentInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
}

input FilterOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterOperationsRequestInput]
  or: [FilterOperationsRequestInput]
  not: [FilterOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsRequestProfile: FilterOperationsRequestProfileInput
  operationsRequestPersonnels_some: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestEquipments_some: FilterOperationsRequestOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterOperationsRequestOperationsRequestEquipmentInput
  segmentRequirements_some: FilterOperationsRequestSegmentRequirementInput
  segmentRequirements_none: FilterOperationsRequestSegmentRequirementInput
}

input FilterOperationsRequestOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestOperationsRequestEquipmentInput]
  or: [FilterOperationsRequestOperationsRequestEquipmentInput]
  not: [FilterOperationsRequestOperationsRequestEquipmentInput]
  equipment: FilterEquipmentInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
}

input FilterOperationsRequestOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestOperationsRequestPersonnelInput]
  or: [FilterOperationsRequestOperationsRequestPersonnelInput]
  not: [FilterOperationsRequestOperationsRequestPersonnelInput]
  person: FilterPersonInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestPersonnelInput]
  or: [FilterOperationsRequestPersonnelInput]
  not: [FilterOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  person: FilterPersonInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterOperationsRequestProfileInput]
  or: [FilterOperationsRequestProfileInput]
  not: [FilterOperationsRequestProfileInput]
  orderItem: FilterOrderItemInput
  operationsRequests_some: FilterOperationsRequestProfileOperationsRequestInput
  operationsRequests_none: FilterOperationsRequestProfileOperationsRequestInput
}

input FilterOperationsRequestProfileOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterOperationsRequestProfileOperationsRequestInput]
  or: [FilterOperationsRequestProfileOperationsRequestInput]
  not: [FilterOperationsRequestProfileOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsRequestPersonnels_some: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestEquipments_some: FilterOperationsRequestOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterOperationsRequestOperationsRequestEquipmentInput
  segmentRequirements_some: FilterOperationsRequestSegmentRequirementInput
  segmentRequirements_none: FilterOperationsRequestSegmentRequirementInput
}

input FilterOperationsRequestSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterOperationsRequestSegmentRequirementInput]
  or: [FilterOperationsRequestSegmentRequirementInput]
  not: [FilterOperationsRequestSegmentRequirementInput]
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOperationsSegmentChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOperationsSegmentChangeoverSetItemInput]
  or: [FilterOperationsSegmentChangeoverSetItemInput]
  not: [FilterOperationsSegmentChangeoverSetItemInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
}

input FilterOperationsSegmentDependencyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentDependencyInput]
  or: [FilterOperationsSegmentDependencyInput]
  not: [FilterOperationsSegmentDependencyInput]
  fromOperationsSegment: FilterOperationsSegmentInput
  toOperationsSegment: FilterOperationsSegmentInput
}

input FilterOperationsSegmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentDescendantInput]
  or: [FilterOperationsSegmentDescendantInput]
  not: [FilterOperationsSegmentDescendantInput]
  ascendant: FilterOperationsSegmentInput
  descendant: FilterOperationsSegmentInput
}

input FilterOperationsSegmentEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterOperationsSegmentEquipmentCapabilityInput]
  or: [FilterOperationsSegmentEquipmentCapabilityInput]
  not: [FilterOperationsSegmentEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  or: [FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  not: [FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  materialDefinition: FilterMaterialDefinitionInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  calendarisedThroughputSetItems_some: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput
  operationsRequestEquipments_some: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput
}

input FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  or: [FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  not: [FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  equipment: FilterEquipmentInput
}

input FilterOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsSegmentInput]
  or: [FilterOperationsSegmentInput]
  not: [FilterOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  changeoverSetItems_some: FilterOperationsSegmentChangeoverSetItemInput
  changeoverSetItems_none: FilterOperationsSegmentChangeoverSetItemInput
  operationsSegments_some: FilterOperationsSegmentOperationsSegmentInput
  operationsSegments_none: FilterOperationsSegmentOperationsSegmentInput
  equipmentCapabilities_some: FilterOperationsSegmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterOperationsSegmentEquipmentCapabilityInput
  personnelCapabilities_some: FilterOperationsSegmentPersonnelCapabilityInput
  personnelCapabilities_none: FilterOperationsSegmentPersonnelCapabilityInput
  descendantOperationsSegments_some: FilterAscendantOperationsSegmentsInput
  descendantOperationsSegments_none: FilterAscendantOperationsSegmentsInput
  ascendantOperationsSegments_some: FilterDescendantOperationsSegmentsInput
  ascendantOperationsSegments_none: FilterDescendantOperationsSegmentsInput
  operationsSegmentProperties_some: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentProperties_none: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentDependenciesFromOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesFromOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentMaterialSpecifications_some: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterOperationsSegmentOperationsRequestInput
  operationsRequests_none: FilterOperationsSegmentOperationsRequestInput
  segmentRequirements_some: FilterOperationsSegmentSegmentRequirementInput
  segmentRequirements_none: FilterOperationsSegmentSegmentRequirementInput
}

input FilterOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_some: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
}

input FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterOperationsSegmentOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterOperationsSegmentOperationsRequestInput]
  or: [FilterOperationsSegmentOperationsRequestInput]
  not: [FilterOperationsSegmentOperationsRequestInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsRequestProfile: FilterOperationsRequestProfileInput
}

input FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  toOperationsSegment: FilterOperationsSegmentInput
}

input FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  fromOperationsSegment: FilterOperationsSegmentInput
}

input FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterOperationsSegmentOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsDefinition: FilterOperationsDefinitionInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  changeoverSetItems_some: FilterOperationsSegmentChangeoverSetItemInput
  changeoverSetItems_none: FilterOperationsSegmentChangeoverSetItemInput
}

input FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
}

input FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterOperationsSegmentOperationsSegmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  or: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  not: [FilterOperationsSegmentOperationsSegmentPropertyInput]
}

input FilterOperationsSegmentPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterOperationsSegmentPersonnelCapabilityInput]
  or: [FilterOperationsSegmentPersonnelCapabilityInput]
  not: [FilterOperationsSegmentPersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  or: [FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  not: [FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  materialDefinition: FilterMaterialDefinitionInput
  operationsSegmentEquipmentSpecification: FilterOperationsSegmentEquipmentSpecificationInput
}

input FilterOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  calendarisedThroughputSetItems_some: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput
  operationsRequestPersonnels_some: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput
}

input FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  or: [FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  not: [FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  person: FilterPersonInput
}

input FilterOperationsSegmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOperationsSegmentPropertyInput]
  or: [FilterOperationsSegmentPropertyInput]
  not: [FilterOperationsSegmentPropertyInput]
  operationsSegment: FilterOperationsSegmentInput
}

input FilterOperationsSegmentSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterOperationsSegmentSegmentRequirementInput]
  or: [FilterOperationsSegmentSegmentRequirementInput]
  not: [FilterOperationsSegmentSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationHierarchyAttributeInput]
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterOptimisationHierarchyEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationHierarchyEquipmentInput]
  or: [FilterOptimisationHierarchyEquipmentInput]
  not: [FilterOptimisationHierarchyEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  childEquipments_some: FilterParentEquipmentsInput
  childEquipments_none: FilterParentEquipmentsInput
  parentEquipments_some: FilterChildEquipmentsInput
  parentEquipments_none: FilterChildEquipmentsInput
  descendantEquipments_some: FilterAscendantEquipmentsInput
  descendantEquipments_none: FilterAscendantEquipmentsInput
  ascendantEquipments_some: FilterDescendantEquipmentsInput
  ascendantEquipments_none: FilterDescendantEquipmentsInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClasses_some: FilterEquipmentEquipmentClassesInput
  equipmentClasses_none: FilterEquipmentEquipmentClassesInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  downtimePeriods_some: FilterEquipmentDowntimePeriodsInput
  downtimePeriods_none: FilterEquipmentDowntimePeriodsInput
}

input FilterOptimisationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationHierarchyInput]
  or: [FilterOptimisationHierarchyInput]
  not: [FilterOptimisationHierarchyInput]
  scenario: FilterScenarioInput
  equipments_some: FilterOptimisationHierarchyEquipmentInput
  equipments_none: FilterOptimisationHierarchyEquipmentInput
  optimisationHierarchyAttributes_some: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput
  optimisationHierarchyAttributes_none: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput
}

input FilterOptimisationHierarchyOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterOptimisationPreferredSequenceEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPreferredSequenceEquipmentInput]
  or: [FilterOptimisationPreferredSequenceEquipmentInput]
  not: [FilterOptimisationPreferredSequenceEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  childEquipments_some: FilterParentEquipmentsInput
  childEquipments_none: FilterParentEquipmentsInput
  parentEquipments_some: FilterChildEquipmentsInput
  parentEquipments_none: FilterChildEquipmentsInput
  descendantEquipments_some: FilterAscendantEquipmentsInput
  descendantEquipments_none: FilterAscendantEquipmentsInput
  ascendantEquipments_some: FilterDescendantEquipmentsInput
  ascendantEquipments_none: FilterDescendantEquipmentsInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClasses_some: FilterEquipmentEquipmentClassesInput
  equipmentClasses_none: FilterEquipmentEquipmentClassesInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  downtimePeriods_some: FilterEquipmentDowntimePeriodsInput
  downtimePeriods_none: FilterEquipmentDowntimePeriodsInput
}

input FilterOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPreferredSequenceInput]
  or: [FilterOptimisationPreferredSequenceInput]
  not: [FilterOptimisationPreferredSequenceInput]
  scenario: FilterScenarioInput
  optimisationProperty: FilterOptimisationPropertyInput
  equipments_some: FilterOptimisationPreferredSequenceEquipmentInput
  equipments_none: FilterOptimisationPreferredSequenceEquipmentInput
  optimisationPreferredSequenceItems_some: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
  optimisationPreferredSequenceItems_none: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
}

input FilterOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPreferredSequenceItemInput]
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterOptimisationPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterOptimisationPropertyInput]
  or: [FilterOptimisationPropertyInput]
  not: [FilterOptimisationPropertyInput]
  scenario: FilterScenarioInput
  optimisationPropertyValues_some: FilterOptimisationPropertyOptimisationPropertyValueInput
  optimisationPropertyValues_none: FilterOptimisationPropertyOptimisationPropertyValueInput
  optimisationHierarchyAttributes_some: FilterOptimisationPropertyOptimisationHierarchyAttributeInput
  optimisationHierarchyAttributes_none: FilterOptimisationPropertyOptimisationHierarchyAttributeInput
  optimisationPreferredSequences_some: FilterOptimisationPropertyOptimisationPreferredSequenceInput
  optimisationPreferredSequences_none: FilterOptimisationPropertyOptimisationPreferredSequenceInput
}

input FilterOptimisationPropertyOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  optimisationHierarchy: FilterOptimisationHierarchyInput
}

input FilterOptimisationPropertyOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  or: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  not: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyOptimisationPropertyValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  or: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  not: [FilterOptimisationPropertyOptimisationPropertyValueInput]
}

input FilterOptimisationPropertyValueChangeoverSetItemFromValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  or: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  not: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  changeoverSet: FilterChangeoverSetInput
  toValue: FilterOptimisationPropertyValueInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterOptimisationPropertyValueChangeoverSetItemToValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  or: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  not: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterOptimisationPropertyValueColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterOptimisationPropertyValueColourSchemeItemInput]
  or: [FilterOptimisationPropertyValueColourSchemeItemInput]
  not: [FilterOptimisationPropertyValueColourSchemeItemInput]
  colourScheme: FilterColourSchemeInput
}

input FilterOptimisationPropertyValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyValueInput]
  or: [FilterOptimisationPropertyValueInput]
  not: [FilterOptimisationPropertyValueInput]
  optimisationProperty: FilterOptimisationPropertyInput
  changeoverSetItemsFromValue_some: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput
  changeoverSetItemsFromValue_none: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput
  changeoverSetItemsToValue_some: FilterOptimisationPropertyValueChangeoverSetItemToValueInput
  changeoverSetItemsToValue_none: FilterOptimisationPropertyValueChangeoverSetItemToValueInput
  materialProperties_some: FilterOptimisationPropertyValueMaterialPropertyInput
  materialProperties_none: FilterOptimisationPropertyValueMaterialPropertyInput
  colourSchemeItems_some: FilterOptimisationPropertyValueColourSchemeItemInput
  colourSchemeItems_none: FilterOptimisationPropertyValueColourSchemeItemInput
  optimisationPreferredSequenceItems_some: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput
  optimisationPreferredSequenceItems_none: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput
}

input FilterOptimisationPropertyValueMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyValueMaterialPropertyInput]
  or: [FilterOptimisationPropertyValueMaterialPropertyInput]
  not: [FilterOptimisationPropertyValueMaterialPropertyInput]
  materialDefinition: FilterMaterialDefinitionInput
}

input FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
}

input FilterOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOrderInput]
  or: [FilterOrderInput]
  not: [FilterOrderInput]
  status: FilterOrderStatusInput
  scenario: FilterScenarioInput
  orderItems_some: FilterOrderOrderItemInput
  orderItems_none: FilterOrderOrderItemInput
  orderProperties_some: FilterOrderOrderPropertyInput
  orderProperties_none: FilterOrderOrderPropertyInput
}

input FilterOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOrderItemInput]
  or: [FilterOrderItemInput]
  not: [FilterOrderItemInput]
  order: FilterOrderInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
  operationsRequestProfiles_some: FilterOrderItemOperationsRequestProfileInput
  operationsRequestProfiles_none: FilterOrderItemOperationsRequestProfileInput
}

input FilterOrderItemOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterOrderItemOperationsRequestProfileInput]
  or: [FilterOrderItemOperationsRequestProfileInput]
  not: [FilterOrderItemOperationsRequestProfileInput]
}

input FilterOrderOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOrderOrderItemInput]
  or: [FilterOrderOrderItemInput]
  not: [FilterOrderOrderItemInput]
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
}

input FilterOrderOrderPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOrderOrderPropertyInput]
  or: [FilterOrderOrderPropertyInput]
  not: [FilterOrderOrderPropertyInput]
}

input FilterOrderPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOrderPropertyInput]
  or: [FilterOrderPropertyInput]
  not: [FilterOrderPropertyInput]
  order: FilterOrderInput
}

input FilterOrderStatusInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  and: [FilterOrderStatusInput]
  or: [FilterOrderStatusInput]
  not: [FilterOrderStatusInput]
  scenario: FilterScenarioInput
  orders_some: FilterOrderStatusOrderInput
  orders_none: FilterOrderStatusOrderInput
}

input FilterOrderStatusOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOrderStatusOrderInput]
  or: [FilterOrderStatusOrderInput]
  not: [FilterOrderStatusOrderInput]
  scenario: FilterScenarioInput
}

input FilterParentEquipmentsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterParentEquipmentsInput]
  or: [FilterParentEquipmentsInput]
  not: [FilterParentEquipmentsInput]
  child: FilterEquipmentInput
}

input FilterPersonDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonDowntimePeriodInput]
  or: [FilterPersonDowntimePeriodInput]
  not: [FilterPersonDowntimePeriodInput]
  person: FilterPersonInput
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterPersonDowntimePeriodsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonDowntimePeriodsInput]
  or: [FilterPersonDowntimePeriodsInput]
  not: [FilterPersonDowntimePeriodsInput]
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonInput]
  or: [FilterPersonInput]
  not: [FilterPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  scenario: FilterScenarioInput
  personProperties_some: FilterPersonPersonPropertyInput
  personProperties_none: FilterPersonPersonPropertyInput
  personnelClasses_some: FilterPersonPersonnelClassesInput
  personnelClasses_none: FilterPersonPersonnelClassesInput
  personnelPositions_some: FilterPersonPersonnelPositionsInput
  personnelPositions_none: FilterPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications_some: FilterPersonOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterPersonOperationsSegmentPersonnelSpecificationInput
  operationsRequestPersonnels_some: FilterPersonOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterPersonOperationsRequestPersonnelInput
  segmentRequirementPersonnelRequirements_some: FilterPersonSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterPersonSegmentRequirementPersonnelRequirementInput
  downtimePeriods_some: FilterPersonDowntimePeriodsInput
  downtimePeriods_none: FilterPersonDowntimePeriodsInput
}

input FilterPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterPersonnelCapabilityInput]
  or: [FilterPersonnelCapabilityInput]
  not: [FilterPersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterPersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelClassInput]
  or: [FilterPersonnelClassInput]
  not: [FilterPersonnelClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  personnelClassProperties_some: FilterPersonnelClassPersonnelClassPropertyInput
  personnelClassProperties_none: FilterPersonnelClassPersonnelClassPropertyInput
  personnelPositions_some: FilterPersonnelClassPersonnelPositionInput
  personnelPositions_none: FilterPersonnelClassPersonnelPositionInput
  persons_some: FilterPersonnelClassPersonsInput
  persons_none: FilterPersonnelClassPersonsInput
  personnelCapabilities_some: FilterPersonnelClassPersonnelCapabilityInput
  personnelCapabilities_none: FilterPersonnelClassPersonnelCapabilityInput
  operationsSegmentPersonnelSpecifications_some: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput
  segmentRequirementPersonnelRequirements_some: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput
}

input FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  or: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  not: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterPersonnelClassPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelClassPersonMemberInput]
  or: [FilterPersonnelClassPersonMemberInput]
  not: [FilterPersonnelClassPersonMemberInput]
  personnelClass: FilterPersonnelClassInput
  person: FilterPersonInput
}

input FilterPersonnelClassPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterPersonnelClassPersonnelCapabilityInput]
  or: [FilterPersonnelClassPersonnelCapabilityInput]
  not: [FilterPersonnelClassPersonnelCapabilityInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterPersonnelClassPersonnelClassPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelClassPersonnelClassPropertyInput]
  or: [FilterPersonnelClassPersonnelClassPropertyInput]
  not: [FilterPersonnelClassPersonnelClassPropertyInput]
}

input FilterPersonnelClassPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelClassPersonnelPositionInput]
  or: [FilterPersonnelClassPersonnelPositionInput]
  not: [FilterPersonnelClassPersonnelPositionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelClassPersonsInput]
  or: [FilterPersonnelClassPersonsInput]
  not: [FilterPersonnelClassPersonsInput]
  person: FilterPersonInput
}

input FilterPersonnelClassPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelClassPropertyInput]
  or: [FilterPersonnelClassPropertyInput]
  not: [FilterPersonnelClassPropertyInput]
  personnelClass: FilterPersonnelClassInput
}

input FilterPersonnelClassSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  or: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  not: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelPositionInput]
  or: [FilterPersonnelPositionInput]
  not: [FilterPersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  persons_some: FilterPersonnelPositionPersonsInput
  persons_none: FilterPersonnelPositionPersonsInput
  personnelPositionProperties_some: FilterPersonnelPositionPersonnelPositionPropertyInput
  personnelPositionProperties_none: FilterPersonnelPositionPersonnelPositionPropertyInput
}

input FilterPersonnelPositionPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelPositionPersonMemberInput]
  or: [FilterPersonnelPositionPersonMemberInput]
  not: [FilterPersonnelPositionPersonMemberInput]
  personnelPosition: FilterPersonnelPositionInput
  person: FilterPersonInput
}

input FilterPersonnelPositionPersonnelPositionPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  or: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  not: [FilterPersonnelPositionPersonnelPositionPropertyInput]
}

input FilterPersonnelPositionPersonsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelPositionPersonsInput]
  or: [FilterPersonnelPositionPersonsInput]
  not: [FilterPersonnelPositionPersonsInput]
  person: FilterPersonInput
}

input FilterPersonnelPositionPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelPositionPropertyInput]
  or: [FilterPersonnelPositionPropertyInput]
  not: [FilterPersonnelPositionPropertyInput]
  personnelPosition: FilterPersonnelPositionInput
}

input FilterPersonOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonOperationsRequestPersonnelInput]
  or: [FilterPersonOperationsRequestPersonnelInput]
  not: [FilterPersonOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  operationsSegmentPersonnelSpecification: FilterOperationsSegmentPersonnelSpecificationInput
}

input FilterPersonOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  or: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  not: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterPersonPersonnelClassesInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonPersonnelClassesInput]
  or: [FilterPersonPersonnelClassesInput]
  not: [FilterPersonPersonnelClassesInput]
  personnelClass: FilterPersonnelClassInput
}

input FilterPersonPersonnelPositionsInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonPersonnelPositionsInput]
  or: [FilterPersonPersonnelPositionsInput]
  not: [FilterPersonPersonnelPositionsInput]
  personnelPosition: FilterPersonnelPositionInput
}

input FilterPersonPersonPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonPersonPropertyInput]
  or: [FilterPersonPersonPropertyInput]
  not: [FilterPersonPersonPropertyInput]
}

input FilterPersonPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonPropertyInput]
  or: [FilterPersonPropertyInput]
  not: [FilterPersonPropertyInput]
  person: FilterPersonInput
}

input FilterPersonSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  or: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  not: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  changeoverTime: Float
  changeoverTime_lt: Float
  changeoverTime_le: Float
  changeoverTime_ge: Float
  changeoverTime_gt: Float
  changeoverTime_ne: Float
  changeoverTime_null: Boolean
  changeoverTime_in: [Float]
  changeoverCount: Int
  changeoverCount_lt: Int
  changeoverCount_le: Int
  changeoverCount_ge: Int
  changeoverCount_gt: Int
  changeoverCount_ne: Int
  changeoverCount_null: Boolean
  changeoverCount_in: [Int]
  waitingTime: Float
  waitingTime_lt: Float
  waitingTime_le: Float
  waitingTime_ge: Float
  waitingTime_gt: Float
  waitingTime_ne: Float
  waitingTime_null: Boolean
  waitingTime_in: [Float]
  inventoryShortage: Float
  inventoryShortage_lt: Float
  inventoryShortage_le: Float
  inventoryShortage_ge: Float
  inventoryShortage_gt: Float
  inventoryShortage_ne: Float
  inventoryShortage_null: Boolean
  inventoryShortage_in: [Float]
  overdueCount: Int
  overdueCount_lt: Int
  overdueCount_le: Int
  overdueCount_ge: Int
  overdueCount_gt: Int
  overdueCount_ne: Int
  overdueCount_null: Boolean
  overdueCount_in: [Int]
  conflictCount: Int
  conflictCount_lt: Int
  conflictCount_le: Int
  conflictCount_ge: Int
  conflictCount_gt: Int
  conflictCount_ne: Int
  conflictCount_null: Boolean
  conflictCount_in: [Int]
  and: [FilterScenarioAttributeInput]
  or: [FilterScenarioAttributeInput]
  not: [FilterScenarioAttributeInput]
  scenario: FilterScenarioInput
}

input FilterScenarioAvailabilityTemplateInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioAvailabilityTemplateInput]
  or: [FilterScenarioAvailabilityTemplateInput]
  not: [FilterScenarioAvailabilityTemplateInput]
}

input FilterScenarioCalendarisedAvailabilityTemplateSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
  or: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
  not: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
}

input FilterScenarioCalendarisedThroughputSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioCalendarisedThroughputSetInput]
  or: [FilterScenarioCalendarisedThroughputSetInput]
  not: [FilterScenarioCalendarisedThroughputSetInput]
}

input FilterScenarioChangeoverSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  defaultTime: Float
  defaultTime_lt: Float
  defaultTime_le: Float
  defaultTime_ge: Float
  defaultTime_gt: Float
  defaultTime_ne: Float
  defaultTime_null: Boolean
  defaultTime_in: [Float]
  and: [FilterScenarioChangeoverSetInput]
  or: [FilterScenarioChangeoverSetInput]
  not: [FilterScenarioChangeoverSetInput]
}

input FilterScenarioColourSchemeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioColourSchemeInput]
  or: [FilterScenarioColourSchemeInput]
  not: [FilterScenarioColourSchemeInput]
}

input FilterScenarioConfigurableApplicationParameterInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  valueAsString: String
  valueAsString_lt: String
  valueAsString_le: String
  valueAsString_ge: String
  valueAsString_gt: String
  valueAsString_ne: String
  valueAsString_null: Boolean
  valueAsString_in: [String]
  valueAsString_like: String
  and: [FilterScenarioConfigurableApplicationParameterInput]
  or: [FilterScenarioConfigurableApplicationParameterInput]
  not: [FilterScenarioConfigurableApplicationParameterInput]
}

input FilterScenarioDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  percentageAvailability: Float
  percentageAvailability_lt: Float
  percentageAvailability_le: Float
  percentageAvailability_ge: Float
  percentageAvailability_gt: Float
  percentageAvailability_ne: Float
  percentageAvailability_null: Boolean
  percentageAvailability_in: [Float]
  and: [FilterScenarioDowntimePeriodInput]
  or: [FilterScenarioDowntimePeriodInput]
  not: [FilterScenarioDowntimePeriodInput]
}

input FilterScenarioEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterScenarioEquipmentClassInput]
  or: [FilterScenarioEquipmentClassInput]
  not: [FilterScenarioEquipmentClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioEquipmentInput]
  or: [FilterScenarioEquipmentInput]
  not: [FilterScenarioEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
}

input FilterScenarioHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterScenarioHierarchyScopeInput]
  or: [FilterScenarioHierarchyScopeInput]
  not: [FilterScenarioHierarchyScopeInput]
  equipment: FilterEquipmentInput
  parent: FilterHierarchyScopeInput
}

input FilterScenarioInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startDate: String
  startDate_lt: String
  startDate_le: String
  startDate_ge: String
  startDate_gt: String
  startDate_ne: String
  startDate_null: Boolean
  startDate_in: [String]
  startDate_like: String
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  updatedAt: String
  updatedAt_lt: String
  updatedAt_le: String
  updatedAt_ge: String
  updatedAt_gt: String
  updatedAt_ne: String
  updatedAt_null: Boolean
  updatedAt_in: [String]
  updatedAt_like: String
  createdAt: String
  createdAt_lt: String
  createdAt_le: String
  createdAt_ge: String
  createdAt_gt: String
  createdAt_ne: String
  createdAt_null: Boolean
  createdAt_in: [String]
  createdAt_like: String
  and: [FilterScenarioInput]
  or: [FilterScenarioInput]
  not: [FilterScenarioInput]
  hierarchyScopes_some: FilterScenarioHierarchyScopeInput
  hierarchyScopes_none: FilterScenarioHierarchyScopeInput
  optimisationProperties_some: FilterScenarioOptimisationPropertyInput
  optimisationProperties_none: FilterScenarioOptimisationPropertyInput
  changeoverSets_some: FilterScenarioChangeoverSetInput
  changeoverSets_none: FilterScenarioChangeoverSetInput
  availabilityTemplates_some: FilterScenarioAvailabilityTemplateInput
  availabilityTemplates_none: FilterScenarioAvailabilityTemplateInput
  calendarisedAvailabilityTemplateSets_some: FilterScenarioCalendarisedAvailabilityTemplateSetInput
  calendarisedAvailabilityTemplateSets_none: FilterScenarioCalendarisedAvailabilityTemplateSetInput
  equipments_some: FilterScenarioEquipmentInput
  equipments_none: FilterScenarioEquipmentInput
  equipmentClasses_some: FilterScenarioEquipmentClassInput
  equipmentClasses_none: FilterScenarioEquipmentClassInput
  materialDefinitions_some: FilterScenarioMaterialDefinitionInput
  materialDefinitions_none: FilterScenarioMaterialDefinitionInput
  personnelClasses_some: FilterScenarioPersonnelClassInput
  personnelClasses_none: FilterScenarioPersonnelClassInput
  personnelPositions_some: FilterScenarioPersonnelPositionInput
  personnelPositions_none: FilterScenarioPersonnelPositionInput
  persons_some: FilterScenarioPersonInput
  persons_none: FilterScenarioPersonInput
  operationsDefinitionClasses_some: FilterScenarioOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterScenarioOperationsDefinitionClassInput
  operationalLocations_some: FilterScenarioOperationalLocationInput
  operationalLocations_none: FilterScenarioOperationalLocationInput
  calendarisedThroughputSets_some: FilterScenarioCalendarisedThroughputSetInput
  calendarisedThroughputSets_none: FilterScenarioCalendarisedThroughputSetInput
  timePeriods_some: FilterScenarioTimePeriodInput
  timePeriods_none: FilterScenarioTimePeriodInput
  orderStatuses_some: FilterScenarioOrderStatusInput
  orderStatuses_none: FilterScenarioOrderStatusInput
  orders_some: FilterScenarioOrderInput
  orders_none: FilterScenarioOrderInput
  operationsRequests_some: FilterScenarioOperationsRequestInput
  operationsRequests_none: FilterScenarioOperationsRequestInput
  materialLots_some: FilterScenarioMaterialLotInput
  materialLots_none: FilterScenarioMaterialLotInput
  openPurchaseOrders_some: FilterScenarioOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterScenarioOpenPurchaseOrderInput
  configurableApplicationParameters_some: FilterScenarioConfigurableApplicationParameterInput
  configurableApplicationParameters_none: FilterScenarioConfigurableApplicationParameterInput
  colourSchemes_some: FilterScenarioColourSchemeInput
  colourSchemes_none: FilterScenarioColourSchemeInput
  downtimePeriods_some: FilterScenarioDowntimePeriodInput
  downtimePeriods_none: FilterScenarioDowntimePeriodInput
  optimisationHierarchies_some: FilterScenarioOptimisationHierarchyInput
  optimisationHierarchies_none: FilterScenarioOptimisationHierarchyInput
  scenarioAttribute_some: FilterScenarioScenarioAttributeInput
  scenarioAttribute_none: FilterScenarioScenarioAttributeInput
  optimisationPreferredSequences_some: FilterScenarioOptimisationPreferredSequenceInput
  optimisationPreferredSequences_none: FilterScenarioOptimisationPreferredSequenceInput
}

input FilterScenarioMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioMaterialDefinitionInput]
  or: [FilterScenarioMaterialDefinitionInput]
  not: [FilterScenarioMaterialDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterScenarioMaterialLotInput]
  or: [FilterScenarioMaterialLotInput]
  not: [FilterScenarioMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterScenarioOpenPurchaseOrderInput]
  or: [FilterScenarioOpenPurchaseOrderInput]
  not: [FilterScenarioOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterScenarioOperationalLocationInput]
  or: [FilterScenarioOperationalLocationInput]
  not: [FilterScenarioOperationalLocationInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterScenarioOperationsDefinitionClassInput]
  or: [FilterScenarioOperationsDefinitionClassInput]
  not: [FilterScenarioOperationsDefinitionClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterScenarioOperationsRequestInput]
  or: [FilterScenarioOperationsRequestInput]
  not: [FilterScenarioOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsRequestProfile: FilterOperationsRequestProfileInput
}

input FilterScenarioOptimisationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioOptimisationHierarchyInput]
  or: [FilterScenarioOptimisationHierarchyInput]
  not: [FilterScenarioOptimisationHierarchyInput]
}

input FilterScenarioOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioOptimisationPreferredSequenceInput]
  or: [FilterScenarioOptimisationPreferredSequenceInput]
  not: [FilterScenarioOptimisationPreferredSequenceInput]
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterScenarioOptimisationPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioOptimisationPropertyInput]
  or: [FilterScenarioOptimisationPropertyInput]
  not: [FilterScenarioOptimisationPropertyInput]
}

input FilterScenarioOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterScenarioOrderInput]
  or: [FilterScenarioOrderInput]
  not: [FilterScenarioOrderInput]
  status: FilterOrderStatusInput
}

input FilterScenarioOrderStatusInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  and: [FilterScenarioOrderStatusInput]
  or: [FilterScenarioOrderStatusInput]
  not: [FilterScenarioOrderStatusInput]
}

input FilterScenarioPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonInput]
  or: [FilterScenarioPersonInput]
  not: [FilterScenarioPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
}

input FilterScenarioPersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonnelClassInput]
  or: [FilterScenarioPersonnelClassInput]
  not: [FilterScenarioPersonnelClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonnelPositionInput]
  or: [FilterScenarioPersonnelPositionInput]
  not: [FilterScenarioPersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioScenarioAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  changeoverTime: Float
  changeoverTime_lt: Float
  changeoverTime_le: Float
  changeoverTime_ge: Float
  changeoverTime_gt: Float
  changeoverTime_ne: Float
  changeoverTime_null: Boolean
  changeoverTime_in: [Float]
  changeoverCount: Int
  changeoverCount_lt: Int
  changeoverCount_le: Int
  changeoverCount_ge: Int
  changeoverCount_gt: Int
  changeoverCount_ne: Int
  changeoverCount_null: Boolean
  changeoverCount_in: [Int]
  waitingTime: Float
  waitingTime_lt: Float
  waitingTime_le: Float
  waitingTime_ge: Float
  waitingTime_gt: Float
  waitingTime_ne: Float
  waitingTime_null: Boolean
  waitingTime_in: [Float]
  inventoryShortage: Float
  inventoryShortage_lt: Float
  inventoryShortage_le: Float
  inventoryShortage_ge: Float
  inventoryShortage_gt: Float
  inventoryShortage_ne: Float
  inventoryShortage_null: Boolean
  inventoryShortage_in: [Float]
  overdueCount: Int
  overdueCount_lt: Int
  overdueCount_le: Int
  overdueCount_ge: Int
  overdueCount_gt: Int
  overdueCount_ne: Int
  overdueCount_null: Boolean
  overdueCount_in: [Int]
  conflictCount: Int
  conflictCount_lt: Int
  conflictCount_le: Int
  conflictCount_ge: Int
  conflictCount_gt: Int
  conflictCount_ne: Int
  conflictCount_null: Boolean
  conflictCount_in: [Int]
  and: [FilterScenarioScenarioAttributeInput]
  or: [FilterScenarioScenarioAttributeInput]
  not: [FilterScenarioScenarioAttributeInput]
}

input FilterScenarioTimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterScenarioTimePeriodInput]
  or: [FilterScenarioTimePeriodInput]
  not: [FilterScenarioTimePeriodInput]
}

input FilterSegmentRequirementDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterSegmentRequirementDescendantInput]
  or: [FilterSegmentRequirementDescendantInput]
  not: [FilterSegmentRequirementDescendantInput]
  ascendant: FilterSegmentRequirementInput
  descendant: FilterSegmentRequirementInput
}

input FilterSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterSegmentRequirementEquipmentRequirementInput]
  or: [FilterSegmentRequirementEquipmentRequirementInput]
  not: [FilterSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterSegmentRequirementInput]
  or: [FilterSegmentRequirementInput]
  not: [FilterSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  segmentRequirements_some: FilterSegmentRequirementSegmentRequirementInput
  segmentRequirements_none: FilterSegmentRequirementSegmentRequirementInput
  descendantSegmentRequirements_some: FilterAscendantSegmentRequirementsInput
  descendantSegmentRequirements_none: FilterAscendantSegmentRequirementsInput
  ascendantSegmentRequirements_some: FilterDescendantSegmentRequirementsInput
  ascendantSegmentRequirements_none: FilterDescendantSegmentRequirementsInput
  segmentRequirementProperties_some: FilterSegmentRequirementSegmentRequirementPropertyInput
  segmentRequirementProperties_none: FilterSegmentRequirementSegmentRequirementPropertyInput
  segmentRequirementMaterialRequirements_some: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput
}

input FilterSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_some: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
}

input FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
}

input FilterSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterSegmentRequirementPersonnelRequirementInput]
  or: [FilterSegmentRequirementPersonnelRequirementInput]
  not: [FilterSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterSegmentRequirementPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterSegmentRequirementPropertyInput]
  or: [FilterSegmentRequirementPropertyInput]
  not: [FilterSegmentRequirementPropertyInput]
  segmentRequirement: FilterSegmentRequirementInput
}

input FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterSegmentRequirementSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterSegmentRequirementSegmentRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterSegmentRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterSegmentRequirementSegmentRequirementPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  or: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  not: [FilterSegmentRequirementSegmentRequirementPropertyInput]
}

input FilterTimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterTimePeriodInput]
  or: [FilterTimePeriodInput]
  not: [FilterTimePeriodInput]
  scenario: FilterScenarioInput
}

input FindAvailabilityTemplateInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: Int
  availabilityTemplate: FindAvailabilityTemplateInput
}

input FindCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  calendarisedAvailabilityTemplateSet: FindCalendarisedAvailabilityTemplateSetInput
}

input FindCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  calendarisedThroughputSet: FindCalendarisedThroughputSetInput
}

input FindChangeoverSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindChangeoverSetItemInput {
  id: Int
  changeoverSet: FindChangeoverSetInput
  fromValue: FindOptimisationPropertyValueInput
  toValue: FindOptimisationPropertyValueInput
}

input FindColourSchemeInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindColourSchemeItemInput {
  id: Int
  colourScheme: FindColourSchemeInput
  propertyValue: FindOptimisationPropertyValueInput
}

input FindConfigurableApplicationParameterInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindDowntimePeriodInput {
  id: Int
  externalId: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: FindScenarioInput
}

input FindEquipmentCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input FindEquipmentChildInput {
  id: Int
  parent: FindEquipmentInput
  child: FindEquipmentInput
}

input FindEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
}

input FindEquipmentClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindEquipmentDescendantInput {
  id: Int
  ascendant: FindEquipmentInput
  descendant: FindEquipmentInput
}

input FindEquipmentDowntimePeriodInput {
  id: Int
  equipment: FindEquipmentInput
  downtimePeriod: FindDowntimePeriodInput
}

input FindEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindEquipmentPropertyInput {
  id: Int
  externalId: String
  equipment: FindEquipmentInput
}

input FindHierarchyScopeDescendantInput {
  id: Int
  ascendant: FindHierarchyScopeInput
  descendant: FindHierarchyScopeInput
}

input FindHierarchyScopeInput {
  id: Int
  externalId: String
  parent: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialLotInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialPropertyInput {
  id: Int
  externalId: String
  materialDefinition: FindMaterialDefinitionInput
}

input FindOpenPurchaseOrderInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindOperationalLocationInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOperationsDefinitionClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOperationsDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input FindOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  equipment: FindEquipmentInput
  operationsSegmentEquipmentSpecification: FindOperationsSegmentEquipmentSpecificationInput
}

input FindOperationsRequestInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input FindOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  person: FindPersonInput
  operationsSegmentPersonnelSpecification: FindOperationsSegmentPersonnelSpecificationInput
}

input FindOperationsRequestProfileInput {
  id: Int
}

input FindOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: FindOperationsSegmentInput
  toOperationsSegment: FindOperationsSegmentInput
}

input FindOperationsSegmentDescendantInput {
  id: Int
  ascendant: FindOperationsSegmentInput
  descendant: FindOperationsSegmentInput
}

input FindOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
}

input FindOperationsSegmentInput {
  id: Int
  externalId: String
  operationsDefinition: FindOperationsDefinitionInput
}

input FindOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  materialDefinition: FindMaterialDefinitionInput
}

input FindOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  person: FindPersonInput
  personnelClass: FindPersonnelClassInput
}

input FindOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
}

input FindOptimisationHierarchyAttributeInput {
  id: Int
  priority: Int
  optimisationHierarchy: FindOptimisationHierarchyInput
  optimisationProperty: FindOptimisationPropertyInput
}

input FindOptimisationHierarchyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
  optimisationProperty: FindOptimisationPropertyInput
}

input FindOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: FindOptimisationPreferredSequenceInput
  optimisationPropertyValue: FindOptimisationPropertyValueInput
}

input FindOptimisationPropertyInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindOptimisationPropertyValueInput {
  id: Int
  value: String
  optimisationProperty: FindOptimisationPropertyInput
}

input FindOrderInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOrderItemInput {
  id: Int
  order: FindOrderInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input FindOrderPropertyInput {
  id: Int
  externalId: String
  order: FindOrderInput
}

input FindOrderStatusInput {
  id: Int
  status: String
  scenario: FindScenarioInput
}

input FindPersonDowntimePeriodInput {
  id: Int
  person: FindPersonInput
  downtimePeriod: FindDowntimePeriodInput
}

input FindPersonInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input FindPersonnelClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: FindPersonnelClassInput
  person: FindPersonInput
}

input FindPersonnelClassPropertyInput {
  id: Int
  externalId: String
  personnelClass: FindPersonnelClassInput
}

input FindPersonnelPositionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: FindPersonnelPositionInput
  person: FindPersonInput
}

input FindPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  personnelPosition: FindPersonnelPositionInput
}

input FindPersonPropertyInput {
  id: Int
  externalId: String
  person: FindPersonInput
}

input FindScenarioAttributeInput {
  id: Int
  scenario: FindScenarioInput
}

input FindScenarioInput {
  id: Int
  name: String
}

input FindSegmentRequirementDescendantInput {
  id: Int
  ascendant: FindSegmentRequirementInput
  descendant: FindSegmentRequirementInput
}

input FindSegmentRequirementEquipmentRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input FindSegmentRequirementInput {
  id: Int
  externalId: String
  operationsRequest: FindOperationsRequestInput
  parentSegmentRequirement: FindSegmentRequirementInput
}

input FindSegmentRequirementMaterialRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input FindSegmentRequirementPersonnelRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input FindSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  segmentRequirement: FindSegmentRequirementInput
}

input FindTimePeriodInput {
  id: Int
  startTime: String
  scenario: FindScenarioInput
}

type HierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  parent: HierarchyScope
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeHierarchyScopeConnection
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  equipmentsConnection(where: FilterHierarchyScopeEquipmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentConnection
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  equipmentClassesConnection(where: FilterHierarchyScopeEquipmentClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentClassConnection
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  materialDefinitionsConnection(where: FilterHierarchyScopeMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialDefinitionConnection
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelClassesConnection(where: FilterHierarchyScopePersonnelClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelClassConnection
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  personnelPositionsConnection(where: FilterHierarchyScopePersonnelPositionInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelPositionConnection
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  personsConnection(where: FilterHierarchyScopePersonInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonConnection
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterHierarchyScopeOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionClassConnection
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsDefinitionsConnection(where: FilterHierarchyScopeOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionConnection
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  operationsSegmentsConnection(where: FilterHierarchyScopeOperationsSegmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentConnection
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterHierarchyScopeEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentCapabilityConnection
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  personnelCapabilitiesConnection(where: FilterHierarchyScopePersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelCapabilityConnection
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationalLocationsConnection(where: FilterHierarchyScopeOperationalLocationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationalLocationConnection
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  operationsRequestsConnection(where: FilterHierarchyScopeOperationsRequestInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsRequestConnection
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  segmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementConnection
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  materialLotsConnection(where: FilterHierarchyScopeMaterialLotInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementEquipmentRequirementConnection
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterHierarchyScopeOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOpenPurchaseOrderConnection
}

type HierarchyScopeConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [HierarchyScopeEdge]
  hierarchyScopes: [HierarchyScope]
}

type HierarchyScopeDescendant {
  id: Int
  ascendant: HierarchyScope
  descendant: HierarchyScope
}

type HierarchyScopeDescendantConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [HierarchyScopeDescendantEdge]
  hierarchyScopeDescendants: [HierarchyScopeDescendant]
}

type HierarchyScopeDescendantEdge {
  node: HierarchyScopeDescendant
  cursor: String
}

type HierarchyScopeEdge {
  node: HierarchyScope
  cursor: String
}

type HierarchyScopeEquipment {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type HierarchyScopeEquipmentCapabilitiesEdge {
  node: HierarchyScopeEquipmentCapability
  cursor: String
}

type HierarchyScopeEquipmentCapability {
  id: Int
  equipment: Equipment
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type HierarchyScopeEquipmentCapabilityConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeEquipmentCapabilitiesEdge]
  equipmentCapabilities: [HierarchyScope]
}

type HierarchyScopeEquipmentClass {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: Scenario
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentClassOperationsSegmentEquipmentSpecificationConnection
}

type HierarchyScopeEquipmentClassConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeEquipmentClassesEdge]
  equipmentClasses: [HierarchyScope]
}

type HierarchyScopeEquipmentClassesEdge {
  node: HierarchyScopeEquipmentClass
  cursor: String
}

type HierarchyScopeEquipmentConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeEquipmentsEdge]
  equipments: [HierarchyScope]
}

type HierarchyScopeEquipmentsEdge {
  node: HierarchyScopeEquipment
  cursor: String
}

type HierarchyScopeHierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeHierarchyScopeConnection
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  equipmentsConnection(where: FilterHierarchyScopeEquipmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentConnection
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  equipmentClassesConnection(where: FilterHierarchyScopeEquipmentClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentClassConnection
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  materialDefinitionsConnection(where: FilterHierarchyScopeMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialDefinitionConnection
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelClassesConnection(where: FilterHierarchyScopePersonnelClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelClassConnection
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  personnelPositionsConnection(where: FilterHierarchyScopePersonnelPositionInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelPositionConnection
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  personsConnection(where: FilterHierarchyScopePersonInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonConnection
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterHierarchyScopeOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionClassConnection
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsDefinitionsConnection(where: FilterHierarchyScopeOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionConnection
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  operationsSegmentsConnection(where: FilterHierarchyScopeOperationsSegmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentConnection
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterHierarchyScopeEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentCapabilityConnection
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  personnelCapabilitiesConnection(where: FilterHierarchyScopePersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelCapabilityConnection
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationalLocationsConnection(where: FilterHierarchyScopeOperationalLocationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationalLocationConnection
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  operationsRequestsConnection(where: FilterHierarchyScopeOperationsRequestInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsRequestConnection
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  segmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementConnection
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  materialLotsConnection(where: FilterHierarchyScopeMaterialLotInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementEquipmentRequirementConnection
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterHierarchyScopeOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOpenPurchaseOrderConnection
}

type HierarchyScopeHierarchyScopeConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeHierarchyScopesEdge]
  hierarchyScopes: [HierarchyScope]
}

type HierarchyScopeHierarchyScopesEdge {
  node: HierarchyScopeHierarchyScope
  cursor: String
}

type HierarchyScopeMaterialDefinition {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  calendarisedThroughputSetItems(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionCalendarisedThroughputSetItemConnection
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOperationsSegmentMaterialSpecificationConnection
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  materialLotsConnection(where: FilterMaterialDefinitionMaterialLotInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionSegmentRequirementMaterialRequirementConnection
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterMaterialDefinitionOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOpenPurchaseOrderConnection
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
  materialPropertiesConnection(where: FilterMaterialDefinitionMaterialPropertyInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialPropertyConnection
}

type HierarchyScopeMaterialDefinitionConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeMaterialDefinitionsEdge]
  materialDefinitions: [HierarchyScope]
}

type HierarchyScopeMaterialDefinitionsEdge {
  node: HierarchyScopeMaterialDefinition
  cursor: String
}

type HierarchyScopeMaterialLot {
  id: Int
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialLotSegmentRequirementMaterialRequirementConnection
}

type HierarchyScopeMaterialLotConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeMaterialLotsEdge]
  materialLots: [HierarchyScope]
}

type HierarchyScopeMaterialLotsEdge {
  node: HierarchyScopeMaterialLot
  cursor: String
}

type HierarchyScopeOpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type HierarchyScopeOpenPurchaseOrderConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOpenPurchaseOrdersEdge]
  openPurchaseOrders: [HierarchyScope]
}

type HierarchyScopeOpenPurchaseOrdersEdge {
  node: HierarchyScopeOpenPurchaseOrder
  cursor: String
}

type HierarchyScopeOperationalLocation {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentEquipmentSpecificationConnection
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  materialLotsConnection(where: FilterOperationalLocationMaterialLotInput, first: Int, after: String, orderBy: [String]): OperationalLocationMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementEquipmentRequirementConnection
}

type HierarchyScopeOperationalLocationConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationalLocationsEdge]
  operationalLocations: [HierarchyScope]
}

type HierarchyScopeOperationalLocationsEdge {
  node: HierarchyScopeOperationalLocation
  cursor: String
}

type HierarchyScopeOperationsDefinition {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: OperationsDefinitionClass
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsDefinitionOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionOperationsSegmentConnection
}

type HierarchyScopeOperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: Scenario
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  operationsDefinitionsConnection(where: FilterOperationsDefinitionClassOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOperationsDefinitionConnection
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
  orderItemsConnection(where: FilterOperationsDefinitionClassOrderItemInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOrderItemConnection
}

type HierarchyScopeOperationsDefinitionClassConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsDefinitionClassesEdge]
  operationsDefinitionClasses: [HierarchyScope]
}

type HierarchyScopeOperationsDefinitionClassesEdge {
  node: HierarchyScopeOperationsDefinitionClass
  cursor: String
}

type HierarchyScopeOperationsDefinitionConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsDefinitionsEdge]
  operationsDefinitions: [HierarchyScope]
}

type HierarchyScopeOperationsDefinitionsEdge {
  node: HierarchyScopeOperationsDefinition
  cursor: String
}

type HierarchyScopeOperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: Scenario
  operationsRequestProfile: OperationsRequestProfile
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestPersonnelConnection
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestEquipmentConnection
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsRequestSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsRequestSegmentRequirementConnection
}

type HierarchyScopeOperationsRequestConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsRequestsEdge]
  operationsRequests: [HierarchyScope]
}

type HierarchyScopeOperationsRequestsEdge {
  node: HierarchyScopeOperationsRequest
  cursor: String
}

type HierarchyScopeOperationsSegment {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  calendarisedThroughputSet: CalendarisedThroughputSet
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterOperationsSegmentChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentChangeoverSetItemConnection
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentConnection
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterOperationsSegmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentCapabilityConnection
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterOperationsSegmentPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelCapabilityConnection
  descendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  descendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  ascendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  ascendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPropertyConnection
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesFromOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentDependenciesToOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsSegmentOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsRequestConnection
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsSegmentSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsSegmentSegmentRequirementConnection
}

type HierarchyScopeOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsSegmentsEdge]
  operationsSegments: [HierarchyScope]
}

type HierarchyScopeOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type HierarchyScopeOperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsSegmentEquipmentSpecificationsEdge]
  operationsSegmentEquipmentSpecifications: [HierarchyScope]
}

type HierarchyScopeOperationsSegmentEquipmentSpecificationsEdge {
  node: HierarchyScopeOperationsSegmentEquipmentSpecification
  cursor: String
}

type HierarchyScopeOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type HierarchyScopeOperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsSegmentMaterialSpecificationsEdge]
  operationsSegmentMaterialSpecifications: [HierarchyScope]
}

type HierarchyScopeOperationsSegmentMaterialSpecificationsEdge {
  node: HierarchyScopeOperationsSegmentMaterialSpecification
  cursor: String
}

type HierarchyScopeOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type HierarchyScopeOperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeOperationsSegmentPersonnelSpecificationsEdge]
  operationsSegmentPersonnelSpecifications: [HierarchyScope]
}

type HierarchyScopeOperationsSegmentPersonnelSpecificationsEdge {
  node: HierarchyScopeOperationsSegmentPersonnelSpecification
  cursor: String
}

type HierarchyScopeOperationsSegmentsEdge {
  node: HierarchyScopeOperationsSegment
  cursor: String
}

type HierarchyScopePerson {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personPropertiesConnection(where: FilterPersonPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPersonPropertyConnection
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonOperationsSegmentPersonnelSpecificationConnection
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterPersonOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): PersonOperationsRequestPersonnelConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonSegmentRequirementPersonnelRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type HierarchyScopePersonConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopePersonsEdge]
  persons: [HierarchyScope]
}

type HierarchyScopePersonnelCapabilitiesEdge {
  node: HierarchyScopePersonnelCapability
  cursor: String
}

type HierarchyScopePersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type HierarchyScopePersonnelCapabilityConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopePersonnelCapabilitiesEdge]
  personnelCapabilities: [HierarchyScope]
}

type HierarchyScopePersonnelClass {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelClassPropertiesConnection(where: FilterPersonnelClassPersonnelClassPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelClassPropertyConnection
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelClassPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelPositionConnection
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterPersonnelClassPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelCapabilityConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonnelClassOperationsSegmentPersonnelSpecificationConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonnelClassSegmentRequirementPersonnelRequirementConnection
}

type HierarchyScopePersonnelClassConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopePersonnelClassesEdge]
  personnelClasses: [HierarchyScope]
}

type HierarchyScopePersonnelClassesEdge {
  node: HierarchyScopePersonnelClass
  cursor: String
}

type HierarchyScopePersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  description: String
  scenario: Scenario
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonnelPositionPropertyConnection
}

type HierarchyScopePersonnelPositionConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopePersonnelPositionsEdge]
  personnelPositions: [HierarchyScope]
}

type HierarchyScopePersonnelPositionsEdge {
  node: HierarchyScopePersonnelPosition
  cursor: String
}

type HierarchyScopePersonsEdge {
  node: HierarchyScopePerson
  cursor: String
}

type HierarchyScopeSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementConnection
  descendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  descendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  ascendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  ascendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPropertyConnection
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementEquipmentRequirementConnection
}

type HierarchyScopeSegmentRequirementConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeSegmentRequirementsEdge]
  segmentRequirements: [HierarchyScope]
}

type HierarchyScopeSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
}

type HierarchyScopeSegmentRequirementEquipmentRequirementConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeSegmentRequirementEquipmentRequirementsEdge]
  segmentRequirementEquipmentRequirements: [HierarchyScope]
}

type HierarchyScopeSegmentRequirementEquipmentRequirementsEdge {
  node: HierarchyScopeSegmentRequirementEquipmentRequirement
  cursor: String
}

type HierarchyScopeSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type HierarchyScopeSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [HierarchyScope]
}

type HierarchyScopeSegmentRequirementMaterialRequirementsEdge {
  node: HierarchyScopeSegmentRequirementMaterialRequirement
  cursor: String
}

type HierarchyScopeSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type HierarchyScopeSegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeSegmentRequirementPersonnelRequirementsEdge]
  segmentRequirementPersonnelRequirements: [HierarchyScope]
}

type HierarchyScopeSegmentRequirementPersonnelRequirementsEdge {
  node: HierarchyScopeSegmentRequirementPersonnelRequirement
  cursor: String
}

type HierarchyScopeSegmentRequirementsEdge {
  node: HierarchyScopeSegmentRequirement
  cursor: String
}

type MaterialDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  calendarisedThroughputSetItems(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionCalendarisedThroughputSetItemConnection
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOperationsSegmentMaterialSpecificationConnection
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  materialLotsConnection(where: FilterMaterialDefinitionMaterialLotInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionSegmentRequirementMaterialRequirementConnection
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterMaterialDefinitionOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOpenPurchaseOrderConnection
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
  materialPropertiesConnection(where: FilterMaterialDefinitionMaterialPropertyInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialPropertyConnection
}

type MaterialDefinitionCalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type MaterialDefinitionCalendarisedThroughputSetItemConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionCalendarisedThroughputSetItemsEdge]
  calendarisedThroughputSetItems: [MaterialDefinition]
}

type MaterialDefinitionCalendarisedThroughputSetItemsEdge {
  node: MaterialDefinitionCalendarisedThroughputSetItem
  cursor: String
}

type MaterialDefinitionConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [MaterialDefinitionEdge]
  materialDefinitions: [MaterialDefinition]
}

type MaterialDefinitionEdge {
  node: MaterialDefinition
  cursor: String
}

type MaterialDefinitionMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialLotSegmentRequirementMaterialRequirementConnection
}

type MaterialDefinitionMaterialLotConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionMaterialLotsEdge]
  materialLots: [MaterialDefinition]
}

type MaterialDefinitionMaterialLotsEdge {
  node: MaterialDefinitionMaterialLot
  cursor: String
}

type MaterialDefinitionMaterialPropertiesEdge {
  node: MaterialDefinitionMaterialProperty
  cursor: String
}

type MaterialDefinitionMaterialProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: OptimisationPropertyValue
}

type MaterialDefinitionMaterialPropertyConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionMaterialPropertiesEdge]
  materialProperties: [MaterialDefinition]
}

type MaterialDefinitionOpenPurchaseOrder {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type MaterialDefinitionOpenPurchaseOrderConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionOpenPurchaseOrdersEdge]
  openPurchaseOrders: [MaterialDefinition]
}

type MaterialDefinitionOpenPurchaseOrdersEdge {
  node: MaterialDefinitionOpenPurchaseOrder
  cursor: String
}

type MaterialDefinitionOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type MaterialDefinitionOperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionOperationsSegmentMaterialSpecificationsEdge]
  operationsSegmentMaterialSpecifications: [MaterialDefinition]
}

type MaterialDefinitionOperationsSegmentMaterialSpecificationsEdge {
  node: MaterialDefinitionOperationsSegmentMaterialSpecification
  cursor: String
}

type MaterialDefinitionSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type MaterialDefinitionSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [MaterialDefinition]
}

type MaterialDefinitionSegmentRequirementMaterialRequirementsEdge {
  node: MaterialDefinitionSegmentRequirementMaterialRequirement
  cursor: String
}

type MaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialLotSegmentRequirementMaterialRequirementConnection
}

type MaterialLotConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [MaterialLotEdge]
  materialLots: [MaterialLot]
}

type MaterialLotEdge {
  node: MaterialLot
  cursor: String
}

type MaterialLotSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type MaterialLotSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [MaterialLotSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [MaterialLot]
}

type MaterialLotSegmentRequirementMaterialRequirementsEdge {
  node: MaterialLotSegmentRequirementMaterialRequirement
  cursor: String
}

type MaterialProperty {
  id: Int
  materialDefinition: MaterialDefinition
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: OptimisationPropertyValue
}

type MaterialPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [MaterialPropertyEdge]
  materialProperties: [MaterialProperty]
}

type MaterialPropertyEdge {
  node: MaterialProperty
  cursor: String
}

type Mutation {
  createScenario(data: CreateScenarioInput): Scenario
  createHierarchyScope(data: CreateHierarchyScopeInput): HierarchyScope
  createOptimisationProperty(data: CreateOptimisationPropertyInput): OptimisationProperty
  createOptimisationPropertyValue(data: CreateOptimisationPropertyValueInput): OptimisationPropertyValue
  createChangeoverSet(data: CreateChangeoverSetInput): ChangeoverSet
  createChangeoverSetItem(data: CreateChangeoverSetItemInput): ChangeoverSetItem
  createAvailabilityTemplate(data: CreateAvailabilityTemplateInput): AvailabilityTemplate
  createAvailabilityTemplateItem(data: CreateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  createCalendarisedAvailabilityTemplateSet(data: CreateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  createCalendarisedAvailabilityTemplateSetItem(data: CreateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  createEquipment(data: CreateEquipmentInput): Equipment
  createHierarchyScopeDescendant(data: CreateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  createEquipmentChild(data: CreateEquipmentChildInput): EquipmentChild
  createEquipmentDescendant(data: CreateEquipmentDescendantInput): EquipmentDescendant
  createEquipmentProperty(data: CreateEquipmentPropertyInput): EquipmentProperty
  createEquipmentClass(data: CreateEquipmentClassInput): EquipmentClass
  createEquipmentClassEquipmentMember(data: CreateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  createMaterialDefinition(data: CreateMaterialDefinitionInput): MaterialDefinition
  createPersonnelClass(data: CreatePersonnelClassInput): PersonnelClass
  createPersonnelClassProperty(data: CreatePersonnelClassPropertyInput): PersonnelClassProperty
  createPersonnelPosition(data: CreatePersonnelPositionInput): PersonnelPosition
  createPerson(data: CreatePersonInput): Person
  createPersonProperty(data: CreatePersonPropertyInput): PersonProperty
  createPersonnelClassPersonMember(data: CreatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  createPersonnelPositionPersonMember(data: CreatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  createPersonnelPositionProperty(data: CreatePersonnelPositionPropertyInput): PersonnelPositionProperty
  createOperationsDefinitionClass(data: CreateOperationsDefinitionClassInput): OperationsDefinitionClass
  createOperationsDefinition(data: CreateOperationsDefinitionInput): OperationsDefinition
  createOperationsSegment(data: CreateOperationsSegmentInput): OperationsSegment
  createEquipmentCapability(data: CreateEquipmentCapabilityInput): EquipmentCapability
  createPersonnelCapability(data: CreatePersonnelCapabilityInput): PersonnelCapability
  createOperationsSegmentDescendant(data: CreateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  createOperationsSegmentProperty(data: CreateOperationsSegmentPropertyInput): OperationsSegmentProperty
  createOperationsSegmentDependency(data: CreateOperationsSegmentDependencyInput): OperationsSegmentDependency
  createOperationalLocation(data: CreateOperationalLocationInput): OperationalLocation
  createCalendarisedThroughputSet(data: CreateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  createCalendarisedThroughputSetItem(data: CreateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  createOperationsSegmentMaterialSpecification(data: CreateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  createOperationsSegmentPersonnelSpecification(data: CreateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  createOperationsSegmentEquipmentSpecification(data: CreateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  createTimePeriod(data: CreateTimePeriodInput): TimePeriod
  createOrderStatus(data: CreateOrderStatusInput): OrderStatus
  createOrder(data: CreateOrderInput): Order
  createOrderItem(data: CreateOrderItemInput): OrderItem
  createOperationsRequest(data: CreateOperationsRequestInput): OperationsRequest
  createOperationsRequestPersonnel(data: CreateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  createOperationsRequestEquipment(data: CreateOperationsRequestEquipmentInput): OperationsRequestEquipment
  createOperationsRequestProfile(data: CreateOperationsRequestProfileInput): OperationsRequestProfile
  createSegmentRequirement(data: CreateSegmentRequirementInput): SegmentRequirement
  createSegmentRequirementDescendant(data: CreateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  createSegmentRequirementProperty(data: CreateSegmentRequirementPropertyInput): SegmentRequirementProperty
  createMaterialLot(data: CreateMaterialLotInput): MaterialLot
  createSegmentRequirementMaterialRequirement(data: CreateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  createSegmentRequirementPersonnelRequirement(data: CreateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  createSegmentRequirementEquipmentRequirement(data: CreateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  createOpenPurchaseOrder(data: CreateOpenPurchaseOrderInput): OpenPurchaseOrder
  createMaterialProperty(data: CreateMaterialPropertyInput): MaterialProperty
  createConfigurableApplicationParameter(data: CreateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  createColourScheme(data: CreateColourSchemeInput): ColourScheme
  createColourSchemeItem(data: CreateColourSchemeItemInput): ColourSchemeItem
  createDowntimePeriod(data: CreateDowntimePeriodInput): DowntimePeriod
  createEquipmentDowntimePeriod(data: CreateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  createPersonDowntimePeriod(data: CreatePersonDowntimePeriodInput): PersonDowntimePeriod
  createOptimisationHierarchy(data: CreateOptimisationHierarchyInput): OptimisationHierarchy
  createOptimisationHierarchyAttribute(data: CreateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  createScenarioAttribute(data: CreateScenarioAttributeInput): ScenarioAttribute
  createOptimisationPreferredSequence(data: CreateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  createOptimisationPreferredSequenceItem(data: CreateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  createOrderProperty(data: CreateOrderPropertyInput): OrderProperty
  updateScenario(where: FindScenarioInput, data: UpdateScenarioInput): Scenario
  updateHierarchyScope(where: FindHierarchyScopeInput, data: UpdateHierarchyScopeInput): HierarchyScope
  updateOptimisationProperty(where: FindOptimisationPropertyInput, data: UpdateOptimisationPropertyInput): OptimisationProperty
  updateOptimisationPropertyValue(where: FindOptimisationPropertyValueInput, data: UpdateOptimisationPropertyValueInput): OptimisationPropertyValue
  updateChangeoverSet(where: FindChangeoverSetInput, data: UpdateChangeoverSetInput): ChangeoverSet
  updateChangeoverSetItem(where: FindChangeoverSetItemInput, data: UpdateChangeoverSetItemInput): ChangeoverSetItem
  updateAvailabilityTemplate(where: FindAvailabilityTemplateInput, data: UpdateAvailabilityTemplateInput): AvailabilityTemplate
  updateAvailabilityTemplateItem(where: FindAvailabilityTemplateItemInput, data: UpdateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  updateCalendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput, data: UpdateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  updateCalendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput, data: UpdateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  updateEquipment(where: FindEquipmentInput, data: UpdateEquipmentInput): Equipment
  updateHierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput, data: UpdateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  updateEquipmentChild(where: FindEquipmentChildInput, data: UpdateEquipmentChildInput): EquipmentChild
  updateEquipmentDescendant(where: FindEquipmentDescendantInput, data: UpdateEquipmentDescendantInput): EquipmentDescendant
  updateEquipmentProperty(where: FindEquipmentPropertyInput, data: UpdateEquipmentPropertyInput): EquipmentProperty
  updateEquipmentClass(where: FindEquipmentClassInput, data: UpdateEquipmentClassInput): EquipmentClass
  updateEquipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput, data: UpdateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  updateMaterialDefinition(where: FindMaterialDefinitionInput, data: UpdateMaterialDefinitionInput): MaterialDefinition
  updatePersonnelClass(where: FindPersonnelClassInput, data: UpdatePersonnelClassInput): PersonnelClass
  updatePersonnelClassProperty(where: FindPersonnelClassPropertyInput, data: UpdatePersonnelClassPropertyInput): PersonnelClassProperty
  updatePersonnelPosition(where: FindPersonnelPositionInput, data: UpdatePersonnelPositionInput): PersonnelPosition
  updatePerson(where: FindPersonInput, data: UpdatePersonInput): Person
  updatePersonProperty(where: FindPersonPropertyInput, data: UpdatePersonPropertyInput): PersonProperty
  updatePersonnelClassPersonMember(where: FindPersonnelClassPersonMemberInput, data: UpdatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  updatePersonnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput, data: UpdatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  updatePersonnelPositionProperty(where: FindPersonnelPositionPropertyInput, data: UpdatePersonnelPositionPropertyInput): PersonnelPositionProperty
  updateOperationsDefinitionClass(where: FindOperationsDefinitionClassInput, data: UpdateOperationsDefinitionClassInput): OperationsDefinitionClass
  updateOperationsDefinition(where: FindOperationsDefinitionInput, data: UpdateOperationsDefinitionInput): OperationsDefinition
  updateOperationsSegment(where: FindOperationsSegmentInput, data: UpdateOperationsSegmentInput): OperationsSegment
  updateEquipmentCapability(where: FindEquipmentCapabilityInput, data: UpdateEquipmentCapabilityInput): EquipmentCapability
  updatePersonnelCapability(where: FindPersonnelCapabilityInput, data: UpdatePersonnelCapabilityInput): PersonnelCapability
  updateOperationsSegmentDescendant(where: FindOperationsSegmentDescendantInput, data: UpdateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  updateOperationsSegmentProperty(where: FindOperationsSegmentPropertyInput, data: UpdateOperationsSegmentPropertyInput): OperationsSegmentProperty
  updateOperationsSegmentDependency(where: FindOperationsSegmentDependencyInput, data: UpdateOperationsSegmentDependencyInput): OperationsSegmentDependency
  updateOperationalLocation(where: FindOperationalLocationInput, data: UpdateOperationalLocationInput): OperationalLocation
  updateCalendarisedThroughputSet(where: FindCalendarisedThroughputSetInput, data: UpdateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  updateCalendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput, data: UpdateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  updateOperationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput, data: UpdateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  updateOperationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput, data: UpdateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  updateOperationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput, data: UpdateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  updateTimePeriod(where: FindTimePeriodInput, data: UpdateTimePeriodInput): TimePeriod
  updateOrderStatus(where: FindOrderStatusInput, data: UpdateOrderStatusInput): OrderStatus
  updateOrder(where: FindOrderInput, data: UpdateOrderInput): Order
  updateOrderItem(where: FindOrderItemInput, data: UpdateOrderItemInput): OrderItem
  updateOperationsRequest(where: FindOperationsRequestInput, data: UpdateOperationsRequestInput): OperationsRequest
  updateOperationsRequestPersonnel(where: FindOperationsRequestPersonnelInput, data: UpdateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  updateOperationsRequestEquipment(where: FindOperationsRequestEquipmentInput, data: UpdateOperationsRequestEquipmentInput): OperationsRequestEquipment
  updateOperationsRequestProfile(where: FindOperationsRequestProfileInput, data: UpdateOperationsRequestProfileInput): OperationsRequestProfile
  updateSegmentRequirement(where: FindSegmentRequirementInput, data: UpdateSegmentRequirementInput): SegmentRequirement
  updateSegmentRequirementDescendant(where: FindSegmentRequirementDescendantInput, data: UpdateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  updateSegmentRequirementProperty(where: FindSegmentRequirementPropertyInput, data: UpdateSegmentRequirementPropertyInput): SegmentRequirementProperty
  updateMaterialLot(where: FindMaterialLotInput, data: UpdateMaterialLotInput): MaterialLot
  updateSegmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput, data: UpdateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  updateSegmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput, data: UpdateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  updateSegmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput, data: UpdateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  updateOpenPurchaseOrder(where: FindOpenPurchaseOrderInput, data: UpdateOpenPurchaseOrderInput): OpenPurchaseOrder
  updateMaterialProperty(where: FindMaterialPropertyInput, data: UpdateMaterialPropertyInput): MaterialProperty
  updateConfigurableApplicationParameter(where: FindConfigurableApplicationParameterInput, data: UpdateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  updateColourScheme(where: FindColourSchemeInput, data: UpdateColourSchemeInput): ColourScheme
  updateColourSchemeItem(where: FindColourSchemeItemInput, data: UpdateColourSchemeItemInput): ColourSchemeItem
  updateDowntimePeriod(where: FindDowntimePeriodInput, data: UpdateDowntimePeriodInput): DowntimePeriod
  updateEquipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput, data: UpdateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  updatePersonDowntimePeriod(where: FindPersonDowntimePeriodInput, data: UpdatePersonDowntimePeriodInput): PersonDowntimePeriod
  updateOptimisationHierarchy(where: FindOptimisationHierarchyInput, data: UpdateOptimisationHierarchyInput): OptimisationHierarchy
  updateOptimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput, data: UpdateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  updateScenarioAttribute(where: FindScenarioAttributeInput, data: UpdateScenarioAttributeInput): ScenarioAttribute
  updateOptimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput, data: UpdateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  updateOptimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput, data: UpdateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  updateOrderProperty(where: FindOrderPropertyInput, data: UpdateOrderPropertyInput): OrderProperty
  upsertScenario(create: CreateScenarioInput, update: UpdateScenarioInput): Scenario
  upsertHierarchyScope(create: CreateHierarchyScopeInput, update: UpdateHierarchyScopeInput): HierarchyScope
  upsertOptimisationProperty(create: CreateOptimisationPropertyInput, update: UpdateOptimisationPropertyInput): OptimisationProperty
  upsertOptimisationPropertyValue(create: CreateOptimisationPropertyValueInput, update: UpdateOptimisationPropertyValueInput): OptimisationPropertyValue
  upsertChangeoverSet(create: CreateChangeoverSetInput, update: UpdateChangeoverSetInput): ChangeoverSet
  upsertChangeoverSetItem(create: CreateChangeoverSetItemInput, update: UpdateChangeoverSetItemInput): ChangeoverSetItem
  upsertAvailabilityTemplate(create: CreateAvailabilityTemplateInput, update: UpdateAvailabilityTemplateInput): AvailabilityTemplate
  upsertAvailabilityTemplateItem(create: CreateAvailabilityTemplateItemInput, update: UpdateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  upsertCalendarisedAvailabilityTemplateSet(create: CreateCalendarisedAvailabilityTemplateSetInput, update: UpdateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  upsertCalendarisedAvailabilityTemplateSetItem(create: CreateCalendarisedAvailabilityTemplateSetItemInput, update: UpdateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  upsertEquipment(create: CreateEquipmentInput, update: UpdateEquipmentInput): Equipment
  upsertHierarchyScopeDescendant(create: CreateHierarchyScopeDescendantInput, update: UpdateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  upsertEquipmentChild(create: CreateEquipmentChildInput, update: UpdateEquipmentChildInput): EquipmentChild
  upsertEquipmentDescendant(create: CreateEquipmentDescendantInput, update: UpdateEquipmentDescendantInput): EquipmentDescendant
  upsertEquipmentProperty(create: CreateEquipmentPropertyInput, update: UpdateEquipmentPropertyInput): EquipmentProperty
  upsertEquipmentClass(create: CreateEquipmentClassInput, update: UpdateEquipmentClassInput): EquipmentClass
  upsertEquipmentClassEquipmentMember(create: CreateEquipmentClassEquipmentMemberInput, update: UpdateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  upsertMaterialDefinition(create: CreateMaterialDefinitionInput, update: UpdateMaterialDefinitionInput): MaterialDefinition
  upsertPersonnelClass(create: CreatePersonnelClassInput, update: UpdatePersonnelClassInput): PersonnelClass
  upsertPersonnelClassProperty(create: CreatePersonnelClassPropertyInput, update: UpdatePersonnelClassPropertyInput): PersonnelClassProperty
  upsertPersonnelPosition(create: CreatePersonnelPositionInput, update: UpdatePersonnelPositionInput): PersonnelPosition
  upsertPerson(create: CreatePersonInput, update: UpdatePersonInput): Person
  upsertPersonProperty(create: CreatePersonPropertyInput, update: UpdatePersonPropertyInput): PersonProperty
  upsertPersonnelClassPersonMember(create: CreatePersonnelClassPersonMemberInput, update: UpdatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  upsertPersonnelPositionPersonMember(create: CreatePersonnelPositionPersonMemberInput, update: UpdatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  upsertPersonnelPositionProperty(create: CreatePersonnelPositionPropertyInput, update: UpdatePersonnelPositionPropertyInput): PersonnelPositionProperty
  upsertOperationsDefinitionClass(create: CreateOperationsDefinitionClassInput, update: UpdateOperationsDefinitionClassInput): OperationsDefinitionClass
  upsertOperationsDefinition(create: CreateOperationsDefinitionInput, update: UpdateOperationsDefinitionInput): OperationsDefinition
  upsertOperationsSegment(create: CreateOperationsSegmentInput, update: UpdateOperationsSegmentInput): OperationsSegment
  upsertEquipmentCapability(create: CreateEquipmentCapabilityInput, update: UpdateEquipmentCapabilityInput): EquipmentCapability
  upsertPersonnelCapability(create: CreatePersonnelCapabilityInput, update: UpdatePersonnelCapabilityInput): PersonnelCapability
  upsertOperationsSegmentDescendant(create: CreateOperationsSegmentDescendantInput, update: UpdateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  upsertOperationsSegmentProperty(create: CreateOperationsSegmentPropertyInput, update: UpdateOperationsSegmentPropertyInput): OperationsSegmentProperty
  upsertOperationsSegmentDependency(create: CreateOperationsSegmentDependencyInput, update: UpdateOperationsSegmentDependencyInput): OperationsSegmentDependency
  upsertOperationalLocation(create: CreateOperationalLocationInput, update: UpdateOperationalLocationInput): OperationalLocation
  upsertCalendarisedThroughputSet(create: CreateCalendarisedThroughputSetInput, update: UpdateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  upsertCalendarisedThroughputSetItem(create: CreateCalendarisedThroughputSetItemInput, update: UpdateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  upsertOperationsSegmentMaterialSpecification(create: CreateOperationsSegmentMaterialSpecificationInput, update: UpdateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  upsertOperationsSegmentPersonnelSpecification(create: CreateOperationsSegmentPersonnelSpecificationInput, update: UpdateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  upsertOperationsSegmentEquipmentSpecification(create: CreateOperationsSegmentEquipmentSpecificationInput, update: UpdateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  upsertTimePeriod(create: CreateTimePeriodInput, update: UpdateTimePeriodInput): TimePeriod
  upsertOrderStatus(create: CreateOrderStatusInput, update: UpdateOrderStatusInput): OrderStatus
  upsertOrder(create: CreateOrderInput, update: UpdateOrderInput): Order
  upsertOrderItem(create: CreateOrderItemInput, update: UpdateOrderItemInput): OrderItem
  upsertOperationsRequest(create: CreateOperationsRequestInput, update: UpdateOperationsRequestInput): OperationsRequest
  upsertOperationsRequestPersonnel(create: CreateOperationsRequestPersonnelInput, update: UpdateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  upsertOperationsRequestEquipment(create: CreateOperationsRequestEquipmentInput, update: UpdateOperationsRequestEquipmentInput): OperationsRequestEquipment
  upsertOperationsRequestProfile(create: CreateOperationsRequestProfileInput, update: UpdateOperationsRequestProfileInput): OperationsRequestProfile
  upsertSegmentRequirement(create: CreateSegmentRequirementInput, update: UpdateSegmentRequirementInput): SegmentRequirement
  upsertSegmentRequirementDescendant(create: CreateSegmentRequirementDescendantInput, update: UpdateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  upsertSegmentRequirementProperty(create: CreateSegmentRequirementPropertyInput, update: UpdateSegmentRequirementPropertyInput): SegmentRequirementProperty
  upsertMaterialLot(create: CreateMaterialLotInput, update: UpdateMaterialLotInput): MaterialLot
  upsertSegmentRequirementMaterialRequirement(create: CreateSegmentRequirementMaterialRequirementInput, update: UpdateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  upsertSegmentRequirementPersonnelRequirement(create: CreateSegmentRequirementPersonnelRequirementInput, update: UpdateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  upsertSegmentRequirementEquipmentRequirement(create: CreateSegmentRequirementEquipmentRequirementInput, update: UpdateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  upsertOpenPurchaseOrder(create: CreateOpenPurchaseOrderInput, update: UpdateOpenPurchaseOrderInput): OpenPurchaseOrder
  upsertMaterialProperty(create: CreateMaterialPropertyInput, update: UpdateMaterialPropertyInput): MaterialProperty
  upsertConfigurableApplicationParameter(create: CreateConfigurableApplicationParameterInput, update: UpdateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  upsertColourScheme(create: CreateColourSchemeInput, update: UpdateColourSchemeInput): ColourScheme
  upsertColourSchemeItem(create: CreateColourSchemeItemInput, update: UpdateColourSchemeItemInput): ColourSchemeItem
  upsertDowntimePeriod(create: CreateDowntimePeriodInput, update: UpdateDowntimePeriodInput): DowntimePeriod
  upsertEquipmentDowntimePeriod(create: CreateEquipmentDowntimePeriodInput, update: UpdateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  upsertPersonDowntimePeriod(create: CreatePersonDowntimePeriodInput, update: UpdatePersonDowntimePeriodInput): PersonDowntimePeriod
  upsertOptimisationHierarchy(create: CreateOptimisationHierarchyInput, update: UpdateOptimisationHierarchyInput): OptimisationHierarchy
  upsertOptimisationHierarchyAttribute(create: CreateOptimisationHierarchyAttributeInput, update: UpdateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  upsertScenarioAttribute(create: CreateScenarioAttributeInput, update: UpdateScenarioAttributeInput): ScenarioAttribute
  upsertOptimisationPreferredSequence(create: CreateOptimisationPreferredSequenceInput, update: UpdateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  upsertOptimisationPreferredSequenceItem(create: CreateOptimisationPreferredSequenceItemInput, update: UpdateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  upsertOrderProperty(create: CreateOrderPropertyInput, update: UpdateOrderPropertyInput): OrderProperty
  deleteScenario(where: FindScenarioInput): Scenario
  deleteHierarchyScope(where: FindHierarchyScopeInput): HierarchyScope
  deleteOptimisationProperty(where: FindOptimisationPropertyInput): OptimisationProperty
  deleteOptimisationPropertyValue(where: FindOptimisationPropertyValueInput): OptimisationPropertyValue
  deleteChangeoverSet(where: FindChangeoverSetInput): ChangeoverSet
  deleteChangeoverSetItem(where: FindChangeoverSetItemInput): ChangeoverSetItem
  deleteAvailabilityTemplate(where: FindAvailabilityTemplateInput): AvailabilityTemplate
  deleteAvailabilityTemplateItem(where: FindAvailabilityTemplateItemInput): AvailabilityTemplateItem
  deleteCalendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  deleteCalendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  deleteEquipment(where: FindEquipmentInput): Equipment
  deleteHierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput): HierarchyScopeDescendant
  deleteEquipmentChild(where: FindEquipmentChildInput): EquipmentChild
  deleteEquipmentDescendant(where: FindEquipmentDescendantInput): EquipmentDescendant
  deleteEquipmentProperty(where: FindEquipmentPropertyInput): EquipmentProperty
  deleteEquipmentClass(where: FindEquipmentClassInput): EquipmentClass
  deleteEquipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  deleteMaterialDefinition(where: FindMaterialDefinitionInput): MaterialDefinition
  deletePersonnelClass(where: FindPersonnelClassInput): PersonnelClass
  deletePersonnelClassProperty(where: FindPersonnelClassPropertyInput): PersonnelClassProperty
  deletePersonnelPosition(where: FindPersonnelPositionInput): PersonnelPosition
  deletePerson(where: FindPersonInput): Person
  deletePersonProperty(where: FindPersonPropertyInput): PersonProperty
  deletePersonnelClassPersonMember(where: FindPersonnelClassPersonMemberInput): PersonnelClassPersonMember
  deletePersonnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  deletePersonnelPositionProperty(where: FindPersonnelPositionPropertyInput): PersonnelPositionProperty
  deleteOperationsDefinitionClass(where: FindOperationsDefinitionClassInput): OperationsDefinitionClass
  deleteOperationsDefinition(where: FindOperationsDefinitionInput): OperationsDefinition
  deleteOperationsSegment(where: FindOperationsSegmentInput): OperationsSegment
  deleteEquipmentCapability(where: FindEquipmentCapabilityInput): EquipmentCapability
  deletePersonnelCapability(where: FindPersonnelCapabilityInput): PersonnelCapability
  deleteOperationsSegmentDescendant(where: FindOperationsSegmentDescendantInput): OperationsSegmentDescendant
  deleteOperationsSegmentProperty(where: FindOperationsSegmentPropertyInput): OperationsSegmentProperty
  deleteOperationsSegmentDependency(where: FindOperationsSegmentDependencyInput): OperationsSegmentDependency
  deleteOperationalLocation(where: FindOperationalLocationInput): OperationalLocation
  deleteCalendarisedThroughputSet(where: FindCalendarisedThroughputSetInput): CalendarisedThroughputSet
  deleteCalendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  deleteOperationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  deleteOperationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  deleteOperationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  deleteTimePeriod(where: FindTimePeriodInput): TimePeriod
  deleteOrderStatus(where: FindOrderStatusInput): OrderStatus
  deleteOrder(where: FindOrderInput): Order
  deleteOrderItem(where: FindOrderItemInput): OrderItem
  deleteOperationsRequest(where: FindOperationsRequestInput): OperationsRequest
  deleteOperationsRequestPersonnel(where: FindOperationsRequestPersonnelInput): OperationsRequestPersonnel
  deleteOperationsRequestEquipment(where: FindOperationsRequestEquipmentInput): OperationsRequestEquipment
  deleteOperationsRequestProfile(where: FindOperationsRequestProfileInput): OperationsRequestProfile
  deleteSegmentRequirement(where: FindSegmentRequirementInput): SegmentRequirement
  deleteSegmentRequirementDescendant(where: FindSegmentRequirementDescendantInput): SegmentRequirementDescendant
  deleteSegmentRequirementProperty(where: FindSegmentRequirementPropertyInput): SegmentRequirementProperty
  deleteMaterialLot(where: FindMaterialLotInput): MaterialLot
  deleteSegmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  deleteSegmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  deleteSegmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  deleteOpenPurchaseOrder(where: FindOpenPurchaseOrderInput): OpenPurchaseOrder
  deleteMaterialProperty(where: FindMaterialPropertyInput): MaterialProperty
  deleteConfigurableApplicationParameter(where: FindConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  deleteColourScheme(where: FindColourSchemeInput): ColourScheme
  deleteColourSchemeItem(where: FindColourSchemeItemInput): ColourSchemeItem
  deleteDowntimePeriod(where: FindDowntimePeriodInput): DowntimePeriod
  deleteEquipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  deletePersonDowntimePeriod(where: FindPersonDowntimePeriodInput): PersonDowntimePeriod
  deleteOptimisationHierarchy(where: FindOptimisationHierarchyInput): OptimisationHierarchy
  deleteOptimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  deleteScenarioAttribute(where: FindScenarioAttributeInput): ScenarioAttribute
  deleteOptimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  deleteOptimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  deleteOrderProperty(where: FindOrderPropertyInput): OrderProperty
}

type OpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type OpenPurchaseOrderConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OpenPurchaseOrderEdge]
  openPurchaseOrders: [OpenPurchaseOrder]
}

type OpenPurchaseOrderEdge {
  node: OpenPurchaseOrder
  cursor: String
}

type OperationalLocation {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  availabileForUse: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentEquipmentSpecificationConnection
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  materialLotsConnection(where: FilterOperationalLocationMaterialLotInput, first: Int, after: String, orderBy: [String]): OperationalLocationMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementEquipmentRequirementConnection
}

type OperationalLocationConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationalLocationEdge]
  operationalLocations: [OperationalLocation]
}

type OperationalLocationEdge {
  node: OperationalLocation
  cursor: String
}

type OperationalLocationMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialLotSegmentRequirementMaterialRequirementConnection
}

type OperationalLocationMaterialLotConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationMaterialLotsEdge]
  materialLots: [OperationalLocation]
}

type OperationalLocationMaterialLotsEdge {
  node: OperationalLocationMaterialLot
  cursor: String
}

type OperationalLocationOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type OperationalLocationOperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationOperationsSegmentEquipmentSpecificationsEdge]
  operationsSegmentEquipmentSpecifications: [OperationalLocation]
}

type OperationalLocationOperationsSegmentEquipmentSpecificationsEdge {
  node: OperationalLocationOperationsSegmentEquipmentSpecification
  cursor: String
}

type OperationalLocationOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: OperationsSegmentMaterialSpecification
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type OperationalLocationOperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationOperationsSegmentMaterialSpecificationsEdge]
  operationsSegmentMaterialSpecifications: [OperationalLocation]
}

type OperationalLocationOperationsSegmentMaterialSpecificationsEdge {
  node: OperationalLocationOperationsSegmentMaterialSpecification
  cursor: String
}

type OperationalLocationOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type OperationalLocationOperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationOperationsSegmentPersonnelSpecificationsEdge]
  operationsSegmentPersonnelSpecifications: [OperationalLocation]
}

type OperationalLocationOperationsSegmentPersonnelSpecificationsEdge {
  node: OperationalLocationOperationsSegmentPersonnelSpecification
  cursor: String
}

type OperationalLocationSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
}

type OperationalLocationSegmentRequirementEquipmentRequirementConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationSegmentRequirementEquipmentRequirementsEdge]
  segmentRequirementEquipmentRequirements: [OperationalLocation]
}

type OperationalLocationSegmentRequirementEquipmentRequirementsEdge {
  node: OperationalLocationSegmentRequirementEquipmentRequirement
  cursor: String
}

type OperationalLocationSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type OperationalLocationSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [OperationalLocation]
}

type OperationalLocationSegmentRequirementMaterialRequirementsEdge {
  node: OperationalLocationSegmentRequirementMaterialRequirement
  cursor: String
}

type OperationalLocationSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
}

type OperationalLocationSegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationSegmentRequirementPersonnelRequirementsEdge]
  segmentRequirementPersonnelRequirements: [OperationalLocation]
}

type OperationalLocationSegmentRequirementPersonnelRequirementsEdge {
  node: OperationalLocationSegmentRequirementPersonnelRequirement
  cursor: String
}

type OperationsDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: OperationsDefinitionClass
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsDefinitionOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionOperationsSegmentConnection
}

type OperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  operationsType: String
  scenario: Scenario
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  operationsDefinitionsConnection(where: FilterOperationsDefinitionClassOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOperationsDefinitionConnection
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
  orderItemsConnection(where: FilterOperationsDefinitionClassOrderItemInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOrderItemConnection
}

type OperationsDefinitionClassConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsDefinitionClassEdge]
  operationsDefinitionClasses: [OperationsDefinitionClass]
}

type OperationsDefinitionClassEdge {
  node: OperationsDefinitionClass
  cursor: String
}

type OperationsDefinitionClassOperationsDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsDefinitionOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionOperationsSegmentConnection
}

type OperationsDefinitionClassOperationsDefinitionConnection {
  pageInfo: PageInfo
  edges: [OperationsDefinitionClassOperationsDefinitionsEdge]
  operationsDefinitions: [OperationsDefinitionClass]
}

type OperationsDefinitionClassOperationsDefinitionsEdge {
  node: OperationsDefinitionClassOperationsDefinition
  cursor: String
}

type OperationsDefinitionClassOrderItem {
  id: Int
  order: Order
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
  operationsRequestProfilesConnection(where: FilterOrderItemOperationsRequestProfileInput, first: Int, after: String, orderBy: [String]): OrderItemOperationsRequestProfileConnection
}

type OperationsDefinitionClassOrderItemConnection {
  pageInfo: PageInfo
  edges: [OperationsDefinitionClassOrderItemsEdge]
  orderItems: [OperationsDefinitionClass]
}

type OperationsDefinitionClassOrderItemsEdge {
  node: OperationsDefinitionClassOrderItem
  cursor: String
}

type OperationsDefinitionConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsDefinitionEdge]
  operationsDefinitions: [OperationsDefinition]
}

type OperationsDefinitionEdge {
  node: OperationsDefinition
  cursor: String
}

type OperationsDefinitionOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  calendarisedThroughputSet: CalendarisedThroughputSet
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterOperationsSegmentChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentChangeoverSetItemConnection
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentConnection
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterOperationsSegmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentCapabilityConnection
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterOperationsSegmentPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelCapabilityConnection
  descendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  descendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  ascendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  ascendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPropertyConnection
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesFromOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentDependenciesToOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsSegmentOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsRequestConnection
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsSegmentSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsSegmentSegmentRequirementConnection
}

type OperationsDefinitionOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [OperationsDefinitionOperationsSegmentsEdge]
  operationsSegments: [OperationsDefinition]
}

type OperationsDefinitionOperationsSegmentsEdge {
  node: OperationsDefinitionOperationsSegment
  cursor: String
}

type OperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: Scenario
  operationsRequestProfile: OperationsRequestProfile
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestPersonnelConnection
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestEquipmentConnection
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsRequestSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsRequestSegmentRequirementConnection
}

type OperationsRequestConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsRequestEdge]
  operationsRequests: [OperationsRequest]
}

type OperationsRequestEdge {
  node: OperationsRequest
  cursor: String
}

type OperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  equipment: Equipment
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
}

type OperationsRequestEquipmentConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsRequestEquipmentEdge]
  operationsRequestEquipments: [OperationsRequestEquipment]
}

type OperationsRequestEquipmentEdge {
  node: OperationsRequestEquipment
  cursor: String
}

type OperationsRequestOperationsRequestEquipment {
  id: Int
  equipment: Equipment
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
}

type OperationsRequestOperationsRequestEquipmentConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestOperationsRequestEquipmentsEdge]
  operationsRequestEquipments: [OperationsRequest]
}

type OperationsRequestOperationsRequestEquipmentsEdge {
  node: OperationsRequestOperationsRequestEquipment
  cursor: String
}

type OperationsRequestOperationsRequestPersonnel {
  id: Int
  person: Person
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type OperationsRequestOperationsRequestPersonnelConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestOperationsRequestPersonnelsEdge]
  operationsRequestPersonnels: [OperationsRequest]
}

type OperationsRequestOperationsRequestPersonnelsEdge {
  node: OperationsRequestOperationsRequestPersonnel
  cursor: String
}

type OperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  person: Person
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type OperationsRequestPersonnelConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsRequestPersonnelEdge]
  operationsRequestPersonnels: [OperationsRequestPersonnel]
}

type OperationsRequestPersonnelEdge {
  node: OperationsRequestPersonnel
  cursor: String
}

type OperationsRequestProfile {
  id: Int
  orderItem: OrderItem
  startupCost: Float
  quantity: Float
  operationsRequests(where: FilterOperationsRequestProfileOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestProfileOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsRequestProfileOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsRequestProfileOperationsRequestConnection
}

type OperationsRequestProfileConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsRequestProfileEdge]
  operationsRequestProfiles: [OperationsRequestProfile]
}

type OperationsRequestProfileEdge {
  node: OperationsRequestProfile
  cursor: String
}

type OperationsRequestProfileOperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: Scenario
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestPersonnelConnection
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestEquipmentConnection
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsRequestSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsRequestSegmentRequirementConnection
}

type OperationsRequestProfileOperationsRequestConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestProfileOperationsRequestsEdge]
  operationsRequests: [OperationsRequestProfile]
}

type OperationsRequestProfileOperationsRequestsEdge {
  node: OperationsRequestProfileOperationsRequest
  cursor: String
}

type OperationsRequestSegmentRequirement {
  id: Int
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementConnection
  descendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  descendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  ascendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  ascendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPropertyConnection
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementEquipmentRequirementConnection
}

type OperationsRequestSegmentRequirementConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestSegmentRequirementsEdge]
  segmentRequirements: [OperationsRequest]
}

type OperationsRequestSegmentRequirementsEdge {
  node: OperationsRequestSegmentRequirement
  cursor: String
}

type OperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  calendarisedThroughputSet: CalendarisedThroughputSet
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterOperationsSegmentChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentChangeoverSetItemConnection
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentConnection
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterOperationsSegmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentCapabilityConnection
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterOperationsSegmentPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelCapabilityConnection
  descendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  descendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  ascendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  ascendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPropertyConnection
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesFromOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentDependenciesToOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsSegmentOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsRequestConnection
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsSegmentSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsSegmentSegmentRequirementConnection
}

type OperationsSegmentChangeoverSetItem {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
}

type OperationsSegmentChangeoverSetItemConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentChangeoverSetItemsEdge]
  changeoverSetItems: [OperationsSegment]
}

type OperationsSegmentChangeoverSetItemsEdge {
  node: OperationsSegmentChangeoverSetItem
  cursor: String
}

type OperationsSegmentConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentEdge]
  operationsSegments: [OperationsSegment]
}

type OperationsSegmentDependency {
  id: Int
  fromOperationsSegment: OperationsSegment
  toOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

type OperationsSegmentDependencyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentDependencyEdge]
  operationsSegmentDependencies: [OperationsSegmentDependency]
}

type OperationsSegmentDependencyEdge {
  node: OperationsSegmentDependency
  cursor: String
}

type OperationsSegmentDescendant {
  id: Int
  ascendant: OperationsSegment
  descendant: OperationsSegment
}

type OperationsSegmentDescendantConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentDescendantEdge]
  operationsSegmentDescendants: [OperationsSegmentDescendant]
}

type OperationsSegmentDescendantEdge {
  node: OperationsSegmentDescendant
  cursor: String
}

type OperationsSegmentEdge {
  node: OperationsSegment
  cursor: String
}

type OperationsSegmentEquipmentCapabilitiesEdge {
  node: OperationsSegmentEquipmentCapability
  cursor: String
}

type OperationsSegmentEquipmentCapability {
  id: Int
  equipment: Equipment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type OperationsSegmentEquipmentCapabilityConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentEquipmentCapabilitiesEdge]
  equipmentCapabilities: [OperationsSegment]
}

type OperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: MaterialDefinition
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsEdge]
  calendarisedThroughputSetItems: [OperationsSegmentEquipmentSpecification]
}

type OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsEdge {
  node: OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem
  cursor: String
}

type OperationsSegmentEquipmentSpecificationConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentEquipmentSpecificationEdge]
  operationsSegmentEquipmentSpecifications: [OperationsSegmentEquipmentSpecification]
}

type OperationsSegmentEquipmentSpecificationEdge {
  node: OperationsSegmentEquipmentSpecification
  cursor: String
}

type OperationsSegmentEquipmentSpecificationOperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  equipment: Equipment
}

type OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsEdge]
  operationsRequestEquipments: [OperationsSegmentEquipmentSpecification]
}

type OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsEdge {
  node: OperationsSegmentEquipmentSpecificationOperationsRequestEquipment
  cursor: String
}

type OperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type OperationsSegmentMaterialSpecificationConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentMaterialSpecificationEdge]
  operationsSegmentMaterialSpecifications: [OperationsSegmentMaterialSpecification]
}

type OperationsSegmentMaterialSpecificationEdge {
  node: OperationsSegmentMaterialSpecification
  cursor: String
}

type OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsEdge]
  operationsSegmentMaterialSpecifications: [OperationsSegmentMaterialSpecification]
}

type OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsEdge {
  node: OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification
  cursor: String
}

type OperationsSegmentOperationsRequest {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: Scenario
  operationsRequestProfile: OperationsRequestProfile
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestPersonnelConnection
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestEquipmentConnection
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsRequestSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsRequestSegmentRequirementConnection
}

type OperationsSegmentOperationsRequestConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsRequestsEdge]
  operationsRequests: [OperationsSegment]
}

type OperationsSegmentOperationsRequestsEdge {
  node: OperationsSegmentOperationsRequest
  cursor: String
}

type OperationsSegmentOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: OperationsDefinition
  calendarisedThroughputSet: CalendarisedThroughputSet
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterOperationsSegmentChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentChangeoverSetItemConnection
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentConnection
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterOperationsSegmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentCapabilityConnection
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterOperationsSegmentPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelCapabilityConnection
  descendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  descendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  ascendantOperationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  ascendantOperationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPropertyConnection
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesFromOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentDependenciesToOperationsSegmentConnection(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsSegmentOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsSegmentOperationsRequestConnection
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsSegmentSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsSegmentSegmentRequirementConnection
}

type OperationsSegmentOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentsEdge]
  operationsSegments: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentDependencyFromOperationsSegment {
  id: Int
  toOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

type OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsEdge]
  operationsSegmentDependenciesFromOperationsSegment: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsEdge {
  node: OperationsSegmentOperationsSegmentDependencyFromOperationsSegment
  cursor: String
}

type OperationsSegmentOperationsSegmentDependencyToOperationsSegment {
  id: Int
  fromOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

type OperationsSegmentOperationsSegmentDependencyToOperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentDependencyToOperationsSegmentsEdge]
  operationsSegmentDependenciesToOperationsSegment: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentDependencyToOperationsSegmentsEdge {
  node: OperationsSegmentOperationsSegmentDependencyToOperationsSegment
  cursor: String
}

type OperationsSegmentOperationsSegmentEquipmentSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestEquipments(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecificationOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationOperationsRequestEquipmentConnection
}

type OperationsSegmentOperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentEquipmentSpecificationsEdge]
  operationsSegmentEquipmentSpecifications: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentEquipmentSpecificationsEdge {
  node: OperationsSegmentOperationsSegmentEquipmentSpecification
  cursor: String
}

type OperationsSegmentOperationsSegmentMaterialSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationConnection
}

type OperationsSegmentOperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentMaterialSpecificationsEdge]
  operationsSegmentMaterialSpecifications: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentMaterialSpecificationsEdge {
  node: OperationsSegmentOperationsSegmentMaterialSpecification
  cursor: String
}

type OperationsSegmentOperationsSegmentPersonnelSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type OperationsSegmentOperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentPersonnelSpecificationsEdge]
  operationsSegmentPersonnelSpecifications: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentPersonnelSpecificationsEdge {
  node: OperationsSegmentOperationsSegmentPersonnelSpecification
  cursor: String
}

type OperationsSegmentOperationsSegmentPropertiesEdge {
  node: OperationsSegmentOperationsSegmentProperty
  cursor: String
}

type OperationsSegmentOperationsSegmentProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type OperationsSegmentOperationsSegmentPropertyConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentOperationsSegmentPropertiesEdge]
  operationsSegmentProperties: [OperationsSegment]
}

type OperationsSegmentOperationsSegmentsEdge {
  node: OperationsSegmentOperationsSegment
  cursor: String
}

type OperationsSegmentPersonnelCapabilitiesEdge {
  node: OperationsSegmentPersonnelCapability
  cursor: String
}

type OperationsSegmentPersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type OperationsSegmentPersonnelCapabilityConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentPersonnelCapabilitiesEdge]
  personnelCapabilities: [OperationsSegment]
}

type OperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: MaterialDefinition
  operationsSegmentEquipmentSpecification: OperationsSegmentEquipmentSpecification
}

type OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsEdge]
  calendarisedThroughputSetItems: [OperationsSegmentPersonnelSpecification]
}

type OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsEdge {
  node: OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem
  cursor: String
}

type OperationsSegmentPersonnelSpecificationConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentPersonnelSpecificationEdge]
  operationsSegmentPersonnelSpecifications: [OperationsSegmentPersonnelSpecification]
}

type OperationsSegmentPersonnelSpecificationEdge {
  node: OperationsSegmentPersonnelSpecification
  cursor: String
}

type OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  person: Person
}

type OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsEdge]
  operationsRequestPersonnels: [OperationsSegmentPersonnelSpecification]
}

type OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsEdge {
  node: OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel
  cursor: String
}

type OperationsSegmentProperty {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  value: String
  dataType: String
}

type OperationsSegmentPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OperationsSegmentPropertyEdge]
  operationsSegmentProperties: [OperationsSegmentProperty]
}

type OperationsSegmentPropertyEdge {
  node: OperationsSegmentProperty
  cursor: String
}

type OperationsSegmentSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementConnection
  descendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  descendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  ascendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  ascendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPropertyConnection
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementEquipmentRequirementConnection
}

type OperationsSegmentSegmentRequirementConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentSegmentRequirementsEdge]
  segmentRequirements: [OperationsSegment]
}

type OperationsSegmentSegmentRequirementsEdge {
  node: OperationsSegmentSegmentRequirement
  cursor: String
}

type OptimisationHierarchy {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  equipments(where: FilterOptimisationHierarchyEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyEquipment]
  equipmentsConnection(where: FilterOptimisationHierarchyEquipmentInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyEquipmentConnection
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyOptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyOptimisationHierarchyAttributeConnection
}

type OptimisationHierarchyAttribute {
  id: Int
  optimisationHierarchy: OptimisationHierarchy
  optimisationProperty: OptimisationProperty
  description: String
  priority: Int
}

type OptimisationHierarchyAttributeConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationHierarchyAttributeEdge]
  optimisationHierarchyAttributes: [OptimisationHierarchyAttribute]
}

type OptimisationHierarchyAttributeEdge {
  node: OptimisationHierarchyAttribute
  cursor: String
}

type OptimisationHierarchyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationHierarchyEdge]
  optimisationHierarchies: [OptimisationHierarchy]
}

type OptimisationHierarchyEdge {
  node: OptimisationHierarchy
  cursor: String
}

type OptimisationHierarchyEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type OptimisationHierarchyEquipmentConnection {
  pageInfo: PageInfo
  edges: [OptimisationHierarchyEquipmentsEdge]
  equipments: [OptimisationHierarchy]
}

type OptimisationHierarchyEquipmentsEdge {
  node: OptimisationHierarchyEquipment
  cursor: String
}

type OptimisationHierarchyOptimisationHierarchyAttribute {
  id: Int
  optimisationProperty: OptimisationProperty
  description: String
  priority: Int
}

type OptimisationHierarchyOptimisationHierarchyAttributeConnection {
  pageInfo: PageInfo
  edges: [OptimisationHierarchyOptimisationHierarchyAttributesEdge]
  optimisationHierarchyAttributes: [OptimisationHierarchy]
}

type OptimisationHierarchyOptimisationHierarchyAttributesEdge {
  node: OptimisationHierarchyOptimisationHierarchyAttribute
  cursor: String
}

type OptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  optimisationProperty: OptimisationProperty
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  equipmentsConnection(where: FilterOptimisationPreferredSequenceEquipmentInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceEquipmentConnection
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceOptimisationPreferredSequenceItemConnection
}

type OptimisationPreferredSequenceConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceEdge]
  optimisationPreferredSequences: [OptimisationPreferredSequence]
}

type OptimisationPreferredSequenceEdge {
  node: OptimisationPreferredSequence
  cursor: String
}

type OptimisationPreferredSequenceEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type OptimisationPreferredSequenceEquipmentConnection {
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceEquipmentsEdge]
  equipments: [OptimisationPreferredSequence]
}

type OptimisationPreferredSequenceEquipmentsEdge {
  node: OptimisationPreferredSequenceEquipment
  cursor: String
}

type OptimisationPreferredSequenceItem {
  id: Int
  optimisationPreferredSequence: OptimisationPreferredSequence
  optimisationPropertyValue: OptimisationPropertyValue
  priority: Int
}

type OptimisationPreferredSequenceItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceItemEdge]
  optimisationPreferredSequenceItems: [OptimisationPreferredSequenceItem]
}

type OptimisationPreferredSequenceItemEdge {
  node: OptimisationPreferredSequenceItem
  cursor: String
}

type OptimisationPreferredSequenceOptimisationPreferredSequenceItem {
  id: Int
  optimisationPropertyValue: OptimisationPropertyValue
  priority: Int
}

type OptimisationPreferredSequenceOptimisationPreferredSequenceItemConnection {
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceOptimisationPreferredSequenceItemsEdge]
  optimisationPreferredSequenceItems: [OptimisationPreferredSequence]
}

type OptimisationPreferredSequenceOptimisationPreferredSequenceItemsEdge {
  node: OptimisationPreferredSequenceOptimisationPreferredSequenceItem
  cursor: String
}

type OptimisationProperty {
  id: Int
  name: String
  scenario: Scenario
  optimisationPropertyValues(where: FilterOptimisationPropertyOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPropertyValue]
  optimisationPropertyValuesConnection(where: FilterOptimisationPropertyOptimisationPropertyValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationPropertyValueConnection
  optimisationHierarchyAttributes(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationHierarchyAttributeConnection
  optimisationPreferredSequences(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPreferredSequence]
  optimisationPreferredSequencesConnection(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationPreferredSequenceConnection
}

type OptimisationPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationPropertyEdge]
  optimisationProperties: [OptimisationProperty]
}

type OptimisationPropertyEdge {
  node: OptimisationProperty
  cursor: String
}

type OptimisationPropertyOptimisationHierarchyAttribute {
  id: Int
  optimisationHierarchy: OptimisationHierarchy
  description: String
  priority: Int
}

type OptimisationPropertyOptimisationHierarchyAttributeConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyOptimisationHierarchyAttributesEdge]
  optimisationHierarchyAttributes: [OptimisationProperty]
}

type OptimisationPropertyOptimisationHierarchyAttributesEdge {
  node: OptimisationPropertyOptimisationHierarchyAttribute
  cursor: String
}

type OptimisationPropertyOptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  equipmentsConnection(where: FilterOptimisationPreferredSequenceEquipmentInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceEquipmentConnection
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceOptimisationPreferredSequenceItemConnection
}

type OptimisationPropertyOptimisationPreferredSequenceConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyOptimisationPreferredSequencesEdge]
  optimisationPreferredSequences: [OptimisationProperty]
}

type OptimisationPropertyOptimisationPreferredSequencesEdge {
  node: OptimisationPropertyOptimisationPreferredSequence
  cursor: String
}

type OptimisationPropertyOptimisationPropertyValue {
  id: Int
  value: String
  dataType: String
  changeoverSetItemsFromValue(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemFromValue]
  changeoverSetItemsFromValueConnection(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueChangeoverSetItemFromValueConnection
  changeoverSetItemsToValue(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemToValue]
  changeoverSetItemsToValueConnection(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueChangeoverSetItemToValueConnection
  materialProperties(where: FilterOptimisationPropertyValueMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueMaterialProperty]
  materialPropertiesConnection(where: FilterOptimisationPropertyValueMaterialPropertyInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueMaterialPropertyConnection
  colourSchemeItems(where: FilterOptimisationPropertyValueColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueColourSchemeItem]
  colourSchemeItemsConnection(where: FilterOptimisationPropertyValueColourSchemeItemInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueColourSchemeItemConnection
  optimisationPreferredSequenceItems(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueOptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueOptimisationPreferredSequenceItemConnection
}

type OptimisationPropertyOptimisationPropertyValueConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyOptimisationPropertyValuesEdge]
  optimisationPropertyValues: [OptimisationProperty]
}

type OptimisationPropertyOptimisationPropertyValuesEdge {
  node: OptimisationPropertyOptimisationPropertyValue
  cursor: String
}

type OptimisationPropertyValue {
  id: Int
  optimisationProperty: OptimisationProperty
  value: String
  dataType: String
  changeoverSetItemsFromValue(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemFromValue]
  changeoverSetItemsFromValueConnection(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueChangeoverSetItemFromValueConnection
  changeoverSetItemsToValue(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemToValue]
  changeoverSetItemsToValueConnection(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueChangeoverSetItemToValueConnection
  materialProperties(where: FilterOptimisationPropertyValueMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueMaterialProperty]
  materialPropertiesConnection(where: FilterOptimisationPropertyValueMaterialPropertyInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueMaterialPropertyConnection
  colourSchemeItems(where: FilterOptimisationPropertyValueColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueColourSchemeItem]
  colourSchemeItemsConnection(where: FilterOptimisationPropertyValueColourSchemeItemInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueColourSchemeItemConnection
  optimisationPreferredSequenceItems(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueOptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueOptimisationPreferredSequenceItemConnection
}

type OptimisationPropertyValueChangeoverSetItemFromValue {
  id: Int
  changeoverSet: ChangeoverSet
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: OperationsSegment
}

type OptimisationPropertyValueChangeoverSetItemFromValueConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueChangeoverSetItemFromValuesEdge]
  changeoverSetItemsFromValue: [OptimisationPropertyValue]
}

type OptimisationPropertyValueChangeoverSetItemFromValuesEdge {
  node: OptimisationPropertyValueChangeoverSetItemFromValue
  cursor: String
}

type OptimisationPropertyValueChangeoverSetItemToValue {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: OperationsSegment
}

type OptimisationPropertyValueChangeoverSetItemToValueConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueChangeoverSetItemToValuesEdge]
  changeoverSetItemsToValue: [OptimisationPropertyValue]
}

type OptimisationPropertyValueChangeoverSetItemToValuesEdge {
  node: OptimisationPropertyValueChangeoverSetItemToValue
  cursor: String
}

type OptimisationPropertyValueColourSchemeItem {
  id: Int
  colourScheme: ColourScheme
  red: Int
  green: Int
  blue: Int
}

type OptimisationPropertyValueColourSchemeItemConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueColourSchemeItemsEdge]
  colourSchemeItems: [OptimisationPropertyValue]
}

type OptimisationPropertyValueColourSchemeItemsEdge {
  node: OptimisationPropertyValueColourSchemeItem
  cursor: String
}

type OptimisationPropertyValueConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueEdge]
  optimisationPropertyValues: [OptimisationPropertyValue]
}

type OptimisationPropertyValueEdge {
  node: OptimisationPropertyValue
  cursor: String
}

type OptimisationPropertyValueMaterialPropertiesEdge {
  node: OptimisationPropertyValueMaterialProperty
  cursor: String
}

type OptimisationPropertyValueMaterialProperty {
  id: Int
  materialDefinition: MaterialDefinition
  externalId: String
  value: String
  dataType: String
}

type OptimisationPropertyValueMaterialPropertyConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueMaterialPropertiesEdge]
  materialProperties: [OptimisationPropertyValue]
}

type OptimisationPropertyValueOptimisationPreferredSequenceItem {
  id: Int
  optimisationPreferredSequence: OptimisationPreferredSequence
  priority: Int
}

type OptimisationPropertyValueOptimisationPreferredSequenceItemConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueOptimisationPreferredSequenceItemsEdge]
  optimisationPreferredSequenceItems: [OptimisationPropertyValue]
}

type OptimisationPropertyValueOptimisationPreferredSequenceItemsEdge {
  node: OptimisationPropertyValueOptimisationPreferredSequenceItem
  cursor: String
}

type Order {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: OrderStatus
  priority: Int
  scenario: Scenario
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderItemsConnection(where: FilterOrderOrderItemInput, first: Int, after: String, orderBy: [String]): OrderOrderItemConnection
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
  orderPropertiesConnection(where: FilterOrderOrderPropertyInput, first: Int, after: String, orderBy: [String]): OrderOrderPropertyConnection
}

type OrderConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OrderEdge]
  orders: [Order]
}

type OrderEdge {
  node: Order
  cursor: String
}

type OrderItem {
  id: Int
  order: Order
  operationsDefinitionClass: OperationsDefinitionClass
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
  operationsRequestProfilesConnection(where: FilterOrderItemOperationsRequestProfileInput, first: Int, after: String, orderBy: [String]): OrderItemOperationsRequestProfileConnection
}

type OrderItemConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OrderItemEdge]
  orderItems: [OrderItem]
}

type OrderItemEdge {
  node: OrderItem
  cursor: String
}

type OrderItemOperationsRequestProfile {
  id: Int
  startupCost: Float
  quantity: Float
  operationsRequests(where: FilterOperationsRequestProfileOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestProfileOperationsRequest]
  operationsRequestsConnection(where: FilterOperationsRequestProfileOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsRequestProfileOperationsRequestConnection
}

type OrderItemOperationsRequestProfileConnection {
  pageInfo: PageInfo
  edges: [OrderItemOperationsRequestProfilesEdge]
  operationsRequestProfiles: [OrderItem]
}

type OrderItemOperationsRequestProfilesEdge {
  node: OrderItemOperationsRequestProfile
  cursor: String
}

type OrderOrderItem {
  id: Int
  operationsDefinitionClass: OperationsDefinitionClass
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
  operationsRequestProfilesConnection(where: FilterOrderItemOperationsRequestProfileInput, first: Int, after: String, orderBy: [String]): OrderItemOperationsRequestProfileConnection
}

type OrderOrderItemConnection {
  pageInfo: PageInfo
  edges: [OrderOrderItemsEdge]
  orderItems: [Order]
}

type OrderOrderItemsEdge {
  node: OrderOrderItem
  cursor: String
}

type OrderOrderPropertiesEdge {
  node: OrderOrderProperty
  cursor: String
}

type OrderOrderProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type OrderOrderPropertyConnection {
  pageInfo: PageInfo
  edges: [OrderOrderPropertiesEdge]
  orderProperties: [Order]
}

type OrderProperty {
  id: Int
  order: Order
  externalId: String
  value: String
  dataType: String
}

type OrderPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OrderPropertyEdge]
  orderProperties: [OrderProperty]
}

type OrderPropertyEdge {
  node: OrderProperty
  cursor: String
}

type OrderStatus {
  id: Int
  status: String
  scenario: Scenario
  orders(where: FilterOrderStatusOrderInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatusOrder]
  ordersConnection(where: FilterOrderStatusOrderInput, first: Int, after: String, orderBy: [String]): OrderStatusOrderConnection
}

type OrderStatusConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [OrderStatusEdge]
  orderStatuses: [OrderStatus]
}

type OrderStatusEdge {
  node: OrderStatus
  cursor: String
}

type OrderStatusOrder {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: Scenario
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderItemsConnection(where: FilterOrderOrderItemInput, first: Int, after: String, orderBy: [String]): OrderOrderItemConnection
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
  orderPropertiesConnection(where: FilterOrderOrderPropertyInput, first: Int, after: String, orderBy: [String]): OrderOrderPropertyConnection
}

type OrderStatusOrderConnection {
  pageInfo: PageInfo
  edges: [OrderStatusOrdersEdge]
  orders: [OrderStatus]
}

type OrderStatusOrdersEdge {
  node: OrderStatusOrder
  cursor: String
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
}

type Person {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personPropertiesConnection(where: FilterPersonPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPersonPropertyConnection
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonOperationsSegmentPersonnelSpecificationConnection
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterPersonOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): PersonOperationsRequestPersonnelConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonSegmentRequirementPersonnelRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type PersonConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonEdge]
  persons: [Person]
}

type PersonDowntimePeriod {
  id: Int
  person: Person
  downtimePeriod: DowntimePeriod
}

type PersonDowntimePeriodConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonDowntimePeriodEdge]
  personDowntimePeriods: [PersonDowntimePeriod]
}

type PersonDowntimePeriodEdge {
  node: PersonDowntimePeriod
  cursor: String
}

type PersonEdge {
  node: Person
  cursor: String
}

type PersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type PersonnelCapabilityConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelCapabilityEdge]
  personnelCapabilities: [PersonnelCapability]
}

type PersonnelCapabilityEdge {
  node: PersonnelCapability
  cursor: String
}

type PersonnelClass {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelClassPropertiesConnection(where: FilterPersonnelClassPersonnelClassPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelClassPropertyConnection
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelClassPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelPositionConnection
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterPersonnelClassPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelCapabilityConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonnelClassOperationsSegmentPersonnelSpecificationConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonnelClassSegmentRequirementPersonnelRequirementConnection
}

type PersonnelClassConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelClassEdge]
  personnelClasses: [PersonnelClass]
}

type PersonnelClassEdge {
  node: PersonnelClass
  cursor: String
}

type PersonnelClassOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type PersonnelClassOperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassOperationsSegmentPersonnelSpecificationsEdge]
  operationsSegmentPersonnelSpecifications: [PersonnelClass]
}

type PersonnelClassOperationsSegmentPersonnelSpecificationsEdge {
  node: PersonnelClassOperationsSegmentPersonnelSpecification
  cursor: String
}

type PersonnelClassPersonMember {
  id: Int
  personnelClass: PersonnelClass
  person: Person
}

type PersonnelClassPersonMemberConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelClassPersonMemberEdge]
  personnelClassPersonMembers: [PersonnelClassPersonMember]
}

type PersonnelClassPersonMemberEdge {
  node: PersonnelClassPersonMember
  cursor: String
}

type PersonnelClassPersonnelCapabilitiesEdge {
  node: PersonnelClassPersonnelCapability
  cursor: String
}

type PersonnelClassPersonnelCapability {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type PersonnelClassPersonnelCapabilityConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassPersonnelCapabilitiesEdge]
  personnelCapabilities: [PersonnelClass]
}

type PersonnelClassPersonnelClassPropertiesEdge {
  node: PersonnelClassPersonnelClassProperty
  cursor: String
}

type PersonnelClassPersonnelClassProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type PersonnelClassPersonnelClassPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassPersonnelClassPropertiesEdge]
  personnelClassProperties: [PersonnelClass]
}

type PersonnelClassPersonnelPosition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonnelPositionPropertyConnection
}

type PersonnelClassPersonnelPositionConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassPersonnelPositionsEdge]
  personnelPositions: [PersonnelClass]
}

type PersonnelClassPersonnelPositionsEdge {
  node: PersonnelClassPersonnelPosition
  cursor: String
}

type PersonnelClassProperty {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  value: String
  dataType: String
}

type PersonnelClassPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelClassPropertyEdge]
  personnelClassProperties: [PersonnelClassProperty]
}

type PersonnelClassPropertyEdge {
  node: PersonnelClassProperty
  cursor: String
}

type PersonnelClassSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type PersonnelClassSegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassSegmentRequirementPersonnelRequirementsEdge]
  segmentRequirementPersonnelRequirements: [PersonnelClass]
}

type PersonnelClassSegmentRequirementPersonnelRequirementsEdge {
  node: PersonnelClassSegmentRequirementPersonnelRequirement
  cursor: String
}

type PersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonnelPositionPropertyConnection
}

type PersonnelPositionConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelPositionEdge]
  personnelPositions: [PersonnelPosition]
}

type PersonnelPositionEdge {
  node: PersonnelPosition
  cursor: String
}

type PersonnelPositionPersonMember {
  id: Int
  personnelPosition: PersonnelPosition
  person: Person
}

type PersonnelPositionPersonMemberConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelPositionPersonMemberEdge]
  personnelPositionPersonMembers: [PersonnelPositionPersonMember]
}

type PersonnelPositionPersonMemberEdge {
  node: PersonnelPositionPersonMember
  cursor: String
}

type PersonnelPositionPersonnelPositionPropertiesEdge {
  node: PersonnelPositionPersonnelPositionProperty
  cursor: String
}

type PersonnelPositionPersonnelPositionProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type PersonnelPositionPersonnelPositionPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonnelPositionPersonnelPositionPropertiesEdge]
  personnelPositionProperties: [PersonnelPosition]
}

type PersonnelPositionProperty {
  id: Int
  personnelPosition: PersonnelPosition
  externalId: String
  value: String
  dataType: String
}

type PersonnelPositionPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonnelPositionPropertyEdge]
  personnelPositionProperties: [PersonnelPositionProperty]
}

type PersonnelPositionPropertyEdge {
  node: PersonnelPositionProperty
  cursor: String
}

type PersonOperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  operationsSegmentPersonnelSpecification: OperationsSegmentPersonnelSpecification
}

type PersonOperationsRequestPersonnelConnection {
  pageInfo: PageInfo
  edges: [PersonOperationsRequestPersonnelsEdge]
  operationsRequestPersonnels: [Person]
}

type PersonOperationsRequestPersonnelsEdge {
  node: PersonOperationsRequestPersonnel
  cursor: String
}

type PersonOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSetItems(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemConnection
  operationsRequestPersonnels(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecificationOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationOperationsRequestPersonnelConnection
}

type PersonOperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [PersonOperationsSegmentPersonnelSpecificationsEdge]
  operationsSegmentPersonnelSpecifications: [Person]
}

type PersonOperationsSegmentPersonnelSpecificationsEdge {
  node: PersonOperationsSegmentPersonnelSpecification
  cursor: String
}

type PersonPersonPropertiesEdge {
  node: PersonPersonProperty
  cursor: String
}

type PersonPersonProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type PersonPersonPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonPersonPropertiesEdge]
  personProperties: [Person]
}

type PersonProperty {
  id: Int
  person: Person
  externalId: String
  value: String
  dataType: String
}

type PersonPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [PersonPropertyEdge]
  personProperties: [PersonProperty]
}

type PersonPropertyEdge {
  node: PersonProperty
  cursor: String
}

type PersonSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type PersonSegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [PersonSegmentRequirementPersonnelRequirementsEdge]
  segmentRequirementPersonnelRequirements: [Person]
}

type PersonSegmentRequirementPersonnelRequirementsEdge {
  node: PersonSegmentRequirementPersonnelRequirement
  cursor: String
}

type Query {
  scenarios(where: FilterScenarioInput, limit: Int, offset: Int, orderBy: [String]): [Scenario]
  scenariosConnection(where: FilterScenarioInput, first: Int, after: String, orderBy: [String]): ScenarioConnection
  scenario(where: FindScenarioInput): Scenario
  hierarchyScopes(where: FilterHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeConnection
  hierarchyScope(where: FindHierarchyScopeInput): HierarchyScope
  optimisationProperties(where: FilterOptimisationPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationProperty]
  optimisationPropertiesConnection(where: FilterOptimisationPropertyInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyConnection
  optimisationProperty(where: FindOptimisationPropertyInput): OptimisationProperty
  optimisationPropertyValues(where: FilterOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValue]
  optimisationPropertyValuesConnection(where: FilterOptimisationPropertyValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueConnection
  optimisationPropertyValue(where: FindOptimisationPropertyValueInput): OptimisationPropertyValue
  changeoverSets(where: FilterChangeoverSetInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSet]
  changeoverSetsConnection(where: FilterChangeoverSetInput, first: Int, after: String, orderBy: [String]): ChangeoverSetConnection
  changeoverSet(where: FindChangeoverSetInput): ChangeoverSet
  changeoverSetItems(where: FilterChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): ChangeoverSetItemConnection
  changeoverSetItem(where: FindChangeoverSetItemInput): ChangeoverSetItem
  availabilityTemplates(where: FilterAvailabilityTemplateInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplate]
  availabilityTemplatesConnection(where: FilterAvailabilityTemplateInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateConnection
  availabilityTemplate(where: FindAvailabilityTemplateInput): AvailabilityTemplate
  availabilityTemplateItems(where: FilterAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateItem]
  availabilityTemplateItemsConnection(where: FilterAvailabilityTemplateItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateItemConnection
  availabilityTemplateItem(where: FindAvailabilityTemplateItemInput): AvailabilityTemplateItem
  calendarisedAvailabilityTemplateSets(where: FilterCalendarisedAvailabilityTemplateSetInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSet]
  calendarisedAvailabilityTemplateSetsConnection(where: FilterCalendarisedAvailabilityTemplateSetInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetConnection
  calendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetItemConnection
  calendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipment(where: FindEquipmentInput): Equipment
  hierarchyScopeDescendants(where: FilterHierarchyScopeDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeDescendant]
  hierarchyScopeDescendantsConnection(where: FilterHierarchyScopeDescendantInput, first: Int, after: String, orderBy: [String]): HierarchyScopeDescendantConnection
  hierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput): HierarchyScopeDescendant
  equipmentChildren(where: FilterEquipmentChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentChild]
  equipmentChildrenConnection(where: FilterEquipmentChildInput, first: Int, after: String, orderBy: [String]): EquipmentChildConnection
  equipmentChild(where: FindEquipmentChildInput): EquipmentChild
  equipmentDescendants(where: FilterEquipmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentDescendant]
  equipmentDescendantsConnection(where: FilterEquipmentDescendantInput, first: Int, after: String, orderBy: [String]): EquipmentDescendantConnection
  equipmentDescendant(where: FindEquipmentDescendantInput): EquipmentDescendant
  equipmentProperties(where: FilterEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentPropertyConnection
  equipmentProperty(where: FindEquipmentPropertyInput): EquipmentProperty
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentClass(where: FindEquipmentClassInput): EquipmentClass
  equipmentClassEquipmentMembers(where: FilterEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassEquipmentMember]
  equipmentClassEquipmentMembersConnection(where: FilterEquipmentClassEquipmentMemberInput, first: Int, after: String, orderBy: [String]): EquipmentClassEquipmentMemberConnection
  equipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  materialDefinitions(where: FilterMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinition]
  materialDefinitionsConnection(where: FilterMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionConnection
  materialDefinition(where: FindMaterialDefinitionInput): MaterialDefinition
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelClass(where: FindPersonnelClassInput): PersonnelClass
  personnelClassProperties(where: FilterPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassProperty]
  personnelClassPropertiesConnection(where: FilterPersonnelClassPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelClassPropertyConnection
  personnelClassProperty(where: FindPersonnelClassPropertyInput): PersonnelClassProperty
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  personnelPosition(where: FindPersonnelPositionInput): PersonnelPosition
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  person(where: FindPersonInput): Person
  personProperties(where: FilterPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonProperty]
  personPropertiesConnection(where: FilterPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPropertyConnection
  personProperty(where: FindPersonPropertyInput): PersonProperty
  personnelClassPersonMembers(where: FilterPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonMember]
  personnelClassPersonMembersConnection(where: FilterPersonnelClassPersonMemberInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonMemberConnection
  personnelClassPersonMember(where: FindPersonnelClassPersonMemberInput): PersonnelClassPersonMember
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonMember]
  personnelPositionPersonMembersConnection(where: FilterPersonnelPositionPersonMemberInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonMemberConnection
  personnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  personnelPositionProperties(where: FilterPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPropertyConnection
  personnelPositionProperty(where: FindPersonnelPositionPropertyInput): PersonnelPositionProperty
  operationsDefinitionClasses(where: FilterOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassConnection
  operationsDefinitionClass(where: FindOperationsDefinitionClassInput): OperationsDefinitionClass
  operationsDefinitions(where: FilterOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinition]
  operationsDefinitionsConnection(where: FilterOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionConnection
  operationsDefinition(where: FindOperationsDefinitionInput): OperationsDefinition
  operationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegment(where: FindOperationsSegmentInput): OperationsSegment
  equipmentCapabilities(where: FilterEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentCapabilityConnection
  equipmentCapability(where: FindEquipmentCapabilityInput): EquipmentCapability
  personnelCapabilities(where: FilterPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelCapability]
  personnelCapabilitiesConnection(where: FilterPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): PersonnelCapabilityConnection
  personnelCapability(where: FindPersonnelCapabilityInput): PersonnelCapability
  operationsSegmentDescendants(where: FilterOperationsSegmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentDescendant]
  operationsSegmentDescendantsConnection(where: FilterOperationsSegmentDescendantInput, first: Int, after: String, orderBy: [String]): OperationsSegmentDescendantConnection
  operationsSegmentDescendant(where: FindOperationsSegmentDescendantInput): OperationsSegmentDescendant
  operationsSegmentProperties(where: FilterOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPropertyConnection
  operationsSegmentProperty(where: FindOperationsSegmentPropertyInput): OperationsSegmentProperty
  operationsSegmentDependencies(where: FilterOperationsSegmentDependencyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentDependency]
  operationsSegmentDependenciesConnection(where: FilterOperationsSegmentDependencyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentDependencyConnection
  operationsSegmentDependency(where: FindOperationsSegmentDependencyInput): OperationsSegmentDependency
  operationalLocations(where: FilterOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocation]
  operationalLocationsConnection(where: FilterOperationalLocationInput, first: Int, after: String, orderBy: [String]): OperationalLocationConnection
  operationalLocation(where: FindOperationalLocationInput): OperationalLocation
  calendarisedThroughputSets(where: FilterCalendarisedThroughputSetInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSet]
  calendarisedThroughputSetsConnection(where: FilterCalendarisedThroughputSetInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetConnection
  calendarisedThroughputSet(where: FindCalendarisedThroughputSetInput): CalendarisedThroughputSet
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetItemConnection
  calendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationConnection
  operationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationConnection
  operationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationConnection
  operationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  timePeriods(where: FilterTimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [TimePeriod]
  timePeriodsConnection(where: FilterTimePeriodInput, first: Int, after: String, orderBy: [String]): TimePeriodConnection
  timePeriod(where: FindTimePeriodInput): TimePeriod
  orderStatuses(where: FilterOrderStatusInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatus]
  orderStatusesConnection(where: FilterOrderStatusInput, first: Int, after: String, orderBy: [String]): OrderStatusConnection
  orderStatus(where: FindOrderStatusInput): OrderStatus
  orders(where: FilterOrderInput, limit: Int, offset: Int, orderBy: [String]): [Order]
  ordersConnection(where: FilterOrderInput, first: Int, after: String, orderBy: [String]): OrderConnection
  order(where: FindOrderInput): Order
  orderItems(where: FilterOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderItem]
  orderItemsConnection(where: FilterOrderItemInput, first: Int, after: String, orderBy: [String]): OrderItemConnection
  orderItem(where: FindOrderItemInput): OrderItem
  operationsRequests(where: FilterOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequest]
  operationsRequestsConnection(where: FilterOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsRequestConnection
  operationsRequest(where: FindOperationsRequestInput): OperationsRequest
  operationsRequestPersonnels(where: FilterOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestPersonnelConnection
  operationsRequestPersonnel(where: FindOperationsRequestPersonnelInput): OperationsRequestPersonnel
  operationsRequestEquipments(where: FilterOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestEquipmentConnection
  operationsRequestEquipment(where: FindOperationsRequestEquipmentInput): OperationsRequestEquipment
  operationsRequestProfiles(where: FilterOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestProfile]
  operationsRequestProfilesConnection(where: FilterOperationsRequestProfileInput, first: Int, after: String, orderBy: [String]): OperationsRequestProfileConnection
  operationsRequestProfile(where: FindOperationsRequestProfileInput): OperationsRequestProfile
  segmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirement(where: FindSegmentRequirementInput): SegmentRequirement
  segmentRequirementDescendants(where: FilterSegmentRequirementDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementDescendant]
  segmentRequirementDescendantsConnection(where: FilterSegmentRequirementDescendantInput, first: Int, after: String, orderBy: [String]): SegmentRequirementDescendantConnection
  segmentRequirementDescendant(where: FindSegmentRequirementDescendantInput): SegmentRequirementDescendant
  segmentRequirementProperties(where: FilterSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementPropertyConnection
  segmentRequirementProperty(where: FindSegmentRequirementPropertyInput): SegmentRequirementProperty
  materialLots(where: FilterMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLot]
  materialLotsConnection(where: FilterMaterialLotInput, first: Int, after: String, orderBy: [String]): MaterialLotConnection
  materialLot(where: FindMaterialLotInput): MaterialLot
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementConnection
  segmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementPersonnelRequirementConnection
  segmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementEquipmentRequirementConnection
  segmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  openPurchaseOrders(where: FilterOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [OpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): OpenPurchaseOrderConnection
  openPurchaseOrder(where: FindOpenPurchaseOrderInput): OpenPurchaseOrder
  materialProperties(where: FilterMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialProperty]
  materialPropertiesConnection(where: FilterMaterialPropertyInput, first: Int, after: String, orderBy: [String]): MaterialPropertyConnection
  materialProperty(where: FindMaterialPropertyInput): MaterialProperty
  configurableApplicationParameters(where: FilterConfigurableApplicationParameterInput, limit: Int, offset: Int, orderBy: [String]): [ConfigurableApplicationParameter]
  configurableApplicationParametersConnection(where: FilterConfigurableApplicationParameterInput, first: Int, after: String, orderBy: [String]): ConfigurableApplicationParameterConnection
  configurableApplicationParameter(where: FindConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  colourSchemes(where: FilterColourSchemeInput, limit: Int, offset: Int, orderBy: [String]): [ColourScheme]
  colourSchemesConnection(where: FilterColourSchemeInput, first: Int, after: String, orderBy: [String]): ColourSchemeConnection
  colourScheme(where: FindColourSchemeInput): ColourScheme
  colourSchemeItems(where: FilterColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeItem]
  colourSchemeItemsConnection(where: FilterColourSchemeItemInput, first: Int, after: String, orderBy: [String]): ColourSchemeItemConnection
  colourSchemeItem(where: FindColourSchemeItemInput): ColourSchemeItem
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
  downtimePeriod(where: FindDowntimePeriodInput): DowntimePeriod
  equipmentDowntimePeriods(where: FilterEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentDowntimePeriod]
  equipmentDowntimePeriodsConnection(where: FilterEquipmentDowntimePeriodInput, first: Int, after: String, orderBy: [String]): EquipmentDowntimePeriodConnection
  equipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  personDowntimePeriods(where: FilterPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonDowntimePeriod]
  personDowntimePeriodsConnection(where: FilterPersonDowntimePeriodInput, first: Int, after: String, orderBy: [String]): PersonDowntimePeriodConnection
  personDowntimePeriod(where: FindPersonDowntimePeriodInput): PersonDowntimePeriod
  optimisationHierarchies(where: FilterOptimisationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchy]
  optimisationHierarchiesConnection(where: FilterOptimisationHierarchyInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyConnection
  optimisationHierarchy(where: FindOptimisationHierarchyInput): OptimisationHierarchy
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyAttributeConnection
  optimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  scenarioAttributes(where: FilterScenarioAttributeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioAttribute]
  scenarioAttributesConnection(where: FilterScenarioAttributeInput, first: Int, after: String, orderBy: [String]): ScenarioAttributeConnection
  scenarioAttribute(where: FindScenarioAttributeInput): ScenarioAttribute
  optimisationPreferredSequences(where: FilterOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequence]
  optimisationPreferredSequencesConnection(where: FilterOptimisationPreferredSequenceInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceConnection
  optimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceItemConnection
  optimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  orderProperties(where: FilterOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderProperty]
  orderPropertiesConnection(where: FilterOrderPropertyInput, first: Int, after: String, orderBy: [String]): OrderPropertyConnection
  orderProperty(where: FindOrderPropertyInput): OrderProperty
}

type Scenario {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes(where: FilterScenarioHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioHierarchyScope]
  hierarchyScopesConnection(where: FilterScenarioHierarchyScopeInput, first: Int, after: String, orderBy: [String]): ScenarioHierarchyScopeConnection
  optimisationProperties(where: FilterScenarioOptimisationPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationProperty]
  optimisationPropertiesConnection(where: FilterScenarioOptimisationPropertyInput, first: Int, after: String, orderBy: [String]): ScenarioOptimisationPropertyConnection
  changeoverSets(where: FilterScenarioChangeoverSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioChangeoverSet]
  changeoverSetsConnection(where: FilterScenarioChangeoverSetInput, first: Int, after: String, orderBy: [String]): ScenarioChangeoverSetConnection
  availabilityTemplates(where: FilterScenarioAvailabilityTemplateInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioAvailabilityTemplate]
  availabilityTemplatesConnection(where: FilterScenarioAvailabilityTemplateInput, first: Int, after: String, orderBy: [String]): ScenarioAvailabilityTemplateConnection
  calendarisedAvailabilityTemplateSets(where: FilterScenarioCalendarisedAvailabilityTemplateSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedAvailabilityTemplateSet]
  calendarisedAvailabilityTemplateSetsConnection(where: FilterScenarioCalendarisedAvailabilityTemplateSetInput, first: Int, after: String, orderBy: [String]): ScenarioCalendarisedAvailabilityTemplateSetConnection
  equipments(where: FilterScenarioEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipment]
  equipmentsConnection(where: FilterScenarioEquipmentInput, first: Int, after: String, orderBy: [String]): ScenarioEquipmentConnection
  equipmentClasses(where: FilterScenarioEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentClass]
  equipmentClassesConnection(where: FilterScenarioEquipmentClassInput, first: Int, after: String, orderBy: [String]): ScenarioEquipmentClassConnection
  materialDefinitions(where: FilterScenarioMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioMaterialDefinition]
  materialDefinitionsConnection(where: FilterScenarioMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): ScenarioMaterialDefinitionConnection
  personnelClasses(where: FilterScenarioPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelClass]
  personnelClassesConnection(where: FilterScenarioPersonnelClassInput, first: Int, after: String, orderBy: [String]): ScenarioPersonnelClassConnection
  personnelPositions(where: FilterScenarioPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelPosition]
  personnelPositionsConnection(where: FilterScenarioPersonnelPositionInput, first: Int, after: String, orderBy: [String]): ScenarioPersonnelPositionConnection
  persons(where: FilterScenarioPersonInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPerson]
  personsConnection(where: FilterScenarioPersonInput, first: Int, after: String, orderBy: [String]): ScenarioPersonConnection
  operationsDefinitionClasses(where: FilterScenarioOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterScenarioOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): ScenarioOperationsDefinitionClassConnection
  operationalLocations(where: FilterScenarioOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationalLocation]
  operationalLocationsConnection(where: FilterScenarioOperationalLocationInput, first: Int, after: String, orderBy: [String]): ScenarioOperationalLocationConnection
  calendarisedThroughputSets(where: FilterScenarioCalendarisedThroughputSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedThroughputSet]
  calendarisedThroughputSetsConnection(where: FilterScenarioCalendarisedThroughputSetInput, first: Int, after: String, orderBy: [String]): ScenarioCalendarisedThroughputSetConnection
  timePeriods(where: FilterScenarioTimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioTimePeriod]
  timePeriodsConnection(where: FilterScenarioTimePeriodInput, first: Int, after: String, orderBy: [String]): ScenarioTimePeriodConnection
  orderStatuses(where: FilterScenarioOrderStatusInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrderStatus]
  orderStatusesConnection(where: FilterScenarioOrderStatusInput, first: Int, after: String, orderBy: [String]): ScenarioOrderStatusConnection
  orders(where: FilterScenarioOrderInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrder]
  ordersConnection(where: FilterScenarioOrderInput, first: Int, after: String, orderBy: [String]): ScenarioOrderConnection
  operationsRequests(where: FilterScenarioOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsRequest]
  operationsRequestsConnection(where: FilterScenarioOperationsRequestInput, first: Int, after: String, orderBy: [String]): ScenarioOperationsRequestConnection
  materialLots(where: FilterScenarioMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioMaterialLot]
  materialLotsConnection(where: FilterScenarioMaterialLotInput, first: Int, after: String, orderBy: [String]): ScenarioMaterialLotConnection
  openPurchaseOrders(where: FilterScenarioOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterScenarioOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): ScenarioOpenPurchaseOrderConnection
  configurableApplicationParameters(where: FilterScenarioConfigurableApplicationParameterInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioConfigurableApplicationParameter]
  configurableApplicationParametersConnection(where: FilterScenarioConfigurableApplicationParameterInput, first: Int, after: String, orderBy: [String]): ScenarioConfigurableApplicationParameterConnection
  colourSchemes(where: FilterScenarioColourSchemeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioColourScheme]
  colourSchemesConnection(where: FilterScenarioColourSchemeInput, first: Int, after: String, orderBy: [String]): ScenarioColourSchemeConnection
  downtimePeriods(where: FilterScenarioDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioDowntimePeriod]
  downtimePeriodsConnection(where: FilterScenarioDowntimePeriodInput, first: Int, after: String, orderBy: [String]): ScenarioDowntimePeriodConnection
  optimisationHierarchies(where: FilterScenarioOptimisationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationHierarchy]
  optimisationHierarchiesConnection(where: FilterScenarioOptimisationHierarchyInput, first: Int, after: String, orderBy: [String]): ScenarioOptimisationHierarchyConnection
  scenarioAttribute(where: FilterScenarioScenarioAttributeInput, limit: Int, offset: Int, orderBy: [String]): ScenarioScenarioAttribute
  optimisationPreferredSequences(where: FilterScenarioOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationPreferredSequence]
  optimisationPreferredSequencesConnection(where: FilterScenarioOptimisationPreferredSequenceInput, first: Int, after: String, orderBy: [String]): ScenarioOptimisationPreferredSequenceConnection
}

type ScenarioAttribute {
  id: Int
  scenario: Scenario
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

type ScenarioAttributeConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ScenarioAttributeEdge]
  scenarioAttributes: [ScenarioAttribute]
}

type ScenarioAttributeEdge {
  node: ScenarioAttribute
  cursor: String
}

type ScenarioAvailabilityTemplate {
  id: Int
  name: String
  description: String
  availabilityTemplateItems(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateAvailabilityTemplateItem]
  availabilityTemplateItemsConnection(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateAvailabilityTemplateItemConnection
  calendarisedAvailabilityTemplateSetItems(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateCalendarisedAvailabilityTemplateSetItemConnection
}

type ScenarioAvailabilityTemplateConnection {
  pageInfo: PageInfo
  edges: [ScenarioAvailabilityTemplatesEdge]
  availabilityTemplates: [Scenario]
}

type ScenarioAvailabilityTemplatesEdge {
  node: ScenarioAvailabilityTemplate
  cursor: String
}

type ScenarioCalendarisedAvailabilityTemplateSet {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemConnection
  equipments(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetEquipment]
  equipmentsConnection(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetEquipmentConnection
  persons(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetPerson]
  personsConnection(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetPersonConnection
}

type ScenarioCalendarisedAvailabilityTemplateSetConnection {
  pageInfo: PageInfo
  edges: [ScenarioCalendarisedAvailabilityTemplateSetsEdge]
  calendarisedAvailabilityTemplateSets: [Scenario]
}

type ScenarioCalendarisedAvailabilityTemplateSetsEdge {
  node: ScenarioCalendarisedAvailabilityTemplateSet
  cursor: String
}

type ScenarioCalendarisedThroughputSet {
  id: Int
  name: String
  operationsSegments(where: FilterCalendarisedThroughputSetOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetOperationsSegment]
  operationsSegmentsConnection(where: FilterCalendarisedThroughputSetOperationsSegmentInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetOperationsSegmentConnection
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetCalendarisedThroughputSetItemConnection
}

type ScenarioCalendarisedThroughputSetConnection {
  pageInfo: PageInfo
  edges: [ScenarioCalendarisedThroughputSetsEdge]
  calendarisedThroughputSets: [Scenario]
}

type ScenarioCalendarisedThroughputSetsEdge {
  node: ScenarioCalendarisedThroughputSet
  cursor: String
}

type ScenarioChangeoverSet {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems(where: FilterChangeoverSetChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterChangeoverSetChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): ChangeoverSetChangeoverSetItemConnection
  equipments(where: FilterChangeoverSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetEquipment]
  equipmentsConnection(where: FilterChangeoverSetEquipmentInput, first: Int, after: String, orderBy: [String]): ChangeoverSetEquipmentConnection
}

type ScenarioChangeoverSetConnection {
  pageInfo: PageInfo
  edges: [ScenarioChangeoverSetsEdge]
  changeoverSets: [Scenario]
}

type ScenarioChangeoverSetsEdge {
  node: ScenarioChangeoverSet
  cursor: String
}

type ScenarioColourScheme {
  id: Int
  name: String
  colourSchemeItems(where: FilterColourSchemeColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeColourSchemeItem]
  colourSchemeItemsConnection(where: FilterColourSchemeColourSchemeItemInput, first: Int, after: String, orderBy: [String]): ColourSchemeColourSchemeItemConnection
}

type ScenarioColourSchemeConnection {
  pageInfo: PageInfo
  edges: [ScenarioColourSchemesEdge]
  colourSchemes: [Scenario]
}

type ScenarioColourSchemesEdge {
  node: ScenarioColourScheme
  cursor: String
}

type ScenarioConfigurableApplicationParameter {
  id: Int
  name: String
  dataType: String
  valueAsString: String
}

type ScenarioConfigurableApplicationParameterConnection {
  pageInfo: PageInfo
  edges: [ScenarioConfigurableApplicationParametersEdge]
  configurableApplicationParameters: [Scenario]
}

type ScenarioConfigurableApplicationParametersEdge {
  node: ScenarioConfigurableApplicationParameter
  cursor: String
}

type ScenarioConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [ScenarioEdge]
  scenarios: [Scenario]
}

type ScenarioDowntimePeriod {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
}

type ScenarioDowntimePeriodConnection {
  pageInfo: PageInfo
  edges: [ScenarioDowntimePeriodsEdge]
  downtimePeriods: [Scenario]
}

type ScenarioDowntimePeriodsEdge {
  node: ScenarioDowntimePeriod
  cursor: String
}

type ScenarioEdge {
  node: Scenario
  cursor: String
}

type ScenarioEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  hierarchyScopesConnection(where: FilterEquipmentHierarchyScopeInput, first: Int, after: String, orderBy: [String]): EquipmentHierarchyScopeConnection
  childEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  childEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  parentEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  parentEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  descendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  descendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  ascendantEquipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  ascendantEquipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentPropertyConnection
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentEquipmentCapabilityConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsSegmentEquipmentSpecificationConnection
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterEquipmentOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentOperationsRequestEquipmentConnection
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): EquipmentSegmentRequirementEquipmentRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type ScenarioEquipmentClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): EquipmentClassOperationsSegmentEquipmentSpecificationConnection
}

type ScenarioEquipmentClassConnection {
  pageInfo: PageInfo
  edges: [ScenarioEquipmentClassesEdge]
  equipmentClasses: [Scenario]
}

type ScenarioEquipmentClassesEdge {
  node: ScenarioEquipmentClass
  cursor: String
}

type ScenarioEquipmentConnection {
  pageInfo: PageInfo
  edges: [ScenarioEquipmentsEdge]
  equipments: [Scenario]
}

type ScenarioEquipmentsEdge {
  node: ScenarioEquipment
  cursor: String
}

type ScenarioHierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  parent: HierarchyScope
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeHierarchyScopeConnection
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  equipmentsConnection(where: FilterHierarchyScopeEquipmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentConnection
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  equipmentClassesConnection(where: FilterHierarchyScopeEquipmentClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentClassConnection
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  materialDefinitionsConnection(where: FilterHierarchyScopeMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialDefinitionConnection
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelClassesConnection(where: FilterHierarchyScopePersonnelClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelClassConnection
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  personnelPositionsConnection(where: FilterHierarchyScopePersonnelPositionInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelPositionConnection
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  personsConnection(where: FilterHierarchyScopePersonInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonConnection
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterHierarchyScopeOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionClassConnection
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsDefinitionsConnection(where: FilterHierarchyScopeOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsDefinitionConnection
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  operationsSegmentsConnection(where: FilterHierarchyScopeOperationsSegmentInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentConnection
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterHierarchyScopeEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopeEquipmentCapabilityConnection
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  personnelCapabilitiesConnection(where: FilterHierarchyScopePersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): HierarchyScopePersonnelCapabilityConnection
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationalLocationsConnection(where: FilterHierarchyScopeOperationalLocationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationalLocationConnection
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsSegmentEquipmentSpecificationConnection
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  operationsRequestsConnection(where: FilterHierarchyScopeOperationsRequestInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOperationsRequestConnection
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  segmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementConnection
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  materialLotsConnection(where: FilterHierarchyScopeMaterialLotInput, first: Int, after: String, orderBy: [String]): HierarchyScopeMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): HierarchyScopeSegmentRequirementEquipmentRequirementConnection
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterHierarchyScopeOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): HierarchyScopeOpenPurchaseOrderConnection
}

type ScenarioHierarchyScopeConnection {
  pageInfo: PageInfo
  edges: [ScenarioHierarchyScopesEdge]
  hierarchyScopes: [Scenario]
}

type ScenarioHierarchyScopesEdge {
  node: ScenarioHierarchyScope
  cursor: String
}

type ScenarioMaterialDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  calendarisedThroughputSetItems(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionCalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterMaterialDefinitionCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionCalendarisedThroughputSetItemConnection
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOperationsSegmentMaterialSpecificationConnection
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  materialLotsConnection(where: FilterMaterialDefinitionMaterialLotInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionSegmentRequirementMaterialRequirementConnection
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterMaterialDefinitionOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionOpenPurchaseOrderConnection
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
  materialPropertiesConnection(where: FilterMaterialDefinitionMaterialPropertyInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionMaterialPropertyConnection
}

type ScenarioMaterialDefinitionConnection {
  pageInfo: PageInfo
  edges: [ScenarioMaterialDefinitionsEdge]
  materialDefinitions: [Scenario]
}

type ScenarioMaterialDefinitionsEdge {
  node: ScenarioMaterialDefinition
  cursor: String
}

type ScenarioMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): MaterialLotSegmentRequirementMaterialRequirementConnection
}

type ScenarioMaterialLotConnection {
  pageInfo: PageInfo
  edges: [ScenarioMaterialLotsEdge]
  materialLots: [Scenario]
}

type ScenarioMaterialLotsEdge {
  node: ScenarioMaterialLot
  cursor: String
}

type ScenarioOpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

type ScenarioOpenPurchaseOrderConnection {
  pageInfo: PageInfo
  edges: [ScenarioOpenPurchaseOrdersEdge]
  openPurchaseOrders: [Scenario]
}

type ScenarioOpenPurchaseOrdersEdge {
  node: ScenarioOpenPurchaseOrder
  cursor: String
}

type ScenarioOperationalLocation {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentMaterialSpecificationConnection
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentPersonnelSpecificationConnection
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationalLocationOperationsSegmentEquipmentSpecificationConnection
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  materialLotsConnection(where: FilterOperationalLocationMaterialLotInput, first: Int, after: String, orderBy: [String]): OperationalLocationMaterialLotConnection
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationalLocationSegmentRequirementEquipmentRequirementConnection
}

type ScenarioOperationalLocationConnection {
  pageInfo: PageInfo
  edges: [ScenarioOperationalLocationsEdge]
  operationalLocations: [Scenario]
}

type ScenarioOperationalLocationsEdge {
  node: ScenarioOperationalLocation
  cursor: String
}

type ScenarioOperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  operationsType: String
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  operationsDefinitionsConnection(where: FilterOperationsDefinitionClassOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOperationsDefinitionConnection
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
  orderItemsConnection(where: FilterOperationsDefinitionClassOrderItemInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassOrderItemConnection
}

type ScenarioOperationsDefinitionClassConnection {
  pageInfo: PageInfo
  edges: [ScenarioOperationsDefinitionClassesEdge]
  operationsDefinitionClasses: [Scenario]
}

type ScenarioOperationsDefinitionClassesEdge {
  node: ScenarioOperationsDefinitionClass
  cursor: String
}

type ScenarioOperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestProfile: OperationsRequestProfile
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestPersonnelConnection
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestOperationsRequestEquipmentConnection
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
  segmentRequirementsConnection(where: FilterOperationsRequestSegmentRequirementInput, first: Int, after: String, orderBy: [String]): OperationsRequestSegmentRequirementConnection
}

type ScenarioOperationsRequestConnection {
  pageInfo: PageInfo
  edges: [ScenarioOperationsRequestsEdge]
  operationsRequests: [Scenario]
}

type ScenarioOperationsRequestsEdge {
  node: ScenarioOperationsRequest
  cursor: String
}

type ScenarioOptimisationHierarchiesEdge {
  node: ScenarioOptimisationHierarchy
  cursor: String
}

type ScenarioOptimisationHierarchy {
  id: Int
  externalId: String
  description: String
  equipments(where: FilterOptimisationHierarchyEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyEquipment]
  equipmentsConnection(where: FilterOptimisationHierarchyEquipmentInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyEquipmentConnection
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyOptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyOptimisationHierarchyAttributeConnection
}

type ScenarioOptimisationHierarchyConnection {
  pageInfo: PageInfo
  edges: [ScenarioOptimisationHierarchiesEdge]
  optimisationHierarchies: [Scenario]
}

type ScenarioOptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  optimisationProperty: OptimisationProperty
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  equipmentsConnection(where: FilterOptimisationPreferredSequenceEquipmentInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceEquipmentConnection
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceOptimisationPreferredSequenceItemConnection
}

type ScenarioOptimisationPreferredSequenceConnection {
  pageInfo: PageInfo
  edges: [ScenarioOptimisationPreferredSequencesEdge]
  optimisationPreferredSequences: [Scenario]
}

type ScenarioOptimisationPreferredSequencesEdge {
  node: ScenarioOptimisationPreferredSequence
  cursor: String
}

type ScenarioOptimisationPropertiesEdge {
  node: ScenarioOptimisationProperty
  cursor: String
}

type ScenarioOptimisationProperty {
  id: Int
  name: String
  optimisationPropertyValues(where: FilterOptimisationPropertyOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPropertyValue]
  optimisationPropertyValuesConnection(where: FilterOptimisationPropertyOptimisationPropertyValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationPropertyValueConnection
  optimisationHierarchyAttributes(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationHierarchyAttributeConnection
  optimisationPreferredSequences(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPreferredSequence]
  optimisationPreferredSequencesConnection(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyOptimisationPreferredSequenceConnection
}

type ScenarioOptimisationPropertyConnection {
  pageInfo: PageInfo
  edges: [ScenarioOptimisationPropertiesEdge]
  optimisationProperties: [Scenario]
}

type ScenarioOrder {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: OrderStatus
  priority: Int
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderItemsConnection(where: FilterOrderOrderItemInput, first: Int, after: String, orderBy: [String]): OrderOrderItemConnection
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
  orderPropertiesConnection(where: FilterOrderOrderPropertyInput, first: Int, after: String, orderBy: [String]): OrderOrderPropertyConnection
}

type ScenarioOrderConnection {
  pageInfo: PageInfo
  edges: [ScenarioOrdersEdge]
  orders: [Scenario]
}

type ScenarioOrdersEdge {
  node: ScenarioOrder
  cursor: String
}

type ScenarioOrderStatus {
  id: Int
  status: String
  orders(where: FilterOrderStatusOrderInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatusOrder]
  ordersConnection(where: FilterOrderStatusOrderInput, first: Int, after: String, orderBy: [String]): OrderStatusOrderConnection
}

type ScenarioOrderStatusConnection {
  pageInfo: PageInfo
  edges: [ScenarioOrderStatusesEdge]
  orderStatuses: [Scenario]
}

type ScenarioOrderStatusesEdge {
  node: ScenarioOrderStatus
  cursor: String
}

type ScenarioPerson {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personPropertiesConnection(where: FilterPersonPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPersonPropertyConnection
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonOperationsSegmentPersonnelSpecificationConnection
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterPersonOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): PersonOperationsRequestPersonnelConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonSegmentRequirementPersonnelRequirementConnection
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
}

type ScenarioPersonConnection {
  pageInfo: PageInfo
  edges: [ScenarioPersonsEdge]
  persons: [Scenario]
}

type ScenarioPersonnelClass {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelClassPropertiesConnection(where: FilterPersonnelClassPersonnelClassPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelClassPropertyConnection
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelClassPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelPositionConnection
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  personnelCapabilitiesConnection(where: FilterPersonnelClassPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonnelCapabilityConnection
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): PersonnelClassOperationsSegmentPersonnelSpecificationConnection
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): PersonnelClassSegmentRequirementPersonnelRequirementConnection
}

type ScenarioPersonnelClassConnection {
  pageInfo: PageInfo
  edges: [ScenarioPersonnelClassesEdge]
  personnelClasses: [Scenario]
}

type ScenarioPersonnelClassesEdge {
  node: ScenarioPersonnelClass
  cursor: String
}

type ScenarioPersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonnelPositionPropertyConnection
}

type ScenarioPersonnelPositionConnection {
  pageInfo: PageInfo
  edges: [ScenarioPersonnelPositionsEdge]
  personnelPositions: [Scenario]
}

type ScenarioPersonnelPositionsEdge {
  node: ScenarioPersonnelPosition
  cursor: String
}

type ScenarioPersonsEdge {
  node: ScenarioPerson
  cursor: String
}

type ScenarioScenarioAttribute {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

type ScenarioTimePeriod {
  id: Int
  startTime: String
  endTime: String
}

type ScenarioTimePeriodConnection {
  pageInfo: PageInfo
  edges: [ScenarioTimePeriodsEdge]
  timePeriods: [Scenario]
}

type ScenarioTimePeriodsEdge {
  node: ScenarioTimePeriod
  cursor: String
}

type SegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementConnection
  descendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  descendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  ascendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  ascendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPropertyConnection
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementEquipmentRequirementConnection
}

type SegmentRequirementConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementEdge]
  segmentRequirements: [SegmentRequirement]
}

type SegmentRequirementDescendant {
  id: Int
  ascendant: SegmentRequirement
  descendant: SegmentRequirement
}

type SegmentRequirementDescendantConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementDescendantEdge]
  segmentRequirementDescendants: [SegmentRequirementDescendant]
}

type SegmentRequirementDescendantEdge {
  node: SegmentRequirementDescendant
  cursor: String
}

type SegmentRequirementEdge {
  node: SegmentRequirement
  cursor: String
}

type SegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
}

type SegmentRequirementEquipmentRequirementConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementEquipmentRequirementEdge]
  segmentRequirementEquipmentRequirements: [SegmentRequirementEquipmentRequirement]
}

type SegmentRequirementEquipmentRequirementEdge {
  node: SegmentRequirementEquipmentRequirement
  cursor: String
}

type SegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type SegmentRequirementMaterialRequirementConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementMaterialRequirementEdge]
  segmentRequirementMaterialRequirements: [SegmentRequirementMaterialRequirement]
}

type SegmentRequirementMaterialRequirementEdge {
  node: SegmentRequirementMaterialRequirement
  cursor: String
}

type SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [SegmentRequirementMaterialRequirement]
}

type SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsEdge {
  node: SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement
  cursor: String
}

type SegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type SegmentRequirementPersonnelRequirementConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementPersonnelRequirementEdge]
  segmentRequirementPersonnelRequirements: [SegmentRequirementPersonnelRequirement]
}

type SegmentRequirementPersonnelRequirementEdge {
  node: SegmentRequirementPersonnelRequirement
  cursor: String
}

type SegmentRequirementProperty {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  value: String
  dataType: String
}

type SegmentRequirementPropertyConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [SegmentRequirementPropertyEdge]
  segmentRequirementProperties: [SegmentRequirementProperty]
}

type SegmentRequirementPropertyEdge {
  node: SegmentRequirementProperty
  cursor: String
}

type SegmentRequirementSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementConnection
  descendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  descendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  ascendantSegmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  ascendantSegmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPropertyConnection
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementMaterialRequirementConnection
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementPersonnelRequirementConnection
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementSegmentRequirementEquipmentRequirementConnection
}

type SegmentRequirementSegmentRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementSegmentRequirementsEdge]
  segmentRequirements: [SegmentRequirement]
}

type SegmentRequirementSegmentRequirementEquipmentRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
}

type SegmentRequirementSegmentRequirementEquipmentRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementSegmentRequirementEquipmentRequirementsEdge]
  segmentRequirementEquipmentRequirements: [SegmentRequirement]
}

type SegmentRequirementSegmentRequirementEquipmentRequirementsEdge {
  node: SegmentRequirementSegmentRequirementEquipmentRequirement
  cursor: String
}

type SegmentRequirementSegmentRequirementMaterialRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementConnection
}

type SegmentRequirementSegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementSegmentRequirementMaterialRequirementsEdge]
  segmentRequirementMaterialRequirements: [SegmentRequirement]
}

type SegmentRequirementSegmentRequirementMaterialRequirementsEdge {
  node: SegmentRequirementSegmentRequirementMaterialRequirement
  cursor: String
}

type SegmentRequirementSegmentRequirementPersonnelRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type SegmentRequirementSegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementSegmentRequirementPersonnelRequirementsEdge]
  segmentRequirementPersonnelRequirements: [SegmentRequirement]
}

type SegmentRequirementSegmentRequirementPersonnelRequirementsEdge {
  node: SegmentRequirementSegmentRequirementPersonnelRequirement
  cursor: String
}

type SegmentRequirementSegmentRequirementPropertiesEdge {
  node: SegmentRequirementSegmentRequirementProperty
  cursor: String
}

type SegmentRequirementSegmentRequirementProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
}

type SegmentRequirementSegmentRequirementPropertyConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementSegmentRequirementPropertiesEdge]
  segmentRequirementProperties: [SegmentRequirement]
}

type SegmentRequirementSegmentRequirementsEdge {
  node: SegmentRequirementSegmentRequirement
  cursor: String
}

type TimePeriod {
  id: Int
  startTime: String
  endTime: String
  scenario: Scenario
}

type TimePeriodConnection {
  totalCount: Int
  pageInfo: PageInfo
  edges: [TimePeriodEdge]
  timePeriods: [TimePeriod]
}

type TimePeriodEdge {
  node: TimePeriod
  cursor: String
}

input UpdateAscendantEquipmentsInput {
  data: UpdateAscendantEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateAscendantEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateAscendantOperationsSegmentsInput {
  data: UpdateAscendantOperationsSegmentsInputFields
  where: FindOperationsSegmentInput
}

input UpdateAscendantOperationsSegmentsInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateAscendantSegmentRequirementsInput {
  data: UpdateAscendantSegmentRequirementsInputFields
  where: FindSegmentRequirementInput
}

input UpdateAscendantSegmentRequirementsInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateAvailabilityTemplateAvailabilityTemplateItemInput {
  data: UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields
  where: FindAvailabilityTemplateItemInput
}

input UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields {
  id: Int
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

input UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  data: UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields
  where: FindCalendarisedAvailabilityTemplateSetItemInput
}

input UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields {
  id: Int
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
}

input UpdateAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  scenario: UpsertScenarioParentInput
  availabilityTemplateItems: UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input UpdateAvailabilityTemplateItemInput {
  id: Int
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: Int
  endTime: Int
}

input UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  data: UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields
  where: FindCalendarisedAvailabilityTemplateSetItemInput
}

input UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
}

input UpdateCalendarisedAvailabilityTemplateSetEquipmentInput {
  data: UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input UpdateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
}

input UpdateCalendarisedAvailabilityTemplateSetPersonInput {
  data: UpdateCalendarisedAvailabilityTemplateSetPersonInputFields
  where: FindPersonInput
}

input UpdateCalendarisedAvailabilityTemplateSetPersonInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  data: UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields
  where: FindCalendarisedThroughputSetItemInput
}

input UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  operationsSegments: UpdateManyCalendarisedThroughputSetOperationsSegmentsInput
  calendarisedThroughputSetItems: UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
}

input UpdateCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateCalendarisedThroughputSetOperationsSegmentInput {
  data: UpdateCalendarisedThroughputSetOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateCalendarisedThroughputSetOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateChangeoverSetChangeoverSetItemInput {
  data: UpdateChangeoverSetChangeoverSetItemInputFields
  where: FindChangeoverSetItemInput
}

input UpdateChangeoverSetChangeoverSetItemInputFields {
  id: Int
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateChangeoverSetEquipmentInput {
  data: UpdateChangeoverSetEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateChangeoverSetEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyChangeoverSetChangeoverSetItemsInput
  equipments: UpdateManyChangeoverSetEquipmentsInput
}

input UpdateChangeoverSetItemInput {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateChildEquipmentsInput {
  data: UpdateChildEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateChildEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateColourSchemeColourSchemeItemInput {
  data: UpdateColourSchemeColourSchemeItemInputFields
  where: FindColourSchemeItemInput
}

input UpdateColourSchemeColourSchemeItemInputFields {
  id: Int
  propertyValue: UpsertOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input UpdateColourSchemeInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  colourSchemeItems: UpdateManyColourSchemeColourSchemeItemsInput
}

input UpdateColourSchemeItemInput {
  id: Int
  colourScheme: UpsertColourSchemeParentInput
  propertyValue: UpsertOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input UpdateConfigurableApplicationParameterInput {
  id: Int
  name: String
  dataType: String
  valueAsString: String
  scenario: UpsertScenarioParentInput
}

input UpdateDescendantEquipmentsInput {
  data: UpdateDescendantEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateDescendantEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateDescendantOperationsSegmentsInput {
  data: UpdateDescendantOperationsSegmentsInputFields
  where: FindOperationsSegmentInput
}

input UpdateDescendantOperationsSegmentsInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateDescendantSegmentRequirementsInput {
  data: UpdateDescendantSegmentRequirementsInputFields
  where: FindSegmentRequirementInput
}

input UpdateDescendantSegmentRequirementsInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateDowntimePeriodEquipmentsInput {
  data: UpdateDowntimePeriodEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateDowntimePeriodEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyDowntimePeriodEquipmentsInput
  persons: UpdateManyDowntimePeriodPersonsInput
}

input UpdateDowntimePeriodPersonsInput {
  data: UpdateDowntimePeriodPersonsInputFields
  where: FindPersonInput
}

input UpdateDowntimePeriodPersonsInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdateEquipmentCapabilityInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateEquipmentChildInput {
  id: Int
  parent: UpsertEquipmentParentInput
  child: UpsertEquipmentParentInput
}

input UpdateEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
}

input UpdateEquipmentClassEquipmentsInput {
  data: UpdateEquipmentClassEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateEquipmentClassEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  data: UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateEquipmentDescendantInput {
  id: Int
  ascendant: UpsertEquipmentParentInput
  descendant: UpsertEquipmentParentInput
}

input UpdateEquipmentDowntimePeriodInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
}

input UpdateEquipmentDowntimePeriodsInput {
  data: UpdateEquipmentDowntimePeriodsInputFields
  where: FindDowntimePeriodInput
}

input UpdateEquipmentDowntimePeriodsInputFields {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyDowntimePeriodEquipmentsInput
  persons: UpdateManyDowntimePeriodPersonsInput
}

input UpdateEquipmentEquipmentCapabilityInput {
  data: UpdateEquipmentEquipmentCapabilityInputFields
  where: FindEquipmentCapabilityInput
}

input UpdateEquipmentEquipmentCapabilityInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateEquipmentEquipmentClassesInput {
  data: UpdateEquipmentEquipmentClassesInputFields
  where: FindEquipmentClassInput
}

input UpdateEquipmentEquipmentClassesInputFields {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateEquipmentEquipmentPropertyInput {
  data: UpdateEquipmentEquipmentPropertyInputFields
  where: FindEquipmentPropertyInput
}

input UpdateEquipmentEquipmentPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdateEquipmentHierarchyScopeInput {
  data: UpdateEquipmentHierarchyScopeInputFields
  where: FindHierarchyScopeInput
}

input UpdateEquipmentHierarchyScopeInputFields {
  id: Int
  externalId: String
  parent: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateEquipmentOperationsRequestEquipmentInput {
  data: UpdateEquipmentOperationsRequestEquipmentInputFields
  where: FindOperationsRequestEquipmentInput
}

input UpdateEquipmentOperationsRequestEquipmentInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
}

input UpdateEquipmentOperationsSegmentEquipmentSpecificationInput {
  data: UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateEquipmentPropertyInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateEquipmentSegmentRequirementEquipmentRequirementInput {
  data: UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateHierarchyScopeDescendantInput {
  id: Int
  ascendant: UpsertHierarchyScopeParentInput
  descendant: UpsertHierarchyScopeParentInput
}

input UpdateHierarchyScopeEquipmentCapabilityInput {
  data: UpdateHierarchyScopeEquipmentCapabilityInputFields
  where: FindEquipmentCapabilityInput
}

input UpdateHierarchyScopeEquipmentCapabilityInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateHierarchyScopeEquipmentClassInput {
  data: UpdateHierarchyScopeEquipmentClassInputFields
  where: FindEquipmentClassInput
}

input UpdateHierarchyScopeEquipmentClassInputFields {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateHierarchyScopeEquipmentInput {
  data: UpdateHierarchyScopeEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateHierarchyScopeEquipmentInputFields {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateHierarchyScopeHierarchyScopeInput {
  data: UpdateHierarchyScopeHierarchyScopeInputFields
  where: FindHierarchyScopeInput
}

input UpdateHierarchyScopeHierarchyScopeInputFields {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  parent: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateHierarchyScopeMaterialDefinitionInput {
  data: UpdateHierarchyScopeMaterialDefinitionInputFields
  where: FindMaterialDefinitionInput
}

input UpdateHierarchyScopeMaterialDefinitionInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  calendarisedThroughputSetItems: UpdateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateHierarchyScopeMaterialLotInput {
  data: UpdateHierarchyScopeMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateHierarchyScopeMaterialLotInputFields {
  id: Int
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateHierarchyScopeOpenPurchaseOrderInput {
  data: UpdateHierarchyScopeOpenPurchaseOrderInputFields
  where: FindOpenPurchaseOrderInput
}

input UpdateHierarchyScopeOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeOperationalLocationInput {
  data: UpdateHierarchyScopeOperationalLocationInputFields
  where: FindOperationalLocationInput
}

input UpdateHierarchyScopeOperationalLocationInputFields {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateHierarchyScopeOperationsDefinitionClassInput {
  data: UpdateHierarchyScopeOperationsDefinitionClassInputFields
  where: FindOperationsDefinitionClassInput
}

input UpdateHierarchyScopeOperationsDefinitionClassInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: UpsertScenarioParentInput
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateHierarchyScopeOperationsDefinitionInput {
  data: UpdateHierarchyScopeOperationsDefinitionInputFields
  where: FindOperationsDefinitionInput
}

input UpdateHierarchyScopeOperationsDefinitionInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateHierarchyScopeOperationsRequestInput {
  data: UpdateHierarchyScopeOperationsRequestInputFields
  where: FindOperationsRequestInput
}

input UpdateHierarchyScopeOperationsRequestInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfile: UpsertOperationsRequestProfileParentInput
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateHierarchyScopeOperationsSegmentInput {
  data: UpdateHierarchyScopeOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateHierarchyScopeOperationsSegmentInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdateHierarchyScopePersonInput {
  data: UpdateHierarchyScopePersonInputFields
  where: FindPersonInput
}

input UpdateHierarchyScopePersonInputFields {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdateHierarchyScopePersonnelCapabilityInput {
  data: UpdateHierarchyScopePersonnelCapabilityInputFields
  where: FindPersonnelCapabilityInput
}

input UpdateHierarchyScopePersonnelCapabilityInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateHierarchyScopePersonnelClassInput {
  data: UpdateHierarchyScopePersonnelClassInputFields
  where: FindPersonnelClassInput
}

input UpdateHierarchyScopePersonnelClassInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  persons: UpdateManyPersonnelClassPersonsInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdateHierarchyScopePersonnelPositionInput {
  data: UpdateHierarchyScopePersonnelPositionInputFields
  where: FindPersonnelPositionInput
}

input UpdateHierarchyScopePersonnelPositionInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  persons: UpdateManyPersonnelPositionPersonsInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateHierarchyScopeSegmentRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateHierarchyScopeSegmentRequirementMaterialRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdateManyAscendantEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateAscendantEquipmentsInput]
  set: [CreateAscendantEquipmentsInput]
  upsert: [UpsertAscendantEquipmentsInput]
  update: [UpdateAscendantEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyAscendantOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateAscendantOperationsSegmentsInput]
  set: [CreateAscendantOperationsSegmentsInput]
  upsert: [UpsertAscendantOperationsSegmentsInput]
  update: [UpdateAscendantOperationsSegmentsInput]
  delete: [FilterOperationsSegmentInput]
  disconnect: [FilterOperationsSegmentInput]
}

input UpdateManyAscendantSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateAscendantSegmentRequirementsInput]
  set: [CreateAscendantSegmentRequirementsInput]
  upsert: [UpsertAscendantSegmentRequirementsInput]
  update: [UpdateAscendantSegmentRequirementsInput]
  delete: [FilterSegmentRequirementInput]
  disconnect: [FilterSegmentRequirementInput]
}

input UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput {
  connect: [FindAvailabilityTemplateItemInput]
  create: [CreateAvailabilityTemplateAvailabilityTemplateItemInput]
  set: [CreateAvailabilityTemplateAvailabilityTemplateItemInput]
  upsert: [UpsertAvailabilityTemplateAvailabilityTemplateItemInput]
  update: [UpdateAvailabilityTemplateAvailabilityTemplateItemInput]
  delete: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  disconnect: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
}

input UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  set: [CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  update: [UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  delete: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  disconnect: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  set: [CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  delete: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  disconnect: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateCalendarisedAvailabilityTemplateSetEquipmentInput]
  set: [CreateCalendarisedAvailabilityTemplateSetEquipmentInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetEquipmentInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetEquipmentInput]
  delete: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  disconnect: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput {
  connect: [FindPersonInput]
  create: [CreateCalendarisedAvailabilityTemplateSetPersonInput]
  set: [CreateCalendarisedAvailabilityTemplateSetPersonInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetPersonInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetPersonInput]
  delete: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  disconnect: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
}

input UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  set: [CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  upsert: [UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  update: [UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  delete: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  disconnect: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
}

input UpdateManyCalendarisedThroughputSetOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateCalendarisedThroughputSetOperationsSegmentInput]
  set: [CreateCalendarisedThroughputSetOperationsSegmentInput]
  upsert: [UpsertCalendarisedThroughputSetOperationsSegmentInput]
  update: [UpdateCalendarisedThroughputSetOperationsSegmentInput]
  delete: [FilterCalendarisedThroughputSetOperationsSegmentInput]
  disconnect: [FilterCalendarisedThroughputSetOperationsSegmentInput]
}

input UpdateManyChangeoverSetChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateChangeoverSetChangeoverSetItemInput]
  set: [CreateChangeoverSetChangeoverSetItemInput]
  upsert: [UpsertChangeoverSetChangeoverSetItemInput]
  update: [UpdateChangeoverSetChangeoverSetItemInput]
  delete: [FilterChangeoverSetChangeoverSetItemInput]
  disconnect: [FilterChangeoverSetChangeoverSetItemInput]
}

input UpdateManyChangeoverSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChangeoverSetEquipmentInput]
  set: [CreateChangeoverSetEquipmentInput]
  upsert: [UpsertChangeoverSetEquipmentInput]
  update: [UpdateChangeoverSetEquipmentInput]
  delete: [FilterChangeoverSetEquipmentInput]
  disconnect: [FilterChangeoverSetEquipmentInput]
}

input UpdateManyChildEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChildEquipmentsInput]
  set: [CreateChildEquipmentsInput]
  upsert: [UpsertChildEquipmentsInput]
  update: [UpdateChildEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyColourSchemeColourSchemeItemsInput {
  connect: [FindColourSchemeItemInput]
  create: [CreateColourSchemeColourSchemeItemInput]
  set: [CreateColourSchemeColourSchemeItemInput]
  upsert: [UpsertColourSchemeColourSchemeItemInput]
  update: [UpdateColourSchemeColourSchemeItemInput]
  delete: [FilterColourSchemeColourSchemeItemInput]
  disconnect: [FilterColourSchemeColourSchemeItemInput]
}

input UpdateManyDescendantEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateDescendantEquipmentsInput]
  set: [CreateDescendantEquipmentsInput]
  upsert: [UpsertDescendantEquipmentsInput]
  update: [UpdateDescendantEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyDescendantOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateDescendantOperationsSegmentsInput]
  set: [CreateDescendantOperationsSegmentsInput]
  upsert: [UpsertDescendantOperationsSegmentsInput]
  update: [UpdateDescendantOperationsSegmentsInput]
  delete: [FilterOperationsSegmentInput]
  disconnect: [FilterOperationsSegmentInput]
}

input UpdateManyDescendantSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateDescendantSegmentRequirementsInput]
  set: [CreateDescendantSegmentRequirementsInput]
  upsert: [UpsertDescendantSegmentRequirementsInput]
  update: [UpdateDescendantSegmentRequirementsInput]
  delete: [FilterSegmentRequirementInput]
  disconnect: [FilterSegmentRequirementInput]
}

input UpdateManyDowntimePeriodEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateDowntimePeriodEquipmentsInput]
  set: [CreateDowntimePeriodEquipmentsInput]
  upsert: [UpsertDowntimePeriodEquipmentsInput]
  update: [UpdateDowntimePeriodEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyDowntimePeriodPersonsInput {
  connect: [FindPersonInput]
  create: [CreateDowntimePeriodPersonsInput]
  set: [CreateDowntimePeriodPersonsInput]
  upsert: [UpsertDowntimePeriodPersonsInput]
  update: [UpdateDowntimePeriodPersonsInput]
  delete: [FilterPersonInput]
  disconnect: [FilterPersonInput]
}

input UpdateManyEquipmentClassEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateEquipmentClassEquipmentsInput]
  set: [CreateEquipmentClassEquipmentsInput]
  upsert: [UpsertEquipmentClassEquipmentsInput]
  update: [UpdateEquipmentClassEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  set: [CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  delete: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyEquipmentDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreateEquipmentDowntimePeriodsInput]
  set: [CreateEquipmentDowntimePeriodsInput]
  upsert: [UpsertEquipmentDowntimePeriodsInput]
  update: [UpdateEquipmentDowntimePeriodsInput]
  delete: [FilterDowntimePeriodInput]
  disconnect: [FilterDowntimePeriodInput]
}

input UpdateManyEquipmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateEquipmentEquipmentCapabilityInput]
  set: [CreateEquipmentEquipmentCapabilityInput]
  upsert: [UpsertEquipmentEquipmentCapabilityInput]
  update: [UpdateEquipmentEquipmentCapabilityInput]
  delete: [FilterEquipmentEquipmentCapabilityInput]
  disconnect: [FilterEquipmentEquipmentCapabilityInput]
}

input UpdateManyEquipmentEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateEquipmentEquipmentClassesInput]
  set: [CreateEquipmentEquipmentClassesInput]
  upsert: [UpsertEquipmentEquipmentClassesInput]
  update: [UpdateEquipmentEquipmentClassesInput]
  delete: [FilterEquipmentClassInput]
  disconnect: [FilterEquipmentClassInput]
}

input UpdateManyEquipmentEquipmentPropertiesInput {
  connect: [FindEquipmentPropertyInput]
  create: [CreateEquipmentEquipmentPropertyInput]
  set: [CreateEquipmentEquipmentPropertyInput]
  upsert: [UpsertEquipmentEquipmentPropertyInput]
  update: [UpdateEquipmentEquipmentPropertyInput]
  delete: [FilterEquipmentEquipmentPropertyInput]
  disconnect: [FilterEquipmentEquipmentPropertyInput]
}

input UpdateManyEquipmentHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateEquipmentHierarchyScopeInput]
  set: [CreateEquipmentHierarchyScopeInput]
  upsert: [UpsertEquipmentHierarchyScopeInput]
  update: [UpdateEquipmentHierarchyScopeInput]
  delete: [FilterEquipmentHierarchyScopeInput]
  disconnect: [FilterEquipmentHierarchyScopeInput]
}

input UpdateManyEquipmentOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateEquipmentOperationsRequestEquipmentInput]
  set: [CreateEquipmentOperationsRequestEquipmentInput]
  upsert: [UpsertEquipmentOperationsRequestEquipmentInput]
  update: [UpdateEquipmentOperationsRequestEquipmentInput]
  delete: [FilterEquipmentOperationsRequestEquipmentInput]
  disconnect: [FilterEquipmentOperationsRequestEquipmentInput]
}

input UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentOperationsSegmentEquipmentSpecificationInput]
  set: [CreateEquipmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateEquipmentOperationsSegmentEquipmentSpecificationInput]
  delete: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateEquipmentSegmentRequirementEquipmentRequirementInput]
  set: [CreateEquipmentSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertEquipmentSegmentRequirementEquipmentRequirementInput]
  update: [UpdateEquipmentSegmentRequirementEquipmentRequirementInput]
  delete: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  disconnect: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyHierarchyScopeEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateHierarchyScopeEquipmentCapabilityInput]
  set: [CreateHierarchyScopeEquipmentCapabilityInput]
  upsert: [UpsertHierarchyScopeEquipmentCapabilityInput]
  update: [UpdateHierarchyScopeEquipmentCapabilityInput]
  delete: [FilterHierarchyScopeEquipmentCapabilityInput]
  disconnect: [FilterHierarchyScopeEquipmentCapabilityInput]
}

input UpdateManyHierarchyScopeEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateHierarchyScopeEquipmentClassInput]
  set: [CreateHierarchyScopeEquipmentClassInput]
  upsert: [UpsertHierarchyScopeEquipmentClassInput]
  update: [UpdateHierarchyScopeEquipmentClassInput]
  delete: [FilterHierarchyScopeEquipmentClassInput]
  disconnect: [FilterHierarchyScopeEquipmentClassInput]
}

input UpdateManyHierarchyScopeEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateHierarchyScopeEquipmentInput]
  set: [CreateHierarchyScopeEquipmentInput]
  upsert: [UpsertHierarchyScopeEquipmentInput]
  update: [UpdateHierarchyScopeEquipmentInput]
  delete: [FilterHierarchyScopeEquipmentInput]
  disconnect: [FilterHierarchyScopeEquipmentInput]
}

input UpdateManyHierarchyScopeHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateHierarchyScopeHierarchyScopeInput]
  set: [CreateHierarchyScopeHierarchyScopeInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeInput]
  update: [UpdateHierarchyScopeHierarchyScopeInput]
  delete: [FilterHierarchyScopeHierarchyScopeInput]
  disconnect: [FilterHierarchyScopeHierarchyScopeInput]
}

input UpdateManyHierarchyScopeMaterialDefinitionsInput {
  connect: [FindMaterialDefinitionInput]
  create: [CreateHierarchyScopeMaterialDefinitionInput]
  set: [CreateHierarchyScopeMaterialDefinitionInput]
  upsert: [UpsertHierarchyScopeMaterialDefinitionInput]
  update: [UpdateHierarchyScopeMaterialDefinitionInput]
  delete: [FilterHierarchyScopeMaterialDefinitionInput]
  disconnect: [FilterHierarchyScopeMaterialDefinitionInput]
}

input UpdateManyHierarchyScopeMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateHierarchyScopeMaterialLotInput]
  set: [CreateHierarchyScopeMaterialLotInput]
  upsert: [UpsertHierarchyScopeMaterialLotInput]
  update: [UpdateHierarchyScopeMaterialLotInput]
  delete: [FilterHierarchyScopeMaterialLotInput]
  disconnect: [FilterHierarchyScopeMaterialLotInput]
}

input UpdateManyHierarchyScopeOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateHierarchyScopeOpenPurchaseOrderInput]
  set: [CreateHierarchyScopeOpenPurchaseOrderInput]
  upsert: [UpsertHierarchyScopeOpenPurchaseOrderInput]
  update: [UpdateHierarchyScopeOpenPurchaseOrderInput]
  delete: [FilterHierarchyScopeOpenPurchaseOrderInput]
  disconnect: [FilterHierarchyScopeOpenPurchaseOrderInput]
}

input UpdateManyHierarchyScopeOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateHierarchyScopeOperationalLocationInput]
  set: [CreateHierarchyScopeOperationalLocationInput]
  upsert: [UpsertHierarchyScopeOperationalLocationInput]
  update: [UpdateHierarchyScopeOperationalLocationInput]
  delete: [FilterHierarchyScopeOperationalLocationInput]
  disconnect: [FilterHierarchyScopeOperationalLocationInput]
}

input UpdateManyHierarchyScopeOperationsDefinitionClassesInput {
  connect: [FindOperationsDefinitionClassInput]
  create: [CreateHierarchyScopeOperationsDefinitionClassInput]
  set: [CreateHierarchyScopeOperationsDefinitionClassInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionClassInput]
  update: [UpdateHierarchyScopeOperationsDefinitionClassInput]
  delete: [FilterHierarchyScopeOperationsDefinitionClassInput]
  disconnect: [FilterHierarchyScopeOperationsDefinitionClassInput]
}

input UpdateManyHierarchyScopeOperationsDefinitionsInput {
  connect: [FindOperationsDefinitionInput]
  create: [CreateHierarchyScopeOperationsDefinitionInput]
  set: [CreateHierarchyScopeOperationsDefinitionInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionInput]
  update: [UpdateHierarchyScopeOperationsDefinitionInput]
  delete: [FilterHierarchyScopeOperationsDefinitionInput]
  disconnect: [FilterHierarchyScopeOperationsDefinitionInput]
}

input UpdateManyHierarchyScopeOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateHierarchyScopeOperationsRequestInput]
  set: [CreateHierarchyScopeOperationsRequestInput]
  upsert: [UpsertHierarchyScopeOperationsRequestInput]
  update: [UpdateHierarchyScopeOperationsRequestInput]
  delete: [FilterHierarchyScopeOperationsRequestInput]
  disconnect: [FilterHierarchyScopeOperationsRequestInput]
}

input UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  set: [CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  delete: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  set: [CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  delete: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  disconnect: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  set: [CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  delete: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateHierarchyScopeOperationsSegmentInput]
  set: [CreateHierarchyScopeOperationsSegmentInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentInput]
  update: [UpdateHierarchyScopeOperationsSegmentInput]
  delete: [FilterHierarchyScopeOperationsSegmentInput]
  disconnect: [FilterHierarchyScopeOperationsSegmentInput]
}

input UpdateManyHierarchyScopePersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateHierarchyScopePersonnelCapabilityInput]
  set: [CreateHierarchyScopePersonnelCapabilityInput]
  upsert: [UpsertHierarchyScopePersonnelCapabilityInput]
  update: [UpdateHierarchyScopePersonnelCapabilityInput]
  delete: [FilterHierarchyScopePersonnelCapabilityInput]
  disconnect: [FilterHierarchyScopePersonnelCapabilityInput]
}

input UpdateManyHierarchyScopePersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreateHierarchyScopePersonnelClassInput]
  set: [CreateHierarchyScopePersonnelClassInput]
  upsert: [UpsertHierarchyScopePersonnelClassInput]
  update: [UpdateHierarchyScopePersonnelClassInput]
  delete: [FilterHierarchyScopePersonnelClassInput]
  disconnect: [FilterHierarchyScopePersonnelClassInput]
}

input UpdateManyHierarchyScopePersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreateHierarchyScopePersonnelPositionInput]
  set: [CreateHierarchyScopePersonnelPositionInput]
  upsert: [UpsertHierarchyScopePersonnelPositionInput]
  update: [UpdateHierarchyScopePersonnelPositionInput]
  delete: [FilterHierarchyScopePersonnelPositionInput]
  disconnect: [FilterHierarchyScopePersonnelPositionInput]
}

input UpdateManyHierarchyScopePersonsInput {
  connect: [FindPersonInput]
  create: [CreateHierarchyScopePersonInput]
  set: [CreateHierarchyScopePersonInput]
  upsert: [UpsertHierarchyScopePersonInput]
  update: [UpdateHierarchyScopePersonInput]
  delete: [FilterHierarchyScopePersonInput]
  disconnect: [FilterHierarchyScopePersonInput]
}

input UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  set: [CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  delete: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  disconnect: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  set: [CreateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  delete: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  set: [CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  delete: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  disconnect: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementInput]
  set: [CreateHierarchyScopeSegmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementInput]
  delete: [FilterHierarchyScopeSegmentRequirementInput]
  disconnect: [FilterHierarchyScopeSegmentRequirementInput]
}

input UpdateManyMaterialDefinitionCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateMaterialDefinitionCalendarisedThroughputSetItemInput]
  set: [CreateMaterialDefinitionCalendarisedThroughputSetItemInput]
  upsert: [UpsertMaterialDefinitionCalendarisedThroughputSetItemInput]
  update: [UpdateMaterialDefinitionCalendarisedThroughputSetItemInput]
  delete: [FilterMaterialDefinitionCalendarisedThroughputSetItemInput]
  disconnect: [FilterMaterialDefinitionCalendarisedThroughputSetItemInput]
}

input UpdateManyMaterialDefinitionMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateMaterialDefinitionMaterialLotInput]
  set: [CreateMaterialDefinitionMaterialLotInput]
  upsert: [UpsertMaterialDefinitionMaterialLotInput]
  update: [UpdateMaterialDefinitionMaterialLotInput]
  delete: [FilterMaterialDefinitionMaterialLotInput]
  disconnect: [FilterMaterialDefinitionMaterialLotInput]
}

input UpdateManyMaterialDefinitionMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateMaterialDefinitionMaterialPropertyInput]
  set: [CreateMaterialDefinitionMaterialPropertyInput]
  upsert: [UpsertMaterialDefinitionMaterialPropertyInput]
  update: [UpdateMaterialDefinitionMaterialPropertyInput]
  delete: [FilterMaterialDefinitionMaterialPropertyInput]
  disconnect: [FilterMaterialDefinitionMaterialPropertyInput]
}

input UpdateManyMaterialDefinitionOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateMaterialDefinitionOpenPurchaseOrderInput]
  set: [CreateMaterialDefinitionOpenPurchaseOrderInput]
  upsert: [UpsertMaterialDefinitionOpenPurchaseOrderInput]
  update: [UpdateMaterialDefinitionOpenPurchaseOrderInput]
  delete: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  disconnect: [FilterMaterialDefinitionOpenPurchaseOrderInput]
}

input UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  set: [CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  update: [UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  delete: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  disconnect: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  set: [CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  update: [UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  delete: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
}

input UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialLotSegmentRequirementMaterialRequirementInput]
  set: [CreateMaterialLotSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialLotSegmentRequirementMaterialRequirementInput]
  update: [UpdateMaterialLotSegmentRequirementMaterialRequirementInput]
  delete: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
}

input UpdateManyOperationalLocationMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateOperationalLocationMaterialLotInput]
  set: [CreateOperationalLocationMaterialLotInput]
  upsert: [UpsertOperationalLocationMaterialLotInput]
  update: [UpdateOperationalLocationMaterialLotInput]
  delete: [FilterOperationalLocationMaterialLotInput]
  disconnect: [FilterOperationalLocationMaterialLotInput]
}

input UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  set: [CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  delete: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  set: [CreateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  delete: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  disconnect: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  set: [CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  delete: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  set: [CreateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  delete: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  disconnect: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementMaterialRequirementInput]
  set: [CreateOperationalLocationSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementMaterialRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementMaterialRequirementInput]
  delete: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
}

input UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  set: [CreateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  delete: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  disconnect: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyOperationsDefinitionClassOperationsDefinitionsInput {
  connect: [FindOperationsDefinitionInput]
  create: [CreateOperationsDefinitionClassOperationsDefinitionInput]
  set: [CreateOperationsDefinitionClassOperationsDefinitionInput]
  upsert: [UpsertOperationsDefinitionClassOperationsDefinitionInput]
  update: [UpdateOperationsDefinitionClassOperationsDefinitionInput]
  delete: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  disconnect: [FilterOperationsDefinitionClassOperationsDefinitionInput]
}

input UpdateManyOperationsDefinitionClassOrderItemsInput {
  connect: [FindOrderItemInput]
  create: [CreateOperationsDefinitionClassOrderItemInput]
  set: [CreateOperationsDefinitionClassOrderItemInput]
  upsert: [UpsertOperationsDefinitionClassOrderItemInput]
  update: [UpdateOperationsDefinitionClassOrderItemInput]
  delete: [FilterOperationsDefinitionClassOrderItemInput]
  disconnect: [FilterOperationsDefinitionClassOrderItemInput]
}

input UpdateManyOperationsDefinitionOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsDefinitionOperationsSegmentInput]
  set: [CreateOperationsDefinitionOperationsSegmentInput]
  upsert: [UpsertOperationsDefinitionOperationsSegmentInput]
  update: [UpdateOperationsDefinitionOperationsSegmentInput]
  delete: [FilterOperationsDefinitionOperationsSegmentInput]
  disconnect: [FilterOperationsDefinitionOperationsSegmentInput]
}

input UpdateManyOperationsRequestOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateOperationsRequestOperationsRequestEquipmentInput]
  set: [CreateOperationsRequestOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsRequestOperationsRequestEquipmentInput]
  update: [UpdateOperationsRequestOperationsRequestEquipmentInput]
  delete: [FilterOperationsRequestOperationsRequestEquipmentInput]
  disconnect: [FilterOperationsRequestOperationsRequestEquipmentInput]
}

input UpdateManyOperationsRequestOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreateOperationsRequestOperationsRequestPersonnelInput]
  set: [CreateOperationsRequestOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsRequestOperationsRequestPersonnelInput]
  update: [UpdateOperationsRequestOperationsRequestPersonnelInput]
  delete: [FilterOperationsRequestOperationsRequestPersonnelInput]
  disconnect: [FilterOperationsRequestOperationsRequestPersonnelInput]
}

input UpdateManyOperationsRequestProfileOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateOperationsRequestProfileOperationsRequestInput]
  set: [CreateOperationsRequestProfileOperationsRequestInput]
  upsert: [UpsertOperationsRequestProfileOperationsRequestInput]
  update: [UpdateOperationsRequestProfileOperationsRequestInput]
  delete: [FilterOperationsRequestProfileOperationsRequestInput]
  disconnect: [FilterOperationsRequestProfileOperationsRequestInput]
}

input UpdateManyOperationsRequestSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsRequestSegmentRequirementInput]
  set: [CreateOperationsRequestSegmentRequirementInput]
  upsert: [UpsertOperationsRequestSegmentRequirementInput]
  update: [UpdateOperationsRequestSegmentRequirementInput]
  delete: [FilterOperationsRequestSegmentRequirementInput]
  disconnect: [FilterOperationsRequestSegmentRequirementInput]
}

input UpdateManyOperationsSegmentChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOperationsSegmentChangeoverSetItemInput]
  set: [CreateOperationsSegmentChangeoverSetItemInput]
  upsert: [UpsertOperationsSegmentChangeoverSetItemInput]
  update: [UpdateOperationsSegmentChangeoverSetItemInput]
  delete: [FilterOperationsSegmentChangeoverSetItemInput]
  disconnect: [FilterOperationsSegmentChangeoverSetItemInput]
}

input UpdateManyOperationsSegmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateOperationsSegmentEquipmentCapabilityInput]
  set: [CreateOperationsSegmentEquipmentCapabilityInput]
  upsert: [UpsertOperationsSegmentEquipmentCapabilityInput]
  update: [UpdateOperationsSegmentEquipmentCapabilityInput]
  delete: [FilterOperationsSegmentEquipmentCapabilityInput]
  disconnect: [FilterOperationsSegmentEquipmentCapabilityInput]
}

input UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  set: [CreateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  upsert: [UpsertOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  update: [UpdateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  delete: [FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
  disconnect: [FilterOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput]
}

input UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput {
  connect: [FindOperationsRequestEquipmentInput]
  create: [CreateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  set: [CreateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  update: [UpdateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  delete: [FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
  disconnect: [FilterOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput]
}

input UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  set: [CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  delete: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  disconnect: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateOperationsSegmentOperationsRequestInput]
  set: [CreateOperationsSegmentOperationsRequestInput]
  upsert: [UpsertOperationsSegmentOperationsRequestInput]
  update: [UpdateOperationsSegmentOperationsRequestInput]
  delete: [FilterOperationsSegmentOperationsRequestInput]
  disconnect: [FilterOperationsSegmentOperationsRequestInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput {
  connect: [FindOperationsSegmentDependencyInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  set: [CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  delete: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput {
  connect: [FindOperationsSegmentDependencyInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  set: [CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  delete: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
}

input UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  set: [CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  delete: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  set: [CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  delete: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  set: [CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  delete: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentPropertiesInput {
  connect: [FindOperationsSegmentPropertyInput]
  create: [CreateOperationsSegmentOperationsSegmentPropertyInput]
  set: [CreateOperationsSegmentOperationsSegmentPropertyInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPropertyInput]
  update: [UpdateOperationsSegmentOperationsSegmentPropertyInput]
  delete: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentPropertyInput]
}

input UpdateManyOperationsSegmentOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentInput]
  set: [CreateOperationsSegmentOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentInput]
  delete: [FilterOperationsSegmentOperationsSegmentInput]
  disconnect: [FilterOperationsSegmentOperationsSegmentInput]
}

input UpdateManyOperationsSegmentPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateOperationsSegmentPersonnelCapabilityInput]
  set: [CreateOperationsSegmentPersonnelCapabilityInput]
  upsert: [UpsertOperationsSegmentPersonnelCapabilityInput]
  update: [UpdateOperationsSegmentPersonnelCapabilityInput]
  delete: [FilterOperationsSegmentPersonnelCapabilityInput]
  disconnect: [FilterOperationsSegmentPersonnelCapabilityInput]
}

input UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput {
  connect: [FindCalendarisedThroughputSetItemInput]
  create: [CreateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  set: [CreateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  upsert: [UpsertOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  update: [UpdateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  delete: [FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
  disconnect: [FilterOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput]
}

input UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  set: [CreateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  update: [UpdateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  delete: [FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
  disconnect: [FilterOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput]
}

input UpdateManyOperationsSegmentSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsSegmentSegmentRequirementInput]
  set: [CreateOperationsSegmentSegmentRequirementInput]
  upsert: [UpsertOperationsSegmentSegmentRequirementInput]
  update: [UpdateOperationsSegmentSegmentRequirementInput]
  delete: [FilterOperationsSegmentSegmentRequirementInput]
  disconnect: [FilterOperationsSegmentSegmentRequirementInput]
}

input UpdateManyOptimisationHierarchyEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationHierarchyEquipmentInput]
  set: [CreateOptimisationHierarchyEquipmentInput]
  upsert: [UpsertOptimisationHierarchyEquipmentInput]
  update: [UpdateOptimisationHierarchyEquipmentInput]
  delete: [FilterOptimisationHierarchyEquipmentInput]
  disconnect: [FilterOptimisationHierarchyEquipmentInput]
}

input UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput {
  connect: [FindOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  set: [CreateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput]
  update: [UpdateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  delete: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  disconnect: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
}

input UpdateManyOptimisationPreferredSequenceEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationPreferredSequenceEquipmentInput]
  set: [CreateOptimisationPreferredSequenceEquipmentInput]
  upsert: [UpsertOptimisationPreferredSequenceEquipmentInput]
  update: [UpdateOptimisationPreferredSequenceEquipmentInput]
  delete: [FilterOptimisationPreferredSequenceEquipmentInput]
  disconnect: [FilterOptimisationPreferredSequenceEquipmentInput]
}

input UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput {
  connect: [FindOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  set: [CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  update: [UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  delete: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  disconnect: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
}

input UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput {
  connect: [FindOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationPropertyOptimisationHierarchyAttributeInput]
  set: [CreateOptimisationPropertyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationPropertyOptimisationHierarchyAttributeInput]
  update: [UpdateOptimisationPropertyOptimisationHierarchyAttributeInput]
  delete: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  disconnect: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
}

input UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput {
  connect: [FindOptimisationPreferredSequenceInput]
  create: [CreateOptimisationPropertyOptimisationPreferredSequenceInput]
  set: [CreateOptimisationPropertyOptimisationPreferredSequenceInput]
  upsert: [UpsertOptimisationPropertyOptimisationPreferredSequenceInput]
  update: [UpdateOptimisationPropertyOptimisationPreferredSequenceInput]
  delete: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  disconnect: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
}

input UpdateManyOptimisationPropertyOptimisationPropertyValuesInput {
  connect: [FindOptimisationPropertyValueInput]
  create: [CreateOptimisationPropertyOptimisationPropertyValueInput]
  set: [CreateOptimisationPropertyOptimisationPropertyValueInput]
  upsert: [UpsertOptimisationPropertyOptimisationPropertyValueInput]
  update: [UpdateOptimisationPropertyOptimisationPropertyValueInput]
  delete: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  disconnect: [FilterOptimisationPropertyOptimisationPropertyValueInput]
}

input UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  set: [CreateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput]
  update: [UpdateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  delete: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  disconnect: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
}

input UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemToValueInput]
  set: [CreateOptimisationPropertyValueChangeoverSetItemToValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemToValueInput]
  update: [UpdateOptimisationPropertyValueChangeoverSetItemToValueInput]
  delete: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  disconnect: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
}

input UpdateManyOptimisationPropertyValueColourSchemeItemsInput {
  connect: [FindColourSchemeItemInput]
  create: [CreateOptimisationPropertyValueColourSchemeItemInput]
  set: [CreateOptimisationPropertyValueColourSchemeItemInput]
  upsert: [UpsertOptimisationPropertyValueColourSchemeItemInput]
  update: [UpdateOptimisationPropertyValueColourSchemeItemInput]
  delete: [FilterOptimisationPropertyValueColourSchemeItemInput]
  disconnect: [FilterOptimisationPropertyValueColourSchemeItemInput]
}

input UpdateManyOptimisationPropertyValueMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateOptimisationPropertyValueMaterialPropertyInput]
  set: [CreateOptimisationPropertyValueMaterialPropertyInput]
  upsert: [UpsertOptimisationPropertyValueMaterialPropertyInput]
  update: [UpdateOptimisationPropertyValueMaterialPropertyInput]
  delete: [FilterOptimisationPropertyValueMaterialPropertyInput]
  disconnect: [FilterOptimisationPropertyValueMaterialPropertyInput]
}

input UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput {
  connect: [FindOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  set: [CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  update: [UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  delete: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  disconnect: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
}

input UpdateManyOrderItemOperationsRequestProfilesInput {
  connect: [FindOperationsRequestProfileInput]
  create: [CreateOrderItemOperationsRequestProfileInput]
  set: [CreateOrderItemOperationsRequestProfileInput]
  upsert: [UpsertOrderItemOperationsRequestProfileInput]
  update: [UpdateOrderItemOperationsRequestProfileInput]
  delete: [FilterOrderItemOperationsRequestProfileInput]
  disconnect: [FilterOrderItemOperationsRequestProfileInput]
}

input UpdateManyOrderOrderItemsInput {
  connect: [FindOrderItemInput]
  create: [CreateOrderOrderItemInput]
  set: [CreateOrderOrderItemInput]
  upsert: [UpsertOrderOrderItemInput]
  update: [UpdateOrderOrderItemInput]
  delete: [FilterOrderOrderItemInput]
  disconnect: [FilterOrderOrderItemInput]
}

input UpdateManyOrderOrderPropertiesInput {
  connect: [FindOrderPropertyInput]
  create: [CreateOrderOrderPropertyInput]
  set: [CreateOrderOrderPropertyInput]
  upsert: [UpsertOrderOrderPropertyInput]
  update: [UpdateOrderOrderPropertyInput]
  delete: [FilterOrderOrderPropertyInput]
  disconnect: [FilterOrderOrderPropertyInput]
}

input UpdateManyOrderStatusOrdersInput {
  connect: [FindOrderInput]
  create: [CreateOrderStatusOrderInput]
  set: [CreateOrderStatusOrderInput]
  upsert: [UpsertOrderStatusOrderInput]
  update: [UpdateOrderStatusOrderInput]
  delete: [FilterOrderStatusOrderInput]
  disconnect: [FilterOrderStatusOrderInput]
}

input UpdateManyParentEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateParentEquipmentsInput]
  set: [CreateParentEquipmentsInput]
  upsert: [UpsertParentEquipmentsInput]
  update: [UpdateParentEquipmentsInput]
  delete: [FilterEquipmentInput]
  disconnect: [FilterEquipmentInput]
}

input UpdateManyPersonDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreatePersonDowntimePeriodsInput]
  set: [CreatePersonDowntimePeriodsInput]
  upsert: [UpsertPersonDowntimePeriodsInput]
  update: [UpdatePersonDowntimePeriodsInput]
  delete: [FilterDowntimePeriodInput]
  disconnect: [FilterDowntimePeriodInput]
}

input UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  set: [CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  update: [UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  delete: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyPersonnelClassPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreatePersonnelClassPersonnelCapabilityInput]
  set: [CreatePersonnelClassPersonnelCapabilityInput]
  upsert: [UpsertPersonnelClassPersonnelCapabilityInput]
  update: [UpdatePersonnelClassPersonnelCapabilityInput]
  delete: [FilterPersonnelClassPersonnelCapabilityInput]
  disconnect: [FilterPersonnelClassPersonnelCapabilityInput]
}

input UpdateManyPersonnelClassPersonnelClassPropertiesInput {
  connect: [FindPersonnelClassPropertyInput]
  create: [CreatePersonnelClassPersonnelClassPropertyInput]
  set: [CreatePersonnelClassPersonnelClassPropertyInput]
  upsert: [UpsertPersonnelClassPersonnelClassPropertyInput]
  update: [UpdatePersonnelClassPersonnelClassPropertyInput]
  delete: [FilterPersonnelClassPersonnelClassPropertyInput]
  disconnect: [FilterPersonnelClassPersonnelClassPropertyInput]
}

input UpdateManyPersonnelClassPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonnelClassPersonnelPositionInput]
  set: [CreatePersonnelClassPersonnelPositionInput]
  upsert: [UpsertPersonnelClassPersonnelPositionInput]
  update: [UpdatePersonnelClassPersonnelPositionInput]
  delete: [FilterPersonnelClassPersonnelPositionInput]
  disconnect: [FilterPersonnelClassPersonnelPositionInput]
}

input UpdateManyPersonnelClassPersonsInput {
  connect: [FindPersonInput]
  create: [CreatePersonnelClassPersonsInput]
  set: [CreatePersonnelClassPersonsInput]
  upsert: [UpsertPersonnelClassPersonsInput]
  update: [UpdatePersonnelClassPersonsInput]
  delete: [FilterPersonInput]
  disconnect: [FilterPersonInput]
}

input UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  set: [CreatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput]
  update: [UpdatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  delete: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  disconnect: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyPersonnelPositionPersonnelPositionPropertiesInput {
  connect: [FindPersonnelPositionPropertyInput]
  create: [CreatePersonnelPositionPersonnelPositionPropertyInput]
  set: [CreatePersonnelPositionPersonnelPositionPropertyInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPropertyInput]
  update: [UpdatePersonnelPositionPersonnelPositionPropertyInput]
  delete: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  disconnect: [FilterPersonnelPositionPersonnelPositionPropertyInput]
}

input UpdateManyPersonnelPositionPersonsInput {
  connect: [FindPersonInput]
  create: [CreatePersonnelPositionPersonsInput]
  set: [CreatePersonnelPositionPersonsInput]
  upsert: [UpsertPersonnelPositionPersonsInput]
  update: [UpdatePersonnelPositionPersonsInput]
  delete: [FilterPersonInput]
  disconnect: [FilterPersonInput]
}

input UpdateManyPersonOperationsRequestPersonnelsInput {
  connect: [FindOperationsRequestPersonnelInput]
  create: [CreatePersonOperationsRequestPersonnelInput]
  set: [CreatePersonOperationsRequestPersonnelInput]
  upsert: [UpsertPersonOperationsRequestPersonnelInput]
  update: [UpdatePersonOperationsRequestPersonnelInput]
  delete: [FilterPersonOperationsRequestPersonnelInput]
  disconnect: [FilterPersonOperationsRequestPersonnelInput]
}

input UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonOperationsSegmentPersonnelSpecificationInput]
  set: [CreatePersonOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonOperationsSegmentPersonnelSpecificationInput]
  update: [UpdatePersonOperationsSegmentPersonnelSpecificationInput]
  delete: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyPersonPersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreatePersonPersonnelClassesInput]
  set: [CreatePersonPersonnelClassesInput]
  upsert: [UpsertPersonPersonnelClassesInput]
  update: [UpdatePersonPersonnelClassesInput]
  delete: [FilterPersonnelClassInput]
  disconnect: [FilterPersonnelClassInput]
}

input UpdateManyPersonPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonPersonnelPositionsInput]
  set: [CreatePersonPersonnelPositionsInput]
  upsert: [UpsertPersonPersonnelPositionsInput]
  update: [UpdatePersonPersonnelPositionsInput]
  delete: [FilterPersonnelPositionInput]
  disconnect: [FilterPersonnelPositionInput]
}

input UpdateManyPersonPersonPropertiesInput {
  connect: [FindPersonPropertyInput]
  create: [CreatePersonPersonPropertyInput]
  set: [CreatePersonPersonPropertyInput]
  upsert: [UpsertPersonPersonPropertyInput]
  update: [UpdatePersonPersonPropertyInput]
  delete: [FilterPersonPersonPropertyInput]
  disconnect: [FilterPersonPersonPropertyInput]
}

input UpdateManyPersonSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonSegmentRequirementPersonnelRequirementInput]
  set: [CreatePersonSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonSegmentRequirementPersonnelRequirementInput]
  update: [UpdatePersonSegmentRequirementPersonnelRequirementInput]
  delete: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  disconnect: [FilterPersonSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyScenarioAvailabilityTemplatesInput {
  connect: [FindAvailabilityTemplateInput]
  create: [CreateScenarioAvailabilityTemplateInput]
  set: [CreateScenarioAvailabilityTemplateInput]
  upsert: [UpsertScenarioAvailabilityTemplateInput]
  update: [UpdateScenarioAvailabilityTemplateInput]
  delete: [FilterScenarioAvailabilityTemplateInput]
  disconnect: [FilterScenarioAvailabilityTemplateInput]
}

input UpdateManyScenarioCalendarisedAvailabilityTemplateSetsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetInput]
  set: [CreateScenarioCalendarisedAvailabilityTemplateSetInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetInput]
  update: [UpdateScenarioCalendarisedAvailabilityTemplateSetInput]
  delete: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
  disconnect: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
}

input UpdateManyScenarioCalendarisedThroughputSetsInput {
  connect: [FindCalendarisedThroughputSetInput]
  create: [CreateScenarioCalendarisedThroughputSetInput]
  set: [CreateScenarioCalendarisedThroughputSetInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetInput]
  update: [UpdateScenarioCalendarisedThroughputSetInput]
  delete: [FilterScenarioCalendarisedThroughputSetInput]
  disconnect: [FilterScenarioCalendarisedThroughputSetInput]
}

input UpdateManyScenarioChangeoverSetsInput {
  connect: [FindChangeoverSetInput]
  create: [CreateScenarioChangeoverSetInput]
  set: [CreateScenarioChangeoverSetInput]
  upsert: [UpsertScenarioChangeoverSetInput]
  update: [UpdateScenarioChangeoverSetInput]
  delete: [FilterScenarioChangeoverSetInput]
  disconnect: [FilterScenarioChangeoverSetInput]
}

input UpdateManyScenarioColourSchemesInput {
  connect: [FindColourSchemeInput]
  create: [CreateScenarioColourSchemeInput]
  set: [CreateScenarioColourSchemeInput]
  upsert: [UpsertScenarioColourSchemeInput]
  update: [UpdateScenarioColourSchemeInput]
  delete: [FilterScenarioColourSchemeInput]
  disconnect: [FilterScenarioColourSchemeInput]
}

input UpdateManyScenarioConfigurableApplicationParametersInput {
  connect: [FindConfigurableApplicationParameterInput]
  create: [CreateScenarioConfigurableApplicationParameterInput]
  set: [CreateScenarioConfigurableApplicationParameterInput]
  upsert: [UpsertScenarioConfigurableApplicationParameterInput]
  update: [UpdateScenarioConfigurableApplicationParameterInput]
  delete: [FilterScenarioConfigurableApplicationParameterInput]
  disconnect: [FilterScenarioConfigurableApplicationParameterInput]
}

input UpdateManyScenarioDowntimePeriodsInput {
  connect: [FindDowntimePeriodInput]
  create: [CreateScenarioDowntimePeriodInput]
  set: [CreateScenarioDowntimePeriodInput]
  upsert: [UpsertScenarioDowntimePeriodInput]
  update: [UpdateScenarioDowntimePeriodInput]
  delete: [FilterScenarioDowntimePeriodInput]
  disconnect: [FilterScenarioDowntimePeriodInput]
}

input UpdateManyScenarioEquipmentClassesInput {
  connect: [FindEquipmentClassInput]
  create: [CreateScenarioEquipmentClassInput]
  set: [CreateScenarioEquipmentClassInput]
  upsert: [UpsertScenarioEquipmentClassInput]
  update: [UpdateScenarioEquipmentClassInput]
  delete: [FilterScenarioEquipmentClassInput]
  disconnect: [FilterScenarioEquipmentClassInput]
}

input UpdateManyScenarioEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateScenarioEquipmentInput]
  set: [CreateScenarioEquipmentInput]
  upsert: [UpsertScenarioEquipmentInput]
  update: [UpdateScenarioEquipmentInput]
  delete: [FilterScenarioEquipmentInput]
  disconnect: [FilterScenarioEquipmentInput]
}

input UpdateManyScenarioHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateScenarioHierarchyScopeInput]
  set: [CreateScenarioHierarchyScopeInput]
  upsert: [UpsertScenarioHierarchyScopeInput]
  update: [UpdateScenarioHierarchyScopeInput]
  delete: [FilterScenarioHierarchyScopeInput]
  disconnect: [FilterScenarioHierarchyScopeInput]
}

input UpdateManyScenarioMaterialDefinitionsInput {
  connect: [FindMaterialDefinitionInput]
  create: [CreateScenarioMaterialDefinitionInput]
  set: [CreateScenarioMaterialDefinitionInput]
  upsert: [UpsertScenarioMaterialDefinitionInput]
  update: [UpdateScenarioMaterialDefinitionInput]
  delete: [FilterScenarioMaterialDefinitionInput]
  disconnect: [FilterScenarioMaterialDefinitionInput]
}

input UpdateManyScenarioMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateScenarioMaterialLotInput]
  set: [CreateScenarioMaterialLotInput]
  upsert: [UpsertScenarioMaterialLotInput]
  update: [UpdateScenarioMaterialLotInput]
  delete: [FilterScenarioMaterialLotInput]
  disconnect: [FilterScenarioMaterialLotInput]
}

input UpdateManyScenarioOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateScenarioOpenPurchaseOrderInput]
  set: [CreateScenarioOpenPurchaseOrderInput]
  upsert: [UpsertScenarioOpenPurchaseOrderInput]
  update: [UpdateScenarioOpenPurchaseOrderInput]
  delete: [FilterScenarioOpenPurchaseOrderInput]
  disconnect: [FilterScenarioOpenPurchaseOrderInput]
}

input UpdateManyScenarioOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateScenarioOperationalLocationInput]
  set: [CreateScenarioOperationalLocationInput]
  upsert: [UpsertScenarioOperationalLocationInput]
  update: [UpdateScenarioOperationalLocationInput]
  delete: [FilterScenarioOperationalLocationInput]
  disconnect: [FilterScenarioOperationalLocationInput]
}

input UpdateManyScenarioOperationsDefinitionClassesInput {
  connect: [FindOperationsDefinitionClassInput]
  create: [CreateScenarioOperationsDefinitionClassInput]
  set: [CreateScenarioOperationsDefinitionClassInput]
  upsert: [UpsertScenarioOperationsDefinitionClassInput]
  update: [UpdateScenarioOperationsDefinitionClassInput]
  delete: [FilterScenarioOperationsDefinitionClassInput]
  disconnect: [FilterScenarioOperationsDefinitionClassInput]
}

input UpdateManyScenarioOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateScenarioOperationsRequestInput]
  set: [CreateScenarioOperationsRequestInput]
  upsert: [UpsertScenarioOperationsRequestInput]
  update: [UpdateScenarioOperationsRequestInput]
  delete: [FilterScenarioOperationsRequestInput]
  disconnect: [FilterScenarioOperationsRequestInput]
}

input UpdateManyScenarioOptimisationHierarchiesInput {
  connect: [FindOptimisationHierarchyInput]
  create: [CreateScenarioOptimisationHierarchyInput]
  set: [CreateScenarioOptimisationHierarchyInput]
  upsert: [UpsertScenarioOptimisationHierarchyInput]
  update: [UpdateScenarioOptimisationHierarchyInput]
  delete: [FilterScenarioOptimisationHierarchyInput]
  disconnect: [FilterScenarioOptimisationHierarchyInput]
}

input UpdateManyScenarioOptimisationPreferredSequencesInput {
  connect: [FindOptimisationPreferredSequenceInput]
  create: [CreateScenarioOptimisationPreferredSequenceInput]
  set: [CreateScenarioOptimisationPreferredSequenceInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceInput]
  update: [UpdateScenarioOptimisationPreferredSequenceInput]
  delete: [FilterScenarioOptimisationPreferredSequenceInput]
  disconnect: [FilterScenarioOptimisationPreferredSequenceInput]
}

input UpdateManyScenarioOptimisationPropertiesInput {
  connect: [FindOptimisationPropertyInput]
  create: [CreateScenarioOptimisationPropertyInput]
  set: [CreateScenarioOptimisationPropertyInput]
  upsert: [UpsertScenarioOptimisationPropertyInput]
  update: [UpdateScenarioOptimisationPropertyInput]
  delete: [FilterScenarioOptimisationPropertyInput]
  disconnect: [FilterScenarioOptimisationPropertyInput]
}

input UpdateManyScenarioOrdersInput {
  connect: [FindOrderInput]
  create: [CreateScenarioOrderInput]
  set: [CreateScenarioOrderInput]
  upsert: [UpsertScenarioOrderInput]
  update: [UpdateScenarioOrderInput]
  delete: [FilterScenarioOrderInput]
  disconnect: [FilterScenarioOrderInput]
}

input UpdateManyScenarioOrderStatusesInput {
  connect: [FindOrderStatusInput]
  create: [CreateScenarioOrderStatusInput]
  set: [CreateScenarioOrderStatusInput]
  upsert: [UpsertScenarioOrderStatusInput]
  update: [UpdateScenarioOrderStatusInput]
  delete: [FilterScenarioOrderStatusInput]
  disconnect: [FilterScenarioOrderStatusInput]
}

input UpdateManyScenarioPersonnelClassesInput {
  connect: [FindPersonnelClassInput]
  create: [CreateScenarioPersonnelClassInput]
  set: [CreateScenarioPersonnelClassInput]
  upsert: [UpsertScenarioPersonnelClassInput]
  update: [UpdateScenarioPersonnelClassInput]
  delete: [FilterScenarioPersonnelClassInput]
  disconnect: [FilterScenarioPersonnelClassInput]
}

input UpdateManyScenarioPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreateScenarioPersonnelPositionInput]
  set: [CreateScenarioPersonnelPositionInput]
  upsert: [UpsertScenarioPersonnelPositionInput]
  update: [UpdateScenarioPersonnelPositionInput]
  delete: [FilterScenarioPersonnelPositionInput]
  disconnect: [FilterScenarioPersonnelPositionInput]
}

input UpdateManyScenarioPersonsInput {
  connect: [FindPersonInput]
  create: [CreateScenarioPersonInput]
  set: [CreateScenarioPersonInput]
  upsert: [UpsertScenarioPersonInput]
  update: [UpdateScenarioPersonInput]
  delete: [FilterScenarioPersonInput]
  disconnect: [FilterScenarioPersonInput]
}

input UpdateManyScenarioTimePeriodsInput {
  connect: [FindTimePeriodInput]
  create: [CreateScenarioTimePeriodInput]
  set: [CreateScenarioTimePeriodInput]
  upsert: [UpsertScenarioTimePeriodInput]
  update: [UpdateScenarioTimePeriodInput]
  delete: [FilterScenarioTimePeriodInput]
  disconnect: [FilterScenarioTimePeriodInput]
}

input UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  set: [CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  update: [UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  delete: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  set: [CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  delete: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  disconnect: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  set: [CreateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  delete: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  disconnect: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  set: [CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  delete: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  disconnect: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementPropertiesInput {
  connect: [FindSegmentRequirementPropertyInput]
  create: [CreateSegmentRequirementSegmentRequirementPropertyInput]
  set: [CreateSegmentRequirementSegmentRequirementPropertyInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPropertyInput]
  update: [UpdateSegmentRequirementSegmentRequirementPropertyInput]
  delete: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  disconnect: [FilterSegmentRequirementSegmentRequirementPropertyInput]
}

input UpdateManySegmentRequirementSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementInput]
  set: [CreateSegmentRequirementSegmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementInput]
  delete: [FilterSegmentRequirementSegmentRequirementInput]
  disconnect: [FilterSegmentRequirementSegmentRequirementInput]
}

input UpdateMaterialDefinitionCalendarisedThroughputSetItemInput {
  data: UpdateMaterialDefinitionCalendarisedThroughputSetItemInputFields
  where: FindCalendarisedThroughputSetItemInput
}

input UpdateMaterialDefinitionCalendarisedThroughputSetItemInputFields {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateMaterialDefinitionInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  calendarisedThroughputSetItems: UpdateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateMaterialDefinitionMaterialLotInput {
  data: UpdateMaterialDefinitionMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateMaterialDefinitionMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialDefinitionMaterialPropertyInput {
  data: UpdateMaterialDefinitionMaterialPropertyInputFields
  where: FindMaterialPropertyInput
}

input UpdateMaterialDefinitionMaterialPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
}

input UpdateMaterialDefinitionOpenPurchaseOrderInput {
  data: UpdateMaterialDefinitionOpenPurchaseOrderInputFields
  where: FindOpenPurchaseOrderInput
}

input UpdateMaterialDefinitionOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  data: UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  data: UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialLotInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialLotSegmentRequirementMaterialRequirementInput {
  data: UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialPropertyInput {
  id: Int
  materialDefinition: UpsertMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
}

input UpdateOneScenarioScenarioAttributeInput {
  connect: FindScenarioAttributeInput
  create: CreateScenarioScenarioAttributeInput
  upsert: UpsertScenarioScenarioAttributeInput
  update: UpdateScenarioScenarioAttributeInput
}

input UpdateOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationalLocationInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateOperationalLocationMaterialLotInput {
  data: UpdateOperationalLocationMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateOperationalLocationMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateOperationalLocationOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdateOperationalLocationSegmentRequirementEquipmentRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
}

input UpdateOperationalLocationSegmentRequirementMaterialRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateOperationalLocationSegmentRequirementPersonnelRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
}

input UpdateOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  operationsType: String
  scenario: UpsertScenarioParentInput
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateOperationsDefinitionClassOperationsDefinitionInput {
  data: UpdateOperationsDefinitionClassOperationsDefinitionInputFields
  where: FindOperationsDefinitionInput
}

input UpdateOperationsDefinitionClassOperationsDefinitionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateOperationsDefinitionClassOrderItemInput {
  data: UpdateOperationsDefinitionClassOrderItemInputFields
  where: FindOrderItemInput
}

input UpdateOperationsDefinitionClassOrderItemInputFields {
  id: Int
  order: UpsertOrderParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOperationsDefinitionInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateOperationsDefinitionOperationsSegmentInput {
  data: UpdateOperationsDefinitionOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateOperationsDefinitionOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  equipment: UpsertEquipmentParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
}

input UpdateOperationsRequestInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfile: UpsertOperationsRequestProfileParentInput
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateOperationsRequestOperationsRequestEquipmentInput {
  data: UpdateOperationsRequestOperationsRequestEquipmentInputFields
  where: FindOperationsRequestEquipmentInput
}

input UpdateOperationsRequestOperationsRequestEquipmentInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
}

input UpdateOperationsRequestOperationsRequestPersonnelInput {
  data: UpdateOperationsRequestOperationsRequestPersonnelInputFields
  where: FindOperationsRequestPersonnelInput
}

input UpdateOperationsRequestOperationsRequestPersonnelInputFields {
  id: Int
  person: UpsertPersonParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  person: UpsertPersonParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateOperationsRequestProfileInput {
  id: Int
  orderItem: UpsertOrderItemParentInput
  startupCost: Float
  quantity: Float
  operationsRequests: UpdateManyOperationsRequestProfileOperationsRequestsInput
}

input UpdateOperationsRequestProfileOperationsRequestInput {
  data: UpdateOperationsRequestProfileOperationsRequestInputFields
  where: FindOperationsRequestInput
}

input UpdateOperationsRequestProfileOperationsRequestInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: UpsertScenarioParentInput
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateOperationsRequestSegmentRequirementInput {
  data: UpdateOperationsRequestSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateOperationsRequestSegmentRequirementInputFields {
  id: Int
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateOperationsSegmentChangeoverSetItemInput {
  data: UpdateOperationsSegmentChangeoverSetItemInputFields
  where: FindChangeoverSetItemInput
}

input UpdateOperationsSegmentChangeoverSetItemInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
}

input UpdateOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: UpsertOperationsSegmentParentInput
  toOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input UpdateOperationsSegmentDescendantInput {
  id: Int
  ascendant: UpsertOperationsSegmentParentInput
  descendant: UpsertOperationsSegmentParentInput
}

input UpdateOperationsSegmentEquipmentCapabilityInput {
  data: UpdateOperationsSegmentEquipmentCapabilityInputFields
  where: FindEquipmentCapabilityInput
}

input UpdateOperationsSegmentEquipmentCapabilityInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput {
  data: UpdateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInputFields
  where: FindCalendarisedThroughputSetItemInput
}

input UpdateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInputFields {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdateOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput {
  data: UpdateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInputFields
  where: FindOperationsRequestEquipmentInput
}

input UpdateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  equipment: UpsertEquipmentParentInput
}

input UpdateOperationsSegmentInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentOperationsRequestInput {
  data: UpdateOperationsSegmentOperationsRequestInputFields
  where: FindOperationsRequestInput
}

input UpdateOperationsSegmentOperationsRequestInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfile: UpsertOperationsRequestProfileParentInput
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields
  where: FindOperationsSegmentDependencyInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields {
  id: Int
  toOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields
  where: FindOperationsSegmentDependencyInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields {
  id: Int
  fromOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestEquipments: UpdateManyOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentsInput
}

input UpdateOperationsSegmentOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateOperationsSegmentOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: UpsertOperationsDefinitionParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  descendantOperationsSegments: UpdateManyAscendantOperationsSegmentsInput
  ascendantOperationsSegments: UpdateManyDescendantOperationsSegmentsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdateOperationsSegmentOperationsSegmentPropertyInput {
  data: UpdateOperationsSegmentOperationsSegmentPropertyInputFields
  where: FindOperationsSegmentPropertyInput
}

input UpdateOperationsSegmentOperationsSegmentPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdateOperationsSegmentPersonnelCapabilityInput {
  data: UpdateOperationsSegmentPersonnelCapabilityInputFields
  where: FindPersonnelCapabilityInput
}

input UpdateOperationsSegmentPersonnelCapabilityInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput {
  data: UpdateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInputFields
  where: FindCalendarisedThroughputSetItemInput
}

input UpdateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInputFields {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationsSegmentEquipmentSpecification: UpsertOperationsSegmentEquipmentSpecificationParentInput
}

input UpdateOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput {
  data: UpdateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInputFields
  where: FindOperationsRequestPersonnelInput
}

input UpdateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  person: UpsertPersonParentInput
}

input UpdateOperationsSegmentPropertyInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateOperationsSegmentSegmentRequirementInput {
  data: UpdateOperationsSegmentSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateOperationsSegmentSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationProperty: UpsertOptimisationPropertyParentInput
  description: String
  priority: Int
}

input UpdateOptimisationHierarchyEquipmentInput {
  data: UpdateOptimisationHierarchyEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateOptimisationHierarchyEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input UpdateOptimisationHierarchyOptimisationHierarchyAttributeInput {
  data: UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields
  where: FindOptimisationHierarchyAttributeInput
}

input UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields {
  id: Int
  optimisationProperty: UpsertOptimisationPropertyParentInput
  description: String
  priority: Int
}

input UpdateOptimisationPreferredSequenceEquipmentInput {
  data: UpdateOptimisationPreferredSequenceEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateOptimisationPreferredSequenceEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  optimisationProperty: UpsertOptimisationPropertyParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  priority: Int
}

input UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  data: UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields
  where: FindOptimisationPreferredSequenceItemInput
}

input UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields {
  id: Int
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  priority: Int
}

input UpdateOptimisationPropertyInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  optimisationPropertyValues: UpdateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input UpdateOptimisationPropertyOptimisationHierarchyAttributeInput {
  data: UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields
  where: FindOptimisationHierarchyAttributeInput
}

input UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields {
  id: Int
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  description: String
  priority: Int
}

input UpdateOptimisationPropertyOptimisationPreferredSequenceInput {
  data: UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields
  where: FindOptimisationPreferredSequenceInput
}

input UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyOptimisationPropertyValueInput {
  data: UpdateOptimisationPropertyOptimisationPropertyValueInputFields
  where: FindOptimisationPropertyValueInput
}

input UpdateOptimisationPropertyOptimisationPropertyValueInputFields {
  id: Int
  value: String
  dataType: String
  changeoverSetItemsFromValue: UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: UpdateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: UpdateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemFromValueInput {
  data: UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields
  where: FindChangeoverSetItemInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemToValueInput {
  data: UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields
  where: FindChangeoverSetItemInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateOptimisationPropertyValueColourSchemeItemInput {
  data: UpdateOptimisationPropertyValueColourSchemeItemInputFields
  where: FindColourSchemeItemInput
}

input UpdateOptimisationPropertyValueColourSchemeItemInputFields {
  id: Int
  colourScheme: UpsertColourSchemeParentInput
  red: Int
  green: Int
  blue: Int
}

input UpdateOptimisationPropertyValueInput {
  id: Int
  optimisationProperty: UpsertOptimisationPropertyParentInput
  value: String
  dataType: String
  changeoverSetItemsFromValue: UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: UpdateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: UpdateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyValueMaterialPropertyInput {
  data: UpdateOptimisationPropertyValueMaterialPropertyInputFields
  where: FindMaterialPropertyInput
}

input UpdateOptimisationPropertyValueMaterialPropertyInputFields {
  id: Int
  materialDefinition: UpsertMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  data: UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields
  where: FindOptimisationPreferredSequenceItemInput
}

input UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields {
  id: Int
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  priority: Int
}

input UpdateOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: UpsertOrderStatusParentInput
  priority: Int
  scenario: UpsertScenarioParentInput
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdateOrderItemInput {
  id: Int
  order: UpsertOrderParentInput
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOrderItemOperationsRequestProfileInput {
  data: UpdateOrderItemOperationsRequestProfileInputFields
  where: FindOperationsRequestProfileInput
}

input UpdateOrderItemOperationsRequestProfileInputFields {
  id: Int
  startupCost: Float
  quantity: Float
  operationsRequests: UpdateManyOperationsRequestProfileOperationsRequestsInput
}

input UpdateOrderOrderItemInput {
  data: UpdateOrderOrderItemInputFields
  where: FindOrderItemInput
}

input UpdateOrderOrderItemInputFields {
  id: Int
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOrderOrderPropertyInput {
  data: UpdateOrderOrderPropertyInputFields
  where: FindOrderPropertyInput
}

input UpdateOrderOrderPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdateOrderPropertyInput {
  id: Int
  order: UpsertOrderParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateOrderStatusInput {
  id: Int
  status: String
  scenario: UpsertScenarioParentInput
  orders: UpdateManyOrderStatusOrdersInput
}

input UpdateOrderStatusOrderInput {
  data: UpdateOrderStatusOrderInputFields
  where: FindOrderInput
}

input UpdateOrderStatusOrderInputFields {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: UpsertScenarioParentInput
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdateParentEquipmentsInput {
  data: UpdateParentEquipmentsInputFields
  where: FindEquipmentInput
}

input UpdateParentEquipmentsInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdatePersonDowntimePeriodInput {
  id: Int
  person: UpsertPersonParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
}

input UpdatePersonDowntimePeriodsInput {
  data: UpdatePersonDowntimePeriodsInputFields
  where: FindDowntimePeriodInput
}

input UpdatePersonDowntimePeriodsInputFields {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyDowntimePeriodEquipmentsInput
  persons: UpdateManyDowntimePeriodPersonsInput
}

input UpdatePersonInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdatePersonnelCapabilityInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdatePersonnelClassInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  persons: UpdateManyPersonnelClassPersonsInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInput {
  data: UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdatePersonnelClassPersonMemberInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  person: UpsertPersonParentInput
}

input UpdatePersonnelClassPersonnelCapabilityInput {
  data: UpdatePersonnelClassPersonnelCapabilityInputFields
  where: FindPersonnelCapabilityInput
}

input UpdatePersonnelClassPersonnelCapabilityInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdatePersonnelClassPersonnelClassPropertyInput {
  data: UpdatePersonnelClassPersonnelClassPropertyInputFields
  where: FindPersonnelClassPropertyInput
}

input UpdatePersonnelClassPersonnelClassPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonnelClassPersonnelPositionInput {
  data: UpdatePersonnelClassPersonnelPositionInputFields
  where: FindPersonnelPositionInput
}

input UpdatePersonnelClassPersonnelPositionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  persons: UpdateManyPersonnelPositionPersonsInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdatePersonnelClassPersonsInput {
  data: UpdatePersonnelClassPersonsInputFields
  where: FindPersonInput
}

input UpdatePersonnelClassPersonsInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdatePersonnelClassPropertyInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonnelClassSegmentRequirementPersonnelRequirementInput {
  data: UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdatePersonnelPositionInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  persons: UpdateManyPersonnelPositionPersonsInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdatePersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  person: UpsertPersonParentInput
}

input UpdatePersonnelPositionPersonnelPositionPropertyInput {
  data: UpdatePersonnelPositionPersonnelPositionPropertyInputFields
  where: FindPersonnelPositionPropertyInput
}

input UpdatePersonnelPositionPersonnelPositionPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonnelPositionPersonsInput {
  data: UpdatePersonnelPositionPersonsInputFields
  where: FindPersonInput
}

input UpdatePersonnelPositionPersonsInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdatePersonnelPositionPropertyInput {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonOperationsRequestPersonnelInput {
  data: UpdatePersonOperationsRequestPersonnelInputFields
  where: FindOperationsRequestPersonnelInput
}

input UpdatePersonOperationsRequestPersonnelInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  operationsSegmentPersonnelSpecification: UpsertOperationsSegmentPersonnelSpecificationParentInput
}

input UpdatePersonOperationsSegmentPersonnelSpecificationInput {
  data: UpdatePersonOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdatePersonOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSetItems: UpdateManyOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemsInput
  operationsRequestPersonnels: UpdateManyOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelsInput
}

input UpdatePersonPersonnelClassesInput {
  data: UpdatePersonPersonnelClassesInputFields
  where: FindPersonnelClassInput
}

input UpdatePersonPersonnelClassesInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  persons: UpdateManyPersonnelClassPersonsInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdatePersonPersonnelPositionsInput {
  data: UpdatePersonPersonnelPositionsInputFields
  where: FindPersonnelPositionInput
}

input UpdatePersonPersonnelPositionsInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  persons: UpdateManyPersonnelPositionPersonsInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdatePersonPersonPropertyInput {
  data: UpdatePersonPersonPropertyInputFields
  where: FindPersonPropertyInput
}

input UpdatePersonPersonPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonPropertyInput {
  id: Int
  person: UpsertPersonParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdatePersonSegmentRequirementPersonnelRequirementInput {
  data: UpdatePersonSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdatePersonSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdateScenarioAttributeInput {
  id: Int
  scenario: UpsertScenarioParentInput
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioAvailabilityTemplateInput {
  data: UpdateScenarioAvailabilityTemplateInputFields
  where: FindAvailabilityTemplateInput
}

input UpdateScenarioAvailabilityTemplateInputFields {
  id: Int
  name: String
  description: String
  availabilityTemplateItems: UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetInput {
  data: UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields
  where: FindCalendarisedAvailabilityTemplateSetInput
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems: UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input UpdateScenarioCalendarisedThroughputSetInput {
  data: UpdateScenarioCalendarisedThroughputSetInputFields
  where: FindCalendarisedThroughputSetInput
}

input UpdateScenarioCalendarisedThroughputSetInputFields {
  id: Int
  name: String
  operationsSegments: UpdateManyCalendarisedThroughputSetOperationsSegmentsInput
  calendarisedThroughputSetItems: UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
}

input UpdateScenarioChangeoverSetInput {
  data: UpdateScenarioChangeoverSetInputFields
  where: FindChangeoverSetInput
}

input UpdateScenarioChangeoverSetInputFields {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems: UpdateManyChangeoverSetChangeoverSetItemsInput
  equipments: UpdateManyChangeoverSetEquipmentsInput
}

input UpdateScenarioColourSchemeInput {
  data: UpdateScenarioColourSchemeInputFields
  where: FindColourSchemeInput
}

input UpdateScenarioColourSchemeInputFields {
  id: Int
  name: String
  colourSchemeItems: UpdateManyColourSchemeColourSchemeItemsInput
}

input UpdateScenarioConfigurableApplicationParameterInput {
  data: UpdateScenarioConfigurableApplicationParameterInputFields
  where: FindConfigurableApplicationParameterInput
}

input UpdateScenarioConfigurableApplicationParameterInputFields {
  id: Int
  name: String
  dataType: String
  valueAsString: String
}

input UpdateScenarioDowntimePeriodInput {
  data: UpdateScenarioDowntimePeriodInputFields
  where: FindDowntimePeriodInput
}

input UpdateScenarioDowntimePeriodInputFields {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipments: UpdateManyDowntimePeriodEquipmentsInput
  persons: UpdateManyDowntimePeriodPersonsInput
}

input UpdateScenarioEquipmentClassInput {
  data: UpdateScenarioEquipmentClassInputFields
  where: FindEquipmentClassInput
}

input UpdateScenarioEquipmentClassInputFields {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  equipments: UpdateManyEquipmentClassEquipmentsInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateScenarioEquipmentInput {
  data: UpdateScenarioEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateScenarioEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  childEquipments: UpdateManyParentEquipmentsInput
  parentEquipments: UpdateManyChildEquipmentsInput
  descendantEquipments: UpdateManyAscendantEquipmentsInput
  ascendantEquipments: UpdateManyDescendantEquipmentsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClasses: UpdateManyEquipmentEquipmentClassesInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  downtimePeriods: UpdateManyEquipmentDowntimePeriodsInput
}

input UpdateScenarioHierarchyScopeInput {
  data: UpdateScenarioHierarchyScopeInputFields
  where: FindHierarchyScopeInput
}

input UpdateScenarioHierarchyScopeInputFields {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  parent: UpsertHierarchyScopeParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateScenarioInput {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes: UpdateManyScenarioHierarchyScopesInput
  optimisationProperties: UpdateManyScenarioOptimisationPropertiesInput
  changeoverSets: UpdateManyScenarioChangeoverSetsInput
  availabilityTemplates: UpdateManyScenarioAvailabilityTemplatesInput
  calendarisedAvailabilityTemplateSets: UpdateManyScenarioCalendarisedAvailabilityTemplateSetsInput
  equipments: UpdateManyScenarioEquipmentsInput
  equipmentClasses: UpdateManyScenarioEquipmentClassesInput
  materialDefinitions: UpdateManyScenarioMaterialDefinitionsInput
  personnelClasses: UpdateManyScenarioPersonnelClassesInput
  personnelPositions: UpdateManyScenarioPersonnelPositionsInput
  persons: UpdateManyScenarioPersonsInput
  operationsDefinitionClasses: UpdateManyScenarioOperationsDefinitionClassesInput
  operationalLocations: UpdateManyScenarioOperationalLocationsInput
  calendarisedThroughputSets: UpdateManyScenarioCalendarisedThroughputSetsInput
  timePeriods: UpdateManyScenarioTimePeriodsInput
  orderStatuses: UpdateManyScenarioOrderStatusesInput
  orders: UpdateManyScenarioOrdersInput
  operationsRequests: UpdateManyScenarioOperationsRequestsInput
  materialLots: UpdateManyScenarioMaterialLotsInput
  openPurchaseOrders: UpdateManyScenarioOpenPurchaseOrdersInput
  configurableApplicationParameters: UpdateManyScenarioConfigurableApplicationParametersInput
  colourSchemes: UpdateManyScenarioColourSchemesInput
  downtimePeriods: UpdateManyScenarioDowntimePeriodsInput
  optimisationHierarchies: UpdateManyScenarioOptimisationHierarchiesInput
  scenarioAttribute: UpdateOneScenarioScenarioAttributeInput
  optimisationPreferredSequences: UpdateManyScenarioOptimisationPreferredSequencesInput
}

input UpdateScenarioMaterialDefinitionInput {
  data: UpdateScenarioMaterialDefinitionInputFields
  where: FindMaterialDefinitionInput
}

input UpdateScenarioMaterialDefinitionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  calendarisedThroughputSetItems: UpdateManyMaterialDefinitionCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateScenarioMaterialLotInput {
  data: UpdateScenarioMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateScenarioMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateScenarioOpenPurchaseOrderInput {
  data: UpdateScenarioOpenPurchaseOrderInputFields
  where: FindOpenPurchaseOrderInput
}

input UpdateScenarioOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

input UpdateScenarioOperationalLocationInput {
  data: UpdateScenarioOperationalLocationInputFields
  where: FindOperationalLocationInput
}

input UpdateScenarioOperationalLocationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateScenarioOperationsDefinitionClassInput {
  data: UpdateScenarioOperationsDefinitionClassInputFields
  where: FindOperationsDefinitionClassInput
}

input UpdateScenarioOperationsDefinitionClassInputFields {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  operationsType: String
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateScenarioOperationsRequestInput {
  data: UpdateScenarioOperationsRequestInputFields
  where: FindOperationsRequestInput
}

input UpdateScenarioOperationsRequestInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestProfile: UpsertOperationsRequestProfileParentInput
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateScenarioOptimisationHierarchyInput {
  data: UpdateScenarioOptimisationHierarchyInputFields
  where: FindOptimisationHierarchyInput
}

input UpdateScenarioOptimisationHierarchyInputFields {
  id: Int
  externalId: String
  description: String
  equipments: UpdateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input UpdateScenarioOptimisationPreferredSequenceInput {
  data: UpdateScenarioOptimisationPreferredSequenceInputFields
  where: FindOptimisationPreferredSequenceInput
}

input UpdateScenarioOptimisationPreferredSequenceInputFields {
  id: Int
  externalId: String
  description: String
  optimisationProperty: UpsertOptimisationPropertyParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateScenarioOptimisationPropertyInput {
  data: UpdateScenarioOptimisationPropertyInputFields
  where: FindOptimisationPropertyInput
}

input UpdateScenarioOptimisationPropertyInputFields {
  id: Int
  name: String
  optimisationPropertyValues: UpdateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input UpdateScenarioOrderInput {
  data: UpdateScenarioOrderInputFields
  where: FindOrderInput
}

input UpdateScenarioOrderInputFields {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: UpsertOrderStatusParentInput
  priority: Int
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdateScenarioOrderStatusInput {
  data: UpdateScenarioOrderStatusInputFields
  where: FindOrderStatusInput
}

input UpdateScenarioOrderStatusInputFields {
  id: Int
  status: String
  orders: UpdateManyOrderStatusOrdersInput
}

input UpdateScenarioPersonInput {
  data: UpdateScenarioPersonInputFields
  where: FindPersonInput
}

input UpdateScenarioPersonInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClasses: UpdateManyPersonPersonnelClassesInput
  personnelPositions: UpdateManyPersonPersonnelPositionsInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  downtimePeriods: UpdateManyPersonDowntimePeriodsInput
}

input UpdateScenarioPersonnelClassInput {
  data: UpdateScenarioPersonnelClassInputFields
  where: FindPersonnelClassInput
}

input UpdateScenarioPersonnelClassInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  persons: UpdateManyPersonnelClassPersonsInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdateScenarioPersonnelPositionInput {
  data: UpdateScenarioPersonnelPositionInputFields
  where: FindPersonnelPositionInput
}

input UpdateScenarioPersonnelPositionInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  persons: UpdateManyPersonnelPositionPersonsInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdateScenarioScenarioAttributeInput {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioScenarioAttributeInputFields {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioTimePeriodInput {
  data: UpdateScenarioTimePeriodInputFields
  where: FindTimePeriodInput
}

input UpdateScenarioTimePeriodInputFields {
  id: Int
  startTime: String
  endTime: String
}

input UpdateSegmentRequirementDescendantInput {
  id: Int
  ascendant: UpsertSegmentRequirementParentInput
  descendant: UpsertSegmentRequirementParentInput
}

input UpdateSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateSegmentRequirementInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  data: UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdateSegmentRequirementPropertyInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateSegmentRequirementSegmentRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  descendantSegmentRequirements: UpdateManyAscendantSegmentRequirementsInput
  ascendantSegmentRequirements: UpdateManyDescendantSegmentRequirementsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateSegmentRequirementSegmentRequirementMaterialRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdateSegmentRequirementSegmentRequirementPropertyInput {
  data: UpdateSegmentRequirementSegmentRequirementPropertyInputFields
  where: FindSegmentRequirementPropertyInput
}

input UpdateSegmentRequirementSegmentRequirementPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
}

input UpdateTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
  scenario: UpsertScenarioParentInput
}

input UpsertAscendantEquipmentsInput {
  create: CreateAscendantEquipmentsInput
  update: UpdateAscendantEquipmentsInputFields
}

input UpsertAscendantOperationsSegmentsInput {
  create: CreateAscendantOperationsSegmentsInput
  update: UpdateAscendantOperationsSegmentsInputFields
}

input UpsertAscendantSegmentRequirementsInput {
  create: CreateAscendantSegmentRequirementsInput
  update: UpdateAscendantSegmentRequirementsInputFields
}

input UpsertAvailabilityTemplateAvailabilityTemplateItemInput {
  create: CreateAvailabilityTemplateAvailabilityTemplateItemInput
  update: UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields
}

input UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  create: CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
  update: UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields
}

input UpsertAvailabilityTemplateInput {
  create: CreateAvailabilityTemplateInput
  update: UpdateAvailabilityTemplateInput
}

input UpsertAvailabilityTemplateParentInput {
  connect: FindAvailabilityTemplateInput
  create: CreateAvailabilityTemplateInput
  update: UpdateAvailabilityTemplateInput
  upsert: UpsertAvailabilityTemplateInput
}

input UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  create: CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  update: UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields
}

input UpsertCalendarisedAvailabilityTemplateSetEquipmentInput {
  create: CreateCalendarisedAvailabilityTemplateSetEquipmentInput
  update: UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields
}

input UpsertCalendarisedAvailabilityTemplateSetInput {
  create: CreateCalendarisedAvailabilityTemplateSetInput
  update: UpdateCalendarisedAvailabilityTemplateSetInput
}

input UpsertCalendarisedAvailabilityTemplateSetParentInput {
  connect: FindCalendarisedAvailabilityTemplateSetInput
  create: CreateCalendarisedAvailabilityTemplateSetInput
  update: UpdateCalendarisedAvailabilityTemplateSetInput
  upsert: UpsertCalendarisedAvailabilityTemplateSetInput
}

input UpsertCalendarisedAvailabilityTemplateSetPersonInput {
  create: CreateCalendarisedAvailabilityTemplateSetPersonInput
  update: UpdateCalendarisedAvailabilityTemplateSetPersonInputFields
}

input UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  create: CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput
  update: UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields
}

input UpsertCalendarisedThroughputSetInput {
  create: CreateCalendarisedThroughputSetInput
  update: UpdateCalendarisedThroughputSetInput
}

input UpsertCalendarisedThroughputSetOperationsSegmentInput {
  create: CreateCalendarisedThroughputSetOperationsSegmentInput
  update: UpdateCalendarisedThroughputSetOperationsSegmentInputFields
}

input UpsertCalendarisedThroughputSetParentInput {
  connect: FindCalendarisedThroughputSetInput
  create: CreateCalendarisedThroughputSetInput
  update: UpdateCalendarisedThroughputSetInput
  upsert: UpsertCalendarisedThroughputSetInput
}

input UpsertChangeoverSetChangeoverSetItemInput {
  create: CreateChangeoverSetChangeoverSetItemInput
  update: UpdateChangeoverSetChangeoverSetItemInputFields
}

input UpsertChangeoverSetEquipmentInput {
  create: CreateChangeoverSetEquipmentInput
  update: UpdateChangeoverSetEquipmentInputFields
}

input UpsertChangeoverSetInput {
  create: CreateChangeoverSetInput
  update: UpdateChangeoverSetInput
}

input UpsertChangeoverSetParentInput {
  connect: FindChangeoverSetInput
  create: CreateChangeoverSetInput
  update: UpdateChangeoverSetInput
  upsert: UpsertChangeoverSetInput
}

input UpsertChildEquipmentsInput {
  create: CreateChildEquipmentsInput
  update: UpdateChildEquipmentsInputFields
}

input UpsertColourSchemeColourSchemeItemInput {
  create: CreateColourSchemeColourSchemeItemInput
  update: UpdateColourSchemeColourSchemeItemInputFields
}

input UpsertColourSchemeInput {
  create: CreateColourSchemeInput
  update: UpdateColourSchemeInput
}

input UpsertColourSchemeParentInput {
  connect: FindColourSchemeInput
  create: CreateColourSchemeInput
  update: UpdateColourSchemeInput
  upsert: UpsertColourSchemeInput
}

input UpsertDescendantEquipmentsInput {
  create: CreateDescendantEquipmentsInput
  update: UpdateDescendantEquipmentsInputFields
}

input UpsertDescendantOperationsSegmentsInput {
  create: CreateDescendantOperationsSegmentsInput
  update: UpdateDescendantOperationsSegmentsInputFields
}

input UpsertDescendantSegmentRequirementsInput {
  create: CreateDescendantSegmentRequirementsInput
  update: UpdateDescendantSegmentRequirementsInputFields
}

input UpsertDowntimePeriodEquipmentsInput {
  create: CreateDowntimePeriodEquipmentsInput
  update: UpdateDowntimePeriodEquipmentsInputFields
}

input UpsertDowntimePeriodInput {
  create: CreateDowntimePeriodInput
  update: UpdateDowntimePeriodInput
}

input UpsertDowntimePeriodParentInput {
  connect: FindDowntimePeriodInput
  create: CreateDowntimePeriodInput
  update: UpdateDowntimePeriodInput
  upsert: UpsertDowntimePeriodInput
}

input UpsertDowntimePeriodPersonsInput {
  create: CreateDowntimePeriodPersonsInput
  update: UpdateDowntimePeriodPersonsInputFields
}

input UpsertEquipmentClassEquipmentsInput {
  create: CreateEquipmentClassEquipmentsInput
  update: UpdateEquipmentClassEquipmentsInputFields
}

input UpsertEquipmentClassInput {
  create: CreateEquipmentClassInput
  update: UpdateEquipmentClassInput
}

input UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  create: CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput
  update: UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertEquipmentClassParentInput {
  connect: FindEquipmentClassInput
  create: CreateEquipmentClassInput
  update: UpdateEquipmentClassInput
  upsert: UpsertEquipmentClassInput
}

input UpsertEquipmentDowntimePeriodsInput {
  create: CreateEquipmentDowntimePeriodsInput
  update: UpdateEquipmentDowntimePeriodsInputFields
}

input UpsertEquipmentEquipmentCapabilityInput {
  create: CreateEquipmentEquipmentCapabilityInput
  update: UpdateEquipmentEquipmentCapabilityInputFields
}

input UpsertEquipmentEquipmentClassesInput {
  create: CreateEquipmentEquipmentClassesInput
  update: UpdateEquipmentEquipmentClassesInputFields
}

input UpsertEquipmentEquipmentPropertyInput {
  create: CreateEquipmentEquipmentPropertyInput
  update: UpdateEquipmentEquipmentPropertyInputFields
}

input UpsertEquipmentHierarchyScopeInput {
  create: CreateEquipmentHierarchyScopeInput
  update: UpdateEquipmentHierarchyScopeInputFields
}

input UpsertEquipmentInput {
  create: CreateEquipmentInput
  update: UpdateEquipmentInput
}

input UpsertEquipmentOperationsRequestEquipmentInput {
  create: CreateEquipmentOperationsRequestEquipmentInput
  update: UpdateEquipmentOperationsRequestEquipmentInputFields
}

input UpsertEquipmentOperationsSegmentEquipmentSpecificationInput {
  create: CreateEquipmentOperationsSegmentEquipmentSpecificationInput
  update: UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertEquipmentParentInput {
  connect: FindEquipmentInput
  create: CreateEquipmentInput
  update: UpdateEquipmentInput
  upsert: UpsertEquipmentInput
}

input UpsertEquipmentSegmentRequirementEquipmentRequirementInput {
  create: CreateEquipmentSegmentRequirementEquipmentRequirementInput
  update: UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields
}

input UpsertHierarchyScopeEquipmentCapabilityInput {
  create: CreateHierarchyScopeEquipmentCapabilityInput
  update: UpdateHierarchyScopeEquipmentCapabilityInputFields
}

input UpsertHierarchyScopeEquipmentClassInput {
  create: CreateHierarchyScopeEquipmentClassInput
  update: UpdateHierarchyScopeEquipmentClassInputFields
}

input UpsertHierarchyScopeEquipmentInput {
  create: CreateHierarchyScopeEquipmentInput
  update: UpdateHierarchyScopeEquipmentInputFields
}

input UpsertHierarchyScopeHierarchyScopeInput {
  create: CreateHierarchyScopeHierarchyScopeInput
  update: UpdateHierarchyScopeHierarchyScopeInputFields
}

input UpsertHierarchyScopeInput {
  create: CreateHierarchyScopeInput
  update: UpdateHierarchyScopeInput
}

input UpsertHierarchyScopeMaterialDefinitionInput {
  create: CreateHierarchyScopeMaterialDefinitionInput
  update: UpdateHierarchyScopeMaterialDefinitionInputFields
}

input UpsertHierarchyScopeMaterialLotInput {
  create: CreateHierarchyScopeMaterialLotInput
  update: UpdateHierarchyScopeMaterialLotInputFields
}

input UpsertHierarchyScopeOpenPurchaseOrderInput {
  create: CreateHierarchyScopeOpenPurchaseOrderInput
  update: UpdateHierarchyScopeOpenPurchaseOrderInputFields
}

input UpsertHierarchyScopeOperationalLocationInput {
  create: CreateHierarchyScopeOperationalLocationInput
  update: UpdateHierarchyScopeOperationalLocationInputFields
}

input UpsertHierarchyScopeOperationsDefinitionClassInput {
  create: CreateHierarchyScopeOperationsDefinitionClassInput
  update: UpdateHierarchyScopeOperationsDefinitionClassInputFields
}

input UpsertHierarchyScopeOperationsDefinitionInput {
  create: CreateHierarchyScopeOperationsDefinitionInput
  update: UpdateHierarchyScopeOperationsDefinitionInputFields
}

input UpsertHierarchyScopeOperationsRequestInput {
  create: CreateHierarchyScopeOperationsRequestInput
  update: UpdateHierarchyScopeOperationsRequestInputFields
}

input UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertHierarchyScopeOperationsSegmentInput {
  create: CreateHierarchyScopeOperationsSegmentInput
  update: UpdateHierarchyScopeOperationsSegmentInputFields
}

input UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields
}

input UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertHierarchyScopeParentInput {
  connect: FindHierarchyScopeInput
  create: CreateHierarchyScopeInput
  update: UpdateHierarchyScopeInput
  upsert: UpsertHierarchyScopeInput
}

input UpsertHierarchyScopePersonInput {
  create: CreateHierarchyScopePersonInput
  update: UpdateHierarchyScopePersonInputFields
}

input UpsertHierarchyScopePersonnelCapabilityInput {
  create: CreateHierarchyScopePersonnelCapabilityInput
  update: UpdateHierarchyScopePersonnelCapabilityInputFields
}

input UpsertHierarchyScopePersonnelClassInput {
  create: CreateHierarchyScopePersonnelClassInput
  update: UpdateHierarchyScopePersonnelClassInputFields
}

input UpsertHierarchyScopePersonnelPositionInput {
  create: CreateHierarchyScopePersonnelPositionInput
  update: UpdateHierarchyScopePersonnelPositionInputFields
}

input UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementMaterialRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields
}

input UpsertMaterialDefinitionCalendarisedThroughputSetItemInput {
  create: CreateMaterialDefinitionCalendarisedThroughputSetItemInput
  update: UpdateMaterialDefinitionCalendarisedThroughputSetItemInputFields
}

input UpsertMaterialDefinitionInput {
  create: CreateMaterialDefinitionInput
  update: UpdateMaterialDefinitionInput
}

input UpsertMaterialDefinitionMaterialLotInput {
  create: CreateMaterialDefinitionMaterialLotInput
  update: UpdateMaterialDefinitionMaterialLotInputFields
}

input UpsertMaterialDefinitionMaterialPropertyInput {
  create: CreateMaterialDefinitionMaterialPropertyInput
  update: UpdateMaterialDefinitionMaterialPropertyInputFields
}

input UpsertMaterialDefinitionOpenPurchaseOrderInput {
  create: CreateMaterialDefinitionOpenPurchaseOrderInput
  update: UpdateMaterialDefinitionOpenPurchaseOrderInputFields
}

input UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  create: CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  update: UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields
}

input UpsertMaterialDefinitionParentInput {
  connect: FindMaterialDefinitionInput
  create: CreateMaterialDefinitionInput
  update: UpdateMaterialDefinitionInput
  upsert: UpsertMaterialDefinitionInput
}

input UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  create: CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput
  update: UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields
}

input UpsertMaterialLotInput {
  create: CreateMaterialLotInput
  update: UpdateMaterialLotInput
}

input UpsertMaterialLotParentInput {
  connect: FindMaterialLotInput
  create: CreateMaterialLotInput
  update: UpdateMaterialLotInput
  upsert: UpsertMaterialLotInput
}

input UpsertMaterialLotSegmentRequirementMaterialRequirementInput {
  create: CreateMaterialLotSegmentRequirementMaterialRequirementInput
  update: UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields
}

input UpsertOperationalLocationInput {
  create: CreateOperationalLocationInput
  update: UpdateOperationalLocationInput
}

input UpsertOperationalLocationMaterialLotInput {
  create: CreateOperationalLocationMaterialLotInput
  update: UpdateOperationalLocationMaterialLotInputFields
}

input UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertOperationalLocationParentInput {
  connect: FindOperationalLocationInput
  create: CreateOperationalLocationInput
  update: UpdateOperationalLocationInput
  upsert: UpsertOperationalLocationInput
}

input UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput {
  create: CreateOperationalLocationSegmentRequirementEquipmentRequirementInput
  update: UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields
}

input UpsertOperationalLocationSegmentRequirementMaterialRequirementInput {
  create: CreateOperationalLocationSegmentRequirementMaterialRequirementInput
  update: UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields
}

input UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput {
  create: CreateOperationalLocationSegmentRequirementPersonnelRequirementInput
  update: UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields
}

input UpsertOperationsDefinitionClassInput {
  create: CreateOperationsDefinitionClassInput
  update: UpdateOperationsDefinitionClassInput
}

input UpsertOperationsDefinitionClassOperationsDefinitionInput {
  create: CreateOperationsDefinitionClassOperationsDefinitionInput
  update: UpdateOperationsDefinitionClassOperationsDefinitionInputFields
}

input UpsertOperationsDefinitionClassOrderItemInput {
  create: CreateOperationsDefinitionClassOrderItemInput
  update: UpdateOperationsDefinitionClassOrderItemInputFields
}

input UpsertOperationsDefinitionClassParentInput {
  connect: FindOperationsDefinitionClassInput
  create: CreateOperationsDefinitionClassInput
  update: UpdateOperationsDefinitionClassInput
  upsert: UpsertOperationsDefinitionClassInput
}

input UpsertOperationsDefinitionInput {
  create: CreateOperationsDefinitionInput
  update: UpdateOperationsDefinitionInput
}

input UpsertOperationsDefinitionOperationsSegmentInput {
  create: CreateOperationsDefinitionOperationsSegmentInput
  update: UpdateOperationsDefinitionOperationsSegmentInputFields
}

input UpsertOperationsDefinitionParentInput {
  connect: FindOperationsDefinitionInput
  create: CreateOperationsDefinitionInput
  update: UpdateOperationsDefinitionInput
  upsert: UpsertOperationsDefinitionInput
}

input UpsertOperationsRequestInput {
  create: CreateOperationsRequestInput
  update: UpdateOperationsRequestInput
}

input UpsertOperationsRequestOperationsRequestEquipmentInput {
  create: CreateOperationsRequestOperationsRequestEquipmentInput
  update: UpdateOperationsRequestOperationsRequestEquipmentInputFields
}

input UpsertOperationsRequestOperationsRequestPersonnelInput {
  create: CreateOperationsRequestOperationsRequestPersonnelInput
  update: UpdateOperationsRequestOperationsRequestPersonnelInputFields
}

input UpsertOperationsRequestParentInput {
  connect: FindOperationsRequestInput
  create: CreateOperationsRequestInput
  update: UpdateOperationsRequestInput
  upsert: UpsertOperationsRequestInput
}

input UpsertOperationsRequestProfileInput {
  create: CreateOperationsRequestProfileInput
  update: UpdateOperationsRequestProfileInput
}

input UpsertOperationsRequestProfileOperationsRequestInput {
  create: CreateOperationsRequestProfileOperationsRequestInput
  update: UpdateOperationsRequestProfileOperationsRequestInputFields
}

input UpsertOperationsRequestProfileParentInput {
  connect: FindOperationsRequestProfileInput
  create: CreateOperationsRequestProfileInput
  update: UpdateOperationsRequestProfileInput
  upsert: UpsertOperationsRequestProfileInput
}

input UpsertOperationsRequestSegmentRequirementInput {
  create: CreateOperationsRequestSegmentRequirementInput
  update: UpdateOperationsRequestSegmentRequirementInputFields
}

input UpsertOperationsSegmentChangeoverSetItemInput {
  create: CreateOperationsSegmentChangeoverSetItemInput
  update: UpdateOperationsSegmentChangeoverSetItemInputFields
}

input UpsertOperationsSegmentEquipmentCapabilityInput {
  create: CreateOperationsSegmentEquipmentCapabilityInput
  update: UpdateOperationsSegmentEquipmentCapabilityInputFields
}

input UpsertOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput {
  create: CreateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInput
  update: UpdateOperationsSegmentEquipmentSpecificationCalendarisedThroughputSetItemInputFields
}

input UpsertOperationsSegmentEquipmentSpecificationInput {
  create: CreateOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationsSegmentEquipmentSpecificationInput
}

input UpsertOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput {
  create: CreateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInput
  update: UpdateOperationsSegmentEquipmentSpecificationOperationsRequestEquipmentInputFields
}

input UpsertOperationsSegmentEquipmentSpecificationParentInput {
  connect: FindOperationsSegmentEquipmentSpecificationInput
  create: CreateOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationsSegmentEquipmentSpecificationInput
  upsert: UpsertOperationsSegmentEquipmentSpecificationInput
}

input UpsertOperationsSegmentInput {
  create: CreateOperationsSegmentInput
  update: UpdateOperationsSegmentInput
}

input UpsertOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationInput
}

input UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationsSegmentMaterialSpecificationParentInput {
  connect: FindOperationsSegmentMaterialSpecificationInput
  create: CreateOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationInput
  upsert: UpsertOperationsSegmentMaterialSpecificationInput
}

input UpsertOperationsSegmentOperationsRequestInput {
  create: CreateOperationsSegmentOperationsRequestInput
  update: UpdateOperationsSegmentOperationsRequestInputFields
}

input UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentPropertyInput {
  create: CreateOperationsSegmentOperationsSegmentPropertyInput
  update: UpdateOperationsSegmentOperationsSegmentPropertyInputFields
}

input UpsertOperationsSegmentParentInput {
  connect: FindOperationsSegmentInput
  create: CreateOperationsSegmentInput
  update: UpdateOperationsSegmentInput
  upsert: UpsertOperationsSegmentInput
}

input UpsertOperationsSegmentPersonnelCapabilityInput {
  create: CreateOperationsSegmentPersonnelCapabilityInput
  update: UpdateOperationsSegmentPersonnelCapabilityInputFields
}

input UpsertOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput {
  create: CreateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInput
  update: UpdateOperationsSegmentPersonnelSpecificationCalendarisedThroughputSetItemInputFields
}

input UpsertOperationsSegmentPersonnelSpecificationInput {
  create: CreateOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationsSegmentPersonnelSpecificationInput
}

input UpsertOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput {
  create: CreateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInput
  update: UpdateOperationsSegmentPersonnelSpecificationOperationsRequestPersonnelInputFields
}

input UpsertOperationsSegmentPersonnelSpecificationParentInput {
  connect: FindOperationsSegmentPersonnelSpecificationInput
  create: CreateOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationsSegmentPersonnelSpecificationInput
  upsert: UpsertOperationsSegmentPersonnelSpecificationInput
}

input UpsertOperationsSegmentSegmentRequirementInput {
  create: CreateOperationsSegmentSegmentRequirementInput
  update: UpdateOperationsSegmentSegmentRequirementInputFields
}

input UpsertOptimisationHierarchyEquipmentInput {
  create: CreateOptimisationHierarchyEquipmentInput
  update: UpdateOptimisationHierarchyEquipmentInputFields
}

input UpsertOptimisationHierarchyInput {
  create: CreateOptimisationHierarchyInput
  update: UpdateOptimisationHierarchyInput
}

input UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput {
  create: CreateOptimisationHierarchyOptimisationHierarchyAttributeInput
  update: UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields
}

input UpsertOptimisationHierarchyParentInput {
  connect: FindOptimisationHierarchyInput
  create: CreateOptimisationHierarchyInput
  update: UpdateOptimisationHierarchyInput
  upsert: UpsertOptimisationHierarchyInput
}

input UpsertOptimisationPreferredSequenceEquipmentInput {
  create: CreateOptimisationPreferredSequenceEquipmentInput
  update: UpdateOptimisationPreferredSequenceEquipmentInputFields
}

input UpsertOptimisationPreferredSequenceInput {
  create: CreateOptimisationPreferredSequenceInput
  update: UpdateOptimisationPreferredSequenceInput
}

input UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  create: CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
  update: UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields
}

input UpsertOptimisationPreferredSequenceParentInput {
  connect: FindOptimisationPreferredSequenceInput
  create: CreateOptimisationPreferredSequenceInput
  update: UpdateOptimisationPreferredSequenceInput
  upsert: UpsertOptimisationPreferredSequenceInput
}

input UpsertOptimisationPropertyInput {
  create: CreateOptimisationPropertyInput
  update: UpdateOptimisationPropertyInput
}

input UpsertOptimisationPropertyOptimisationHierarchyAttributeInput {
  create: CreateOptimisationPropertyOptimisationHierarchyAttributeInput
  update: UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields
}

input UpsertOptimisationPropertyOptimisationPreferredSequenceInput {
  create: CreateOptimisationPropertyOptimisationPreferredSequenceInput
  update: UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields
}

input UpsertOptimisationPropertyOptimisationPropertyValueInput {
  create: CreateOptimisationPropertyOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyOptimisationPropertyValueInputFields
}

input UpsertOptimisationPropertyParentInput {
  connect: FindOptimisationPropertyInput
  create: CreateOptimisationPropertyInput
  update: UpdateOptimisationPropertyInput
  upsert: UpsertOptimisationPropertyInput
}

input UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput {
  create: CreateOptimisationPropertyValueChangeoverSetItemFromValueInput
  update: UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields
}

input UpsertOptimisationPropertyValueChangeoverSetItemToValueInput {
  create: CreateOptimisationPropertyValueChangeoverSetItemToValueInput
  update: UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields
}

input UpsertOptimisationPropertyValueColourSchemeItemInput {
  create: CreateOptimisationPropertyValueColourSchemeItemInput
  update: UpdateOptimisationPropertyValueColourSchemeItemInputFields
}

input UpsertOptimisationPropertyValueInput {
  create: CreateOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyValueInput
}

input UpsertOptimisationPropertyValueMaterialPropertyInput {
  create: CreateOptimisationPropertyValueMaterialPropertyInput
  update: UpdateOptimisationPropertyValueMaterialPropertyInputFields
}

input UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  create: CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput
  update: UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields
}

input UpsertOptimisationPropertyValueParentInput {
  connect: FindOptimisationPropertyValueInput
  create: CreateOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyValueInput
  upsert: UpsertOptimisationPropertyValueInput
}

input UpsertOrderInput {
  create: CreateOrderInput
  update: UpdateOrderInput
}

input UpsertOrderItemInput {
  create: CreateOrderItemInput
  update: UpdateOrderItemInput
}

input UpsertOrderItemOperationsRequestProfileInput {
  create: CreateOrderItemOperationsRequestProfileInput
  update: UpdateOrderItemOperationsRequestProfileInputFields
}

input UpsertOrderItemParentInput {
  connect: FindOrderItemInput
  create: CreateOrderItemInput
  update: UpdateOrderItemInput
  upsert: UpsertOrderItemInput
}

input UpsertOrderOrderItemInput {
  create: CreateOrderOrderItemInput
  update: UpdateOrderOrderItemInputFields
}

input UpsertOrderOrderPropertyInput {
  create: CreateOrderOrderPropertyInput
  update: UpdateOrderOrderPropertyInputFields
}

input UpsertOrderParentInput {
  connect: FindOrderInput
  create: CreateOrderInput
  update: UpdateOrderInput
  upsert: UpsertOrderInput
}

input UpsertOrderStatusInput {
  create: CreateOrderStatusInput
  update: UpdateOrderStatusInput
}

input UpsertOrderStatusOrderInput {
  create: CreateOrderStatusOrderInput
  update: UpdateOrderStatusOrderInputFields
}

input UpsertOrderStatusParentInput {
  connect: FindOrderStatusInput
  create: CreateOrderStatusInput
  update: UpdateOrderStatusInput
  upsert: UpsertOrderStatusInput
}

input UpsertParentEquipmentsInput {
  create: CreateParentEquipmentsInput
  update: UpdateParentEquipmentsInputFields
}

input UpsertPersonDowntimePeriodsInput {
  create: CreatePersonDowntimePeriodsInput
  update: UpdatePersonDowntimePeriodsInputFields
}

input UpsertPersonInput {
  create: CreatePersonInput
  update: UpdatePersonInput
}

input UpsertPersonnelClassInput {
  create: CreatePersonnelClassInput
  update: UpdatePersonnelClassInput
}

input UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput {
  create: CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput
  update: UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertPersonnelClassParentInput {
  connect: FindPersonnelClassInput
  create: CreatePersonnelClassInput
  update: UpdatePersonnelClassInput
  upsert: UpsertPersonnelClassInput
}

input UpsertPersonnelClassPersonnelCapabilityInput {
  create: CreatePersonnelClassPersonnelCapabilityInput
  update: UpdatePersonnelClassPersonnelCapabilityInputFields
}

input UpsertPersonnelClassPersonnelClassPropertyInput {
  create: CreatePersonnelClassPersonnelClassPropertyInput
  update: UpdatePersonnelClassPersonnelClassPropertyInputFields
}

input UpsertPersonnelClassPersonnelPositionInput {
  create: CreatePersonnelClassPersonnelPositionInput
  update: UpdatePersonnelClassPersonnelPositionInputFields
}

input UpsertPersonnelClassPersonsInput {
  create: CreatePersonnelClassPersonsInput
  update: UpdatePersonnelClassPersonsInputFields
}

input UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput {
  create: CreatePersonnelClassSegmentRequirementPersonnelRequirementInput
  update: UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields
}

input UpsertPersonnelPositionInput {
  create: CreatePersonnelPositionInput
  update: UpdatePersonnelPositionInput
}

input UpsertPersonnelPositionParentInput {
  connect: FindPersonnelPositionInput
  create: CreatePersonnelPositionInput
  update: UpdatePersonnelPositionInput
  upsert: UpsertPersonnelPositionInput
}

input UpsertPersonnelPositionPersonnelPositionPropertyInput {
  create: CreatePersonnelPositionPersonnelPositionPropertyInput
  update: UpdatePersonnelPositionPersonnelPositionPropertyInputFields
}

input UpsertPersonnelPositionPersonsInput {
  create: CreatePersonnelPositionPersonsInput
  update: UpdatePersonnelPositionPersonsInputFields
}

input UpsertPersonOperationsRequestPersonnelInput {
  create: CreatePersonOperationsRequestPersonnelInput
  update: UpdatePersonOperationsRequestPersonnelInputFields
}

input UpsertPersonOperationsSegmentPersonnelSpecificationInput {
  create: CreatePersonOperationsSegmentPersonnelSpecificationInput
  update: UpdatePersonOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertPersonParentInput {
  connect: FindPersonInput
  create: CreatePersonInput
  update: UpdatePersonInput
  upsert: UpsertPersonInput
}

input UpsertPersonPersonnelClassesInput {
  create: CreatePersonPersonnelClassesInput
  update: UpdatePersonPersonnelClassesInputFields
}

input UpsertPersonPersonnelPositionsInput {
  create: CreatePersonPersonnelPositionsInput
  update: UpdatePersonPersonnelPositionsInputFields
}

input UpsertPersonPersonPropertyInput {
  create: CreatePersonPersonPropertyInput
  update: UpdatePersonPersonPropertyInputFields
}

input UpsertPersonSegmentRequirementPersonnelRequirementInput {
  create: CreatePersonSegmentRequirementPersonnelRequirementInput
  update: UpdatePersonSegmentRequirementPersonnelRequirementInputFields
}

input UpsertScenarioAvailabilityTemplateInput {
  create: CreateScenarioAvailabilityTemplateInput
  update: UpdateScenarioAvailabilityTemplateInputFields
}

input UpsertScenarioCalendarisedAvailabilityTemplateSetInput {
  create: CreateScenarioCalendarisedAvailabilityTemplateSetInput
  update: UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields
}

input UpsertScenarioCalendarisedThroughputSetInput {
  create: CreateScenarioCalendarisedThroughputSetInput
  update: UpdateScenarioCalendarisedThroughputSetInputFields
}

input UpsertScenarioChangeoverSetInput {
  create: CreateScenarioChangeoverSetInput
  update: UpdateScenarioChangeoverSetInputFields
}

input UpsertScenarioColourSchemeInput {
  create: CreateScenarioColourSchemeInput
  update: UpdateScenarioColourSchemeInputFields
}

input UpsertScenarioConfigurableApplicationParameterInput {
  create: CreateScenarioConfigurableApplicationParameterInput
  update: UpdateScenarioConfigurableApplicationParameterInputFields
}

input UpsertScenarioDowntimePeriodInput {
  create: CreateScenarioDowntimePeriodInput
  update: UpdateScenarioDowntimePeriodInputFields
}

input UpsertScenarioEquipmentClassInput {
  create: CreateScenarioEquipmentClassInput
  update: UpdateScenarioEquipmentClassInputFields
}

input UpsertScenarioEquipmentInput {
  create: CreateScenarioEquipmentInput
  update: UpdateScenarioEquipmentInputFields
}

input UpsertScenarioHierarchyScopeInput {
  create: CreateScenarioHierarchyScopeInput
  update: UpdateScenarioHierarchyScopeInputFields
}

input UpsertScenarioInput {
  create: CreateScenarioInput
  update: UpdateScenarioInput
}

input UpsertScenarioMaterialDefinitionInput {
  create: CreateScenarioMaterialDefinitionInput
  update: UpdateScenarioMaterialDefinitionInputFields
}

input UpsertScenarioMaterialLotInput {
  create: CreateScenarioMaterialLotInput
  update: UpdateScenarioMaterialLotInputFields
}

input UpsertScenarioOpenPurchaseOrderInput {
  create: CreateScenarioOpenPurchaseOrderInput
  update: UpdateScenarioOpenPurchaseOrderInputFields
}

input UpsertScenarioOperationalLocationInput {
  create: CreateScenarioOperationalLocationInput
  update: UpdateScenarioOperationalLocationInputFields
}

input UpsertScenarioOperationsDefinitionClassInput {
  create: CreateScenarioOperationsDefinitionClassInput
  update: UpdateScenarioOperationsDefinitionClassInputFields
}

input UpsertScenarioOperationsRequestInput {
  create: CreateScenarioOperationsRequestInput
  update: UpdateScenarioOperationsRequestInputFields
}

input UpsertScenarioOptimisationHierarchyInput {
  create: CreateScenarioOptimisationHierarchyInput
  update: UpdateScenarioOptimisationHierarchyInputFields
}

input UpsertScenarioOptimisationPreferredSequenceInput {
  create: CreateScenarioOptimisationPreferredSequenceInput
  update: UpdateScenarioOptimisationPreferredSequenceInputFields
}

input UpsertScenarioOptimisationPropertyInput {
  create: CreateScenarioOptimisationPropertyInput
  update: UpdateScenarioOptimisationPropertyInputFields
}

input UpsertScenarioOrderInput {
  create: CreateScenarioOrderInput
  update: UpdateScenarioOrderInputFields
}

input UpsertScenarioOrderStatusInput {
  create: CreateScenarioOrderStatusInput
  update: UpdateScenarioOrderStatusInputFields
}

input UpsertScenarioParentInput {
  connect: FindScenarioInput
  create: CreateScenarioInput
  update: UpdateScenarioInput
  upsert: UpsertScenarioInput
}

input UpsertScenarioPersonInput {
  create: CreateScenarioPersonInput
  update: UpdateScenarioPersonInputFields
}

input UpsertScenarioPersonnelClassInput {
  create: CreateScenarioPersonnelClassInput
  update: UpdateScenarioPersonnelClassInputFields
}

input UpsertScenarioPersonnelPositionInput {
  create: CreateScenarioPersonnelPositionInput
  update: UpdateScenarioPersonnelPositionInputFields
}

input UpsertScenarioScenarioAttributeInput {
  create: CreateScenarioScenarioAttributeInput
  update: UpdateScenarioScenarioAttributeInputFields
}

input UpsertScenarioTimePeriodInput {
  create: CreateScenarioTimePeriodInput
  update: UpdateScenarioTimePeriodInputFields
}

input UpsertSegmentRequirementInput {
  create: CreateSegmentRequirementInput
  update: UpdateSegmentRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementParentInput {
  connect: FindSegmentRequirementMaterialRequirementInput
  create: CreateSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementInput
  upsert: UpsertSegmentRequirementMaterialRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields
}

input UpsertSegmentRequirementParentInput {
  connect: FindSegmentRequirementInput
  create: CreateSegmentRequirementInput
  update: UpdateSegmentRequirementInput
  upsert: UpsertSegmentRequirementInput
}

input UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementPropertyInput {
  create: CreateSegmentRequirementSegmentRequirementPropertyInput
  update: UpdateSegmentRequirementSegmentRequirementPropertyInputFields
}
