type AvailabilityTemplate {
  id: Int
  name: String
  description: String
  scenario: Scenario
  availabilityTemplateItems(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateAvailabilityTemplateItem]
  calendarisedAvailabilityTemplateSetItems(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem]
}

type AvailabilityTemplateAvailabilityTemplateItem {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: Scenario
}

type AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem {
  id: Int
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  startTime: String
  endTime: String
  scenario: Scenario
}

type AvailabilityTemplateConnection {
  pageInfo: PageInfo
  edges: [AvailabilityTemplateEdge]
}

type AvailabilityTemplateEdge {
  node: AvailabilityTemplate
  cursor: String
}

type AvailabilityTemplateItem {
  id: Int
  availabilityTemplate: AvailabilityTemplate
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: Scenario
}

type AvailabilityTemplateItemConnection {
  pageInfo: PageInfo
  edges: [AvailabilityTemplateItemEdge]
}

type AvailabilityTemplateItemEdge {
  node: AvailabilityTemplateItem
  cursor: String
}

type CalendarisedAvailabilityTemplateSet {
  id: Int
  name: String
  scenario: Scenario
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem]
  equipments(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetEquipment]
  persons(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetPerson]
}

type CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: AvailabilityTemplate
  scenario: Scenario
}

type CalendarisedAvailabilityTemplateSetConnection {
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetEdge]
}

type CalendarisedAvailabilityTemplateSetEdge {
  node: CalendarisedAvailabilityTemplateSet
  cursor: String
}

type CalendarisedAvailabilityTemplateSetEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type CalendarisedAvailabilityTemplateSetItem {
  id: Int
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  startTime: String
  endTime: String
  availabilityTemplate: AvailabilityTemplate
  scenario: Scenario
}

type CalendarisedAvailabilityTemplateSetItemConnection {
  pageInfo: PageInfo
  edges: [CalendarisedAvailabilityTemplateSetItemEdge]
}

type CalendarisedAvailabilityTemplateSetItemEdge {
  node: CalendarisedAvailabilityTemplateSetItem
  cursor: String
}

type CalendarisedAvailabilityTemplateSetPerson {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personnelClassPersonMembers(where: FilterPersonPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelClassPersonMember]
  personnelPositionPersonMembers(where: FilterPersonPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelPositionPersonMember]
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  personDowntimePeriods(where: FilterPersonPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonDowntimePeriod]
}

type CalendarisedThroughputSet {
  id: Int
  name: String
  scenario: Scenario
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetCalendarisedThroughputSetItem]
  operationsSegmentMaterialSpecifications(where: FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetOperationsSegmentMaterialSpecification]
}

type CalendarisedThroughputSetCalendarisedThroughputSetItem {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: Scenario
}

type CalendarisedThroughputSetConnection {
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetEdge]
}

type CalendarisedThroughputSetEdge {
  node: CalendarisedThroughputSet
  cursor: String
}

type CalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: Scenario
}

type CalendarisedThroughputSetItemConnection {
  pageInfo: PageInfo
  edges: [CalendarisedThroughputSetItemEdge]
}

type CalendarisedThroughputSetItemEdge {
  node: CalendarisedThroughputSetItem
  cursor: String
}

type CalendarisedThroughputSetOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type ChangeoverSet {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: Scenario
  changeoverSetItems(where: FilterChangeoverSetChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetChangeoverSetItem]
  equipments(where: FilterChangeoverSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetEquipment]
}

type ChangeoverSetChangeoverSetItem {
  id: Int
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: Scenario
  operationsSegment: OperationsSegment
}

type ChangeoverSetConnection {
  pageInfo: PageInfo
  edges: [ChangeoverSetEdge]
}

type ChangeoverSetEdge {
  node: ChangeoverSet
  cursor: String
}

type ChangeoverSetEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type ChangeoverSetItem {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: Scenario
  operationsSegment: OperationsSegment
}

type ChangeoverSetItemConnection {
  pageInfo: PageInfo
  edges: [ChangeoverSetItemEdge]
}

type ChangeoverSetItemEdge {
  node: ChangeoverSetItem
  cursor: String
}

type ColourScheme {
  id: Int
  name: String
  scenario: Scenario
  colourSchemeItems(where: FilterColourSchemeColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeColourSchemeItem]
}

type ColourSchemeColourSchemeItem {
  id: Int
  propertyValue: OptimisationPropertyValue
  red: Int
  green: Int
  blue: Int
  scenario: Scenario
}

type ColourSchemeConnection {
  pageInfo: PageInfo
  edges: [ColourSchemeEdge]
}

type ColourSchemeEdge {
  node: ColourScheme
  cursor: String
}

type ColourSchemeItem {
  id: Int
  colourScheme: ColourScheme
  propertyValue: OptimisationPropertyValue
  red: Int
  green: Int
  blue: Int
  scenario: Scenario
}

type ColourSchemeItemConnection {
  pageInfo: PageInfo
  edges: [ColourSchemeItemEdge]
}

type ColourSchemeItemEdge {
  node: ColourSchemeItem
  cursor: String
}

type ConfigurableApplicationParameter {
  id: Int
  name: String
  dataType: String
  valueAsString: String
  scenario: Scenario
}

type ConfigurableApplicationParameterConnection {
  pageInfo: PageInfo
  edges: [ConfigurableApplicationParameterEdge]
}

type ConfigurableApplicationParameterEdge {
  node: ConfigurableApplicationParameter
  cursor: String
}

input ConnectAvailabilityTemplateAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  scenario: FindScenarioInput
}

input ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  scenario: FindScenarioInput
}

input ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  scenario: FindScenarioInput
}

input ConnectChangeoverSetChangeoverSetItemInput {
  id: Int
  fromValue: FindOptimisationPropertyValueInput
  toValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input ConnectColourSchemeColourSchemeItemInput {
  id: Int
  propertyValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input ConnectDowntimePeriodEquipmentDowntimePeriodInput {
  id: Int
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectDowntimePeriodPersonDowntimePeriodInput {
  id: Int
  person: FindPersonInput
  scenario: FindScenarioInput
}

input ConnectEquipmentClassEquipmentClassEquipmentMemberInput {
  id: Int
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentChildChildInput {
  id: Int
  parent: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentChildParentInput {
  id: Int
  child: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: FindEquipmentClassInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentDescendantAscendantInput {
  id: Int
  descendant: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentDescendantDescendantInput {
  id: Int
  ascendant: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentDowntimePeriodInput {
  id: Int
  downtimePeriod: FindDowntimePeriodInput
  scenario: FindScenarioInput
}

input ConnectEquipmentEquipmentPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectEquipmentOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  scenario: FindScenarioInput
}

input ConnectEquipmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  equipmentClass: FindEquipmentClassInput
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeEquipmentCapabilityInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeEquipmentClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeEquipmentInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput {
  id: Int
  descendant: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput {
  id: Int
  ascendant: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeHierarchyScopeInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeMaterialDefinitionInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeMaterialLotInput {
  id: Int
  externalId: String
  date: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeOpenPurchaseOrderInput {
  id: Int
  externalId: String
  date: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeOperationsDefinitionClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeOperationsDefinitionInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input ConnectHierarchyScopeOperationsSegmentInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopePersonInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopePersonnelCapabilityInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopePersonnelClassInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopePersonnelPositionInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectMaterialDefinitionMaterialPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsDefinitionClassOperationsDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input ConnectOperationsDefinitionClassOrderItemInput {
  id: Int
  order: FindOrderInput
  scenario: FindScenarioInput
}

input ConnectOperationsRequestOperationsRequestEquipmentInput {
  id: Int
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsRequestOperationsRequestPersonnelInput {
  id: Int
  person: FindPersonInput
  scenario: FindScenarioInput
}

input ConnectOperationsRequestOperationsRequestProfileInput {
  id: Int
  orderItem: FindOrderItemInput
  scenario: FindScenarioInput
}

input ConnectOperationsRequestSegmentRequirementInput {
  id: Int
  externalId: String
  parentSegmentRequirement: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsRequestInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  id: Int
  toOperationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  id: Int
  fromOperationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput {
  id: Int
  descendant: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput {
  id: Int
  ascendant: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  id: Int
  materialDefinition: FindMaterialDefinitionInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  id: Int
  person: FindPersonInput
  personnelClass: FindPersonnelClassInput
  scenario: FindScenarioInput
}

input ConnectOperationsSegmentOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput {
  id: Int
  priority: Int
  optimisationProperty: FindOptimisationPropertyInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPropertyValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyOptimisationHierarchyAttributeInput {
  id: Int
  priority: Int
  optimisationHierarchy: FindOptimisationHierarchyInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyOptimisationPropertyValueInput {
  id: Int
  value: String
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput {
  id: Int
  changeoverSet: FindChangeoverSetInput
  toValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyValueChangeoverSetItemToValueInput {
  id: Int
  changeoverSet: FindChangeoverSetInput
  fromValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyValueColourSchemeItemInput {
  id: Int
  colourScheme: FindColourSchemeInput
  scenario: FindScenarioInput
}

input ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: FindOptimisationPreferredSequenceInput
  scenario: FindScenarioInput
}

input ConnectOrderItemOperationsRequestProfileInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  scenario: FindScenarioInput
}

input ConnectOrderOrderItemInput {
  id: Int
  operationsDefinitionClass: FindOperationsDefinitionClassInput
  scenario: FindScenarioInput
}

input ConnectOrderOrderPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  person: FindPersonInput
  scenario: FindScenarioInput
}

input ConnectPersonnelClassPersonnelClassPersonMemberInput {
  id: Int
  person: FindPersonInput
  scenario: FindScenarioInput
}

input ConnectPersonnelClassPersonnelClassPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectPersonnelPositionPersonnelPositionPersonMemberInput {
  id: Int
  person: FindPersonInput
  scenario: FindScenarioInput
}

input ConnectPersonnelPositionPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectPersonOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  scenario: FindScenarioInput
}

input ConnectPersonOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  personnelClass: FindPersonnelClassInput
  scenario: FindScenarioInput
}

input ConnectPersonPersonDowntimePeriodInput {
  id: Int
  downtimePeriod: FindDowntimePeriodInput
  scenario: FindScenarioInput
}

input ConnectPersonPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: FindPersonnelClassInput
  scenario: FindScenarioInput
}

input ConnectPersonPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: FindPersonnelPositionInput
  scenario: FindScenarioInput
}

input ConnectPersonPersonPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input ConnectScenarioAvailabilityTemplateInput {
  id: Int
  name: String
}

input ConnectScenarioAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  availabilityTemplate: FindAvailabilityTemplateInput
}

input ConnectScenarioCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
}

input ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  calendarisedAvailabilityTemplateSet: FindCalendarisedAvailabilityTemplateSetInput
}

input ConnectScenarioCalendarisedThroughputSetInput {
  id: Int
  name: String
}

input ConnectScenarioCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  calendarisedThroughputSet: FindCalendarisedThroughputSetInput
}

input ConnectScenarioChangeoverSetInput {
  id: Int
  name: String
}

input ConnectScenarioChangeoverSetItemInput {
  id: Int
  changeoverSet: FindChangeoverSetInput
  fromValue: FindOptimisationPropertyValueInput
  toValue: FindOptimisationPropertyValueInput
}

input ConnectScenarioColourSchemeInput {
  id: Int
  name: String
}

input ConnectScenarioColourSchemeItemInput {
  id: Int
  colourScheme: FindColourSchemeInput
  propertyValue: FindOptimisationPropertyValueInput
}

input ConnectScenarioConfigurableApplicationParameterInput {
  id: Int
  name: String
}

input ConnectScenarioDowntimePeriodInput {
  id: Int
  externalId: String
  startTime: String
  endTime: String
  percentageAvailability: Float
}

input ConnectScenarioEquipmentCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioEquipmentChildInput {
  id: Int
  parent: FindEquipmentInput
  child: FindEquipmentInput
}

input ConnectScenarioEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
}

input ConnectScenarioEquipmentClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioEquipmentDescendantInput {
  id: Int
  ascendant: FindEquipmentInput
  descendant: FindEquipmentInput
}

input ConnectScenarioEquipmentDowntimePeriodInput {
  id: Int
  equipment: FindEquipmentInput
  downtimePeriod: FindDowntimePeriodInput
}

input ConnectScenarioEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioEquipmentPropertyInput {
  id: Int
  externalId: String
  equipment: FindEquipmentInput
}

input ConnectScenarioHierarchyScopeDescendantInput {
  id: Int
  ascendant: FindHierarchyScopeInput
  descendant: FindHierarchyScopeInput
}

input ConnectScenarioHierarchyScopeInput {
  id: Int
  externalId: String
  parent: FindHierarchyScopeInput
}

input ConnectScenarioMaterialDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioMaterialLotInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioMaterialPropertyInput {
  id: Int
  externalId: String
  materialDefinition: FindMaterialDefinitionInput
}

input ConnectScenarioOpenPurchaseOrderInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioOperationalLocationInput {
  id: Int
  externalId: String
}

input ConnectScenarioOperationsDefinitionClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioOperationsDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input ConnectScenarioOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  equipment: FindEquipmentInput
}

input ConnectScenarioOperationsRequestInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
}

input ConnectScenarioOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  person: FindPersonInput
}

input ConnectScenarioOperationsRequestProfileInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  orderItem: FindOrderItemInput
}

input ConnectScenarioOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: FindOperationsSegmentInput
  toOperationsSegment: FindOperationsSegmentInput
}

input ConnectScenarioOperationsSegmentDescendantInput {
  id: Int
  ascendant: FindOperationsSegmentInput
  descendant: FindOperationsSegmentInput
}

input ConnectScenarioOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
}

input ConnectScenarioOperationsSegmentInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  materialDefinition: FindMaterialDefinitionInput
}

input ConnectScenarioOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  person: FindPersonInput
  personnelClass: FindPersonnelClassInput
}

input ConnectScenarioOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
}

input ConnectScenarioOptimisationHierarchyAttributeInput {
  id: Int
  priority: Int
  optimisationHierarchy: FindOptimisationHierarchyInput
  optimisationProperty: FindOptimisationPropertyInput
}

input ConnectScenarioOptimisationHierarchyInput {
  id: Int
  externalId: String
}

input ConnectScenarioOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  optimisationProperty: FindOptimisationPropertyInput
}

input ConnectScenarioOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: FindOptimisationPreferredSequenceInput
  optimisationPropertyValue: FindOptimisationPropertyValueInput
}

input ConnectScenarioOptimisationPropertyInput {
  id: Int
  name: String
}

input ConnectScenarioOptimisationPropertyValueInput {
  id: Int
  value: String
  optimisationProperty: FindOptimisationPropertyInput
}

input ConnectScenarioOptimizationHierarchyInput {
  id: Int
  externalId: String
}

input ConnectScenarioOrderInput {
  id: Int
  externalId: String
}

input ConnectScenarioOrderItemInput {
  id: Int
  order: FindOrderInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input ConnectScenarioOrderPropertyInput {
  id: Int
  externalId: String
  order: FindOrderInput
}

input ConnectScenarioOrderStatusInput {
  id: Int
  status: String
}

input ConnectScenarioPersonDowntimePeriodInput {
  id: Int
  person: FindPersonInput
  downtimePeriod: FindDowntimePeriodInput
}

input ConnectScenarioPersonInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioPersonnelCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioPersonnelClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: FindPersonnelClassInput
  person: FindPersonInput
}

input ConnectScenarioPersonnelClassPropertyInput {
  id: Int
  externalId: String
  personnelClass: FindPersonnelClassInput
}

input ConnectScenarioPersonnelPositionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: FindPersonnelPositionInput
  person: FindPersonInput
}

input ConnectScenarioPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  personnelPosition: FindPersonnelPositionInput
}

input ConnectScenarioPersonPropertyInput {
  id: Int
  externalId: String
  person: FindPersonInput
}

input ConnectScenarioScenarioAttributeInput {
  id: Int
}

input ConnectScenarioSegmentRequirementDescendantInput {
  id: Int
  ascendant: FindSegmentRequirementInput
  descendant: FindSegmentRequirementInput
}

input ConnectScenarioSegmentRequirementEquipmentRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioSegmentRequirementInput {
  id: Int
  externalId: String
  operationsRequest: FindOperationsRequestInput
  parentSegmentRequirement: FindSegmentRequirementInput
}

input ConnectScenarioSegmentRequirementMaterialRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioSegmentRequirementPersonnelRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
}

input ConnectScenarioSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  segmentRequirement: FindSegmentRequirementInput
}

input ConnectScenarioTimePeriodInput {
  id: Int
  startTime: String
}

input ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput {
  id: Int
  descendant: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput {
  id: Int
  ascendant: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input ConnectSegmentRequirementSegmentRequirementInput {
  id: Int
  externalId: String
  operationsRequest: FindOperationsRequestInput
  scenario: FindScenarioInput
}

input ConnectSegmentRequirementSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input CreateAvailabilityTemplateAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: CreateScenarioParentInput
}

input CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  scenario: CreateScenarioParentInput
}

input CreateAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  scenario: CreateScenarioParentInput
  availabilityTemplateItems: CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input CreateAvailabilityTemplateItemInput {
  id: Int
  availabilityTemplate: CreateAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: CreateScenarioParentInput
}

input CreateAvailabilityTemplateParentInput {
  connect: FindAvailabilityTemplateInput
  create: CreateAvailabilityTemplateInput
  upsert: UpsertAvailabilityTemplateInput
}

input CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: CreateAvailabilityTemplateParentInput
  scenario: CreateScenarioParentInput
}

input CreateCalendarisedAvailabilityTemplateSetEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  calendarisedAvailabilityTemplateSetItems: CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: CreateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input CreateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: CreateAvailabilityTemplateParentInput
  scenario: CreateScenarioParentInput
}

input CreateCalendarisedAvailabilityTemplateSetParentInput {
  connect: FindCalendarisedAvailabilityTemplateSetInput
  create: CreateCalendarisedAvailabilityTemplateSetInput
  upsert: UpsertCalendarisedAvailabilityTemplateSetInput
}

input CreateCalendarisedAvailabilityTemplateSetPersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: CreateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: CreateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: CreateManyPersonPersonDowntimePeriodsInput
}

input CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: CreateScenarioParentInput
}

input CreateCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  calendarisedThroughputSetItems: CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput
}

input CreateCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: CreateScenarioParentInput
}

input CreateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateCalendarisedThroughputSetParentInput {
  connect: FindCalendarisedThroughputSetInput
  create: CreateCalendarisedThroughputSetInput
  upsert: UpsertCalendarisedThroughputSetInput
}

input CreateChangeoverSetChangeoverSetItemInput {
  id: Int
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: CreateScenarioParentInput
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateChangeoverSetEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyChangeoverSetChangeoverSetItemsInput
  equipments: CreateManyChangeoverSetEquipmentsInput
}

input CreateChangeoverSetItemInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: CreateScenarioParentInput
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateChangeoverSetParentInput {
  connect: FindChangeoverSetInput
  create: CreateChangeoverSetInput
  upsert: UpsertChangeoverSetInput
}

input CreateColourSchemeColourSchemeItemInput {
  id: Int
  propertyValue: CreateOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
  scenario: CreateScenarioParentInput
}

input CreateColourSchemeInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  colourSchemeItems: CreateManyColourSchemeColourSchemeItemsInput
}

input CreateColourSchemeItemInput {
  id: Int
  colourScheme: CreateColourSchemeParentInput
  propertyValue: CreateOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
  scenario: CreateScenarioParentInput
}

input CreateColourSchemeParentInput {
  connect: FindColourSchemeInput
  create: CreateColourSchemeInput
  upsert: UpsertColourSchemeInput
}

input CreateConfigurableApplicationParameterInput {
  id: Int
  name: String!
  dataType: String!
  valueAsString: String
  scenario: CreateScenarioParentInput
}

input CreateDowntimePeriodEquipmentDowntimePeriodInput {
  id: Int
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: CreateScenarioParentInput
  equipmentDowntimePeriods: CreateManyDowntimePeriodEquipmentDowntimePeriodsInput
  personDowntimePeriods: CreateManyDowntimePeriodPersonDowntimePeriodsInput
}

input CreateDowntimePeriodParentInput {
  connect: FindDowntimePeriodInput
  create: CreateDowntimePeriodInput
  upsert: UpsertDowntimePeriodInput
}

input CreateDowntimePeriodPersonDowntimePeriodInput {
  id: Int
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateEquipmentChildInput {
  id: Int
  parent: CreateEquipmentParentInput
  child: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentClassEquipmentClassEquipmentMemberInput {
  id: Int
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  scenario: CreateScenarioParentInput
  equipmentClassEquipmentMembers: CreateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentClassParentInput {
  connect: FindEquipmentClassInput
  create: CreateEquipmentClassInput
  upsert: UpsertEquipmentClassInput
}

input CreateEquipmentDescendantInput {
  id: Int
  ascendant: CreateEquipmentParentInput
  descendant: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentDowntimePeriodInput {
  id: Int
  equipment: CreateEquipmentParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentCapabilityInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentChildChildInput {
  id: Int
  parent: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentChildParentInput {
  id: Int
  child: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: CreateEquipmentClassParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentDescendantAscendantInput {
  id: Int
  descendant: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentDescendantDescendantInput {
  id: Int
  ascendant: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentDowntimePeriodInput {
  id: Int
  downtimePeriod: CreateDowntimePeriodParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentEquipmentPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateEquipmentHierarchyScopeInput {
  id: Int
  externalId: String
  parent: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: CreateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: CreateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateEquipmentOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateEquipmentParentInput {
  connect: FindEquipmentInput
  create: CreateEquipmentInput
  upsert: UpsertEquipmentInput
}

input CreateEquipmentPropertyInput {
  id: Int
  equipment: CreateEquipmentParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateEquipmentSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeDescendantInput {
  id: Int
  ascendant: CreateHierarchyScopeParentInput
  descendant: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: CreateScenarioParentInput
  equipmentClassEquipmentMembers: CreateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateHierarchyScopeEquipmentInput {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateHierarchyScopeHierarchyScopeDescendantAscendantInput {
  id: Int
  descendant: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeHierarchyScopeDescendantDescendantInput {
  id: Int
  ascendant: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: CreateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: CreateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  parent: CreateHierarchyScopeParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: CreateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: CreateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateHierarchyScopeMaterialDefinitionInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateHierarchyScopeMaterialLotInput {
  id: Int
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateHierarchyScopeOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeOperationalLocationInput {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateHierarchyScopeOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: CreateScenarioParentInput
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateHierarchyScopeOperationsDefinitionInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: CreateScenarioParentInput
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateHierarchyScopeOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: CreateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeOperationsSegmentInput {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeParentInput {
  connect: FindHierarchyScopeInput
  create: CreateHierarchyScopeInput
  upsert: UpsertHierarchyScopeInput
}

input CreateHierarchyScopePersonInput {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: CreateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: CreateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: CreateManyPersonPersonDowntimePeriodsInput
}

input CreateHierarchyScopePersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopePersonnelClassInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: CreateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreateHierarchyScopePersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelPositionPersonMembers: CreateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateHierarchyScopeSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: CreateScenarioParentInput
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateHierarchyScopeSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput {
  connect: [ConnectAvailabilityTemplateAvailabilityTemplateItemInput]
  create: [CreateAvailabilityTemplateAvailabilityTemplateItemInput]
  upsert: [UpsertAvailabilityTemplateAvailabilityTemplateItemInput]
}

input CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateCalendarisedAvailabilityTemplateSetEquipmentInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetEquipmentInput]
}

input CreateManyCalendarisedAvailabilityTemplateSetPersonsInput {
  connect: [FindPersonInput]
  create: [CreateCalendarisedAvailabilityTemplateSetPersonInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetPersonInput]
}

input CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput {
  connect: [ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  create: [CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  upsert: [UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
}

input CreateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
}

input CreateManyChangeoverSetChangeoverSetItemsInput {
  connect: [ConnectChangeoverSetChangeoverSetItemInput]
  create: [CreateChangeoverSetChangeoverSetItemInput]
  upsert: [UpsertChangeoverSetChangeoverSetItemInput]
}

input CreateManyChangeoverSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChangeoverSetEquipmentInput]
  upsert: [UpsertChangeoverSetEquipmentInput]
}

input CreateManyColourSchemeColourSchemeItemsInput {
  connect: [ConnectColourSchemeColourSchemeItemInput]
  create: [CreateColourSchemeColourSchemeItemInput]
  upsert: [UpsertColourSchemeColourSchemeItemInput]
}

input CreateManyDowntimePeriodEquipmentDowntimePeriodsInput {
  connect: [ConnectDowntimePeriodEquipmentDowntimePeriodInput]
  create: [CreateDowntimePeriodEquipmentDowntimePeriodInput]
  upsert: [UpsertDowntimePeriodEquipmentDowntimePeriodInput]
}

input CreateManyDowntimePeriodPersonDowntimePeriodsInput {
  connect: [ConnectDowntimePeriodPersonDowntimePeriodInput]
  create: [CreateDowntimePeriodPersonDowntimePeriodInput]
  upsert: [UpsertDowntimePeriodPersonDowntimePeriodInput]
}

input CreateManyEquipmentClassEquipmentClassEquipmentMembersInput {
  connect: [ConnectEquipmentClassEquipmentClassEquipmentMemberInput]
  create: [CreateEquipmentClassEquipmentClassEquipmentMemberInput]
  upsert: [UpsertEquipmentClassEquipmentClassEquipmentMemberInput]
}

input CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyEquipmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateEquipmentEquipmentCapabilityInput]
  upsert: [UpsertEquipmentEquipmentCapabilityInput]
}

input CreateManyEquipmentEquipmentChildChildrenInput {
  connect: [ConnectEquipmentEquipmentChildChildInput]
  create: [CreateEquipmentEquipmentChildChildInput]
  upsert: [UpsertEquipmentEquipmentChildChildInput]
}

input CreateManyEquipmentEquipmentChildParentsInput {
  connect: [ConnectEquipmentEquipmentChildParentInput]
  create: [CreateEquipmentEquipmentChildParentInput]
  upsert: [UpsertEquipmentEquipmentChildParentInput]
}

input CreateManyEquipmentEquipmentClassEquipmentMembersInput {
  connect: [ConnectEquipmentEquipmentClassEquipmentMemberInput]
  create: [CreateEquipmentEquipmentClassEquipmentMemberInput]
  upsert: [UpsertEquipmentEquipmentClassEquipmentMemberInput]
}

input CreateManyEquipmentEquipmentDescendantAscendantsInput {
  connect: [ConnectEquipmentEquipmentDescendantAscendantInput]
  create: [CreateEquipmentEquipmentDescendantAscendantInput]
  upsert: [UpsertEquipmentEquipmentDescendantAscendantInput]
}

input CreateManyEquipmentEquipmentDescendantDescendantsInput {
  connect: [ConnectEquipmentEquipmentDescendantDescendantInput]
  create: [CreateEquipmentEquipmentDescendantDescendantInput]
  upsert: [UpsertEquipmentEquipmentDescendantDescendantInput]
}

input CreateManyEquipmentEquipmentDowntimePeriodsInput {
  connect: [ConnectEquipmentEquipmentDowntimePeriodInput]
  create: [CreateEquipmentEquipmentDowntimePeriodInput]
  upsert: [UpsertEquipmentEquipmentDowntimePeriodInput]
}

input CreateManyEquipmentEquipmentPropertiesInput {
  connect: [ConnectEquipmentEquipmentPropertyInput]
  create: [CreateEquipmentEquipmentPropertyInput]
  upsert: [UpsertEquipmentEquipmentPropertyInput]
}

input CreateManyEquipmentHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateEquipmentHierarchyScopeInput]
  upsert: [UpsertEquipmentHierarchyScopeInput]
}

input CreateManyEquipmentOperationsRequestEquipmentsInput {
  connect: [ConnectEquipmentOperationsRequestEquipmentInput]
  create: [CreateEquipmentOperationsRequestEquipmentInput]
  upsert: [UpsertEquipmentOperationsRequestEquipmentInput]
}

input CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectEquipmentOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateEquipmentSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertEquipmentSegmentRequirementEquipmentRequirementInput]
}

input CreateManyHierarchyScopeEquipmentCapabilitiesInput {
  connect: [ConnectHierarchyScopeEquipmentCapabilityInput]
  create: [CreateHierarchyScopeEquipmentCapabilityInput]
  upsert: [UpsertHierarchyScopeEquipmentCapabilityInput]
}

input CreateManyHierarchyScopeEquipmentClassesInput {
  connect: [ConnectHierarchyScopeEquipmentClassInput]
  create: [CreateHierarchyScopeEquipmentClassInput]
  upsert: [UpsertHierarchyScopeEquipmentClassInput]
}

input CreateManyHierarchyScopeEquipmentsInput {
  connect: [ConnectHierarchyScopeEquipmentInput]
  create: [CreateHierarchyScopeEquipmentInput]
  upsert: [UpsertHierarchyScopeEquipmentInput]
}

input CreateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput {
  connect: [ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput]
  create: [CreateHierarchyScopeHierarchyScopeDescendantAscendantInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeDescendantAscendantInput]
}

input CreateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput {
  connect: [ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput]
  create: [CreateHierarchyScopeHierarchyScopeDescendantDescendantInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeDescendantDescendantInput]
}

input CreateManyHierarchyScopeHierarchyScopesInput {
  connect: [ConnectHierarchyScopeHierarchyScopeInput]
  create: [CreateHierarchyScopeHierarchyScopeInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeInput]
}

input CreateManyHierarchyScopeMaterialDefinitionsInput {
  connect: [ConnectHierarchyScopeMaterialDefinitionInput]
  create: [CreateHierarchyScopeMaterialDefinitionInput]
  upsert: [UpsertHierarchyScopeMaterialDefinitionInput]
}

input CreateManyHierarchyScopeMaterialLotsInput {
  connect: [ConnectHierarchyScopeMaterialLotInput]
  create: [CreateHierarchyScopeMaterialLotInput]
  upsert: [UpsertHierarchyScopeMaterialLotInput]
}

input CreateManyHierarchyScopeOpenPurchaseOrdersInput {
  connect: [ConnectHierarchyScopeOpenPurchaseOrderInput]
  create: [CreateHierarchyScopeOpenPurchaseOrderInput]
  upsert: [UpsertHierarchyScopeOpenPurchaseOrderInput]
}

input CreateManyHierarchyScopeOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateHierarchyScopeOperationalLocationInput]
  upsert: [UpsertHierarchyScopeOperationalLocationInput]
}

input CreateManyHierarchyScopeOperationsDefinitionClassesInput {
  connect: [ConnectHierarchyScopeOperationsDefinitionClassInput]
  create: [CreateHierarchyScopeOperationsDefinitionClassInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionClassInput]
}

input CreateManyHierarchyScopeOperationsDefinitionsInput {
  connect: [ConnectHierarchyScopeOperationsDefinitionInput]
  create: [CreateHierarchyScopeOperationsDefinitionInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionInput]
}

input CreateManyHierarchyScopeOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateHierarchyScopeOperationsRequestInput]
  upsert: [UpsertHierarchyScopeOperationsRequestInput]
}

input CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyHierarchyScopeOperationsSegmentsInput {
  connect: [ConnectHierarchyScopeOperationsSegmentInput]
  create: [CreateHierarchyScopeOperationsSegmentInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentInput]
}

input CreateManyHierarchyScopePersonnelCapabilitiesInput {
  connect: [ConnectHierarchyScopePersonnelCapabilityInput]
  create: [CreateHierarchyScopePersonnelCapabilityInput]
  upsert: [UpsertHierarchyScopePersonnelCapabilityInput]
}

input CreateManyHierarchyScopePersonnelClassesInput {
  connect: [ConnectHierarchyScopePersonnelClassInput]
  create: [CreateHierarchyScopePersonnelClassInput]
  upsert: [UpsertHierarchyScopePersonnelClassInput]
}

input CreateManyHierarchyScopePersonnelPositionsInput {
  connect: [ConnectHierarchyScopePersonnelPositionInput]
  create: [CreateHierarchyScopePersonnelPositionInput]
  upsert: [UpsertHierarchyScopePersonnelPositionInput]
}

input CreateManyHierarchyScopePersonsInput {
  connect: [ConnectHierarchyScopePersonInput]
  create: [CreateHierarchyScopePersonInput]
  upsert: [UpsertHierarchyScopePersonInput]
}

input CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput]
}

input CreateManyHierarchyScopeSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementInput]
}

input CreateManyMaterialDefinitionMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateMaterialDefinitionMaterialLotInput]
  upsert: [UpsertMaterialDefinitionMaterialLotInput]
}

input CreateManyMaterialDefinitionMaterialPropertiesInput {
  connect: [ConnectMaterialDefinitionMaterialPropertyInput]
  create: [CreateMaterialDefinitionMaterialPropertyInput]
  upsert: [UpsertMaterialDefinitionMaterialPropertyInput]
}

input CreateManyMaterialDefinitionOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateMaterialDefinitionOpenPurchaseOrderInput]
  upsert: [UpsertMaterialDefinitionOpenPurchaseOrderInput]
}

input CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  create: [CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
}

input CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput]
}

input CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialLotSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialLotSegmentRequirementMaterialRequirementInput]
}

input CreateManyOperationalLocationMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateOperationalLocationMaterialLotInput]
  upsert: [UpsertOperationalLocationMaterialLotInput]
}

input CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput]
}

input CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementMaterialRequirementInput]
}

input CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput]
}

input CreateManyOperationsDefinitionClassOperationsDefinitionsInput {
  connect: [ConnectOperationsDefinitionClassOperationsDefinitionInput]
  create: [CreateOperationsDefinitionClassOperationsDefinitionInput]
  upsert: [UpsertOperationsDefinitionClassOperationsDefinitionInput]
}

input CreateManyOperationsDefinitionClassOrderItemsInput {
  connect: [ConnectOperationsDefinitionClassOrderItemInput]
  create: [CreateOperationsDefinitionClassOrderItemInput]
  upsert: [UpsertOperationsDefinitionClassOrderItemInput]
}

input CreateManyOperationsDefinitionOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsDefinitionOperationsSegmentInput]
  upsert: [UpsertOperationsDefinitionOperationsSegmentInput]
}

input CreateManyOperationsRequestOperationsRequestEquipmentsInput {
  connect: [ConnectOperationsRequestOperationsRequestEquipmentInput]
  create: [CreateOperationsRequestOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsRequestOperationsRequestEquipmentInput]
}

input CreateManyOperationsRequestOperationsRequestPersonnelsInput {
  connect: [ConnectOperationsRequestOperationsRequestPersonnelInput]
  create: [CreateOperationsRequestOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsRequestOperationsRequestPersonnelInput]
}

input CreateManyOperationsRequestOperationsRequestProfilesInput {
  connect: [ConnectOperationsRequestOperationsRequestProfileInput]
  create: [CreateOperationsRequestOperationsRequestProfileInput]
  upsert: [UpsertOperationsRequestOperationsRequestProfileInput]
}

input CreateManyOperationsRequestSegmentRequirementsInput {
  connect: [ConnectOperationsRequestSegmentRequirementInput]
  create: [CreateOperationsRequestSegmentRequirementInput]
  upsert: [UpsertOperationsRequestSegmentRequirementInput]
}

input CreateManyOperationsSegmentChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOperationsSegmentChangeoverSetItemInput]
  upsert: [UpsertOperationsSegmentChangeoverSetItemInput]
}

input CreateManyOperationsSegmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateOperationsSegmentEquipmentCapabilityInput]
  upsert: [UpsertOperationsSegmentEquipmentCapabilityInput]
}

input CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationsSegmentOperationsRequestsInput {
  connect: [ConnectOperationsSegmentOperationsRequestInput]
  create: [CreateOperationsSegmentOperationsRequestInput]
  upsert: [UpsertOperationsSegmentOperationsRequestInput]
}

input CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
}

input CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
}

input CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput]
  create: [CreateOperationsSegmentOperationsSegmentDescendantAscendantInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDescendantAscendantInput]
}

input CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput]
  create: [CreateOperationsSegmentOperationsSegmentDescendantDescendantInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDescendantDescendantInput]
}

input CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyOperationsSegmentOperationsSegmentPropertiesInput {
  connect: [ConnectOperationsSegmentOperationsSegmentPropertyInput]
  create: [CreateOperationsSegmentOperationsSegmentPropertyInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPropertyInput]
}

input CreateManyOperationsSegmentOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentInput]
}

input CreateManyOperationsSegmentPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateOperationsSegmentPersonnelCapabilityInput]
  upsert: [UpsertOperationsSegmentPersonnelCapabilityInput]
}

input CreateManyOperationsSegmentSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsSegmentSegmentRequirementInput]
  upsert: [UpsertOperationsSegmentSegmentRequirementInput]
}

input CreateManyOptimisationHierarchyEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationHierarchyEquipmentInput]
  upsert: [UpsertOptimisationHierarchyEquipmentInput]
}

input CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput {
  connect: [ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput]
}

input CreateManyOptimisationPreferredSequenceEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationPreferredSequenceEquipmentInput]
  upsert: [UpsertOptimisationPreferredSequenceEquipmentInput]
}

input CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput {
  connect: [ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
}

input CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput {
  connect: [ConnectOptimisationPropertyOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationPropertyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationPropertyOptimisationHierarchyAttributeInput]
}

input CreateManyOptimisationPropertyOptimisationPreferredSequencesInput {
  connect: [ConnectOptimisationPropertyOptimisationPreferredSequenceInput]
  create: [CreateOptimisationPropertyOptimisationPreferredSequenceInput]
  upsert: [UpsertOptimisationPropertyOptimisationPreferredSequenceInput]
}

input CreateManyOptimisationPropertyOptimisationPropertyValuesInput {
  connect: [ConnectOptimisationPropertyOptimisationPropertyValueInput]
  create: [CreateOptimisationPropertyOptimisationPropertyValueInput]
  upsert: [UpsertOptimisationPropertyOptimisationPropertyValueInput]
}

input CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput {
  connect: [ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput]
}

input CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput {
  connect: [ConnectOptimisationPropertyValueChangeoverSetItemToValueInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemToValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemToValueInput]
}

input CreateManyOptimisationPropertyValueColourSchemeItemsInput {
  connect: [ConnectOptimisationPropertyValueColourSchemeItemInput]
  create: [CreateOptimisationPropertyValueColourSchemeItemInput]
  upsert: [UpsertOptimisationPropertyValueColourSchemeItemInput]
}

input CreateManyOptimisationPropertyValueMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateOptimisationPropertyValueMaterialPropertyInput]
  upsert: [UpsertOptimisationPropertyValueMaterialPropertyInput]
}

input CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput {
  connect: [ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
}

input CreateManyOrderItemOperationsRequestProfilesInput {
  connect: [ConnectOrderItemOperationsRequestProfileInput]
  create: [CreateOrderItemOperationsRequestProfileInput]
  upsert: [UpsertOrderItemOperationsRequestProfileInput]
}

input CreateManyOrderOrderItemsInput {
  connect: [ConnectOrderOrderItemInput]
  create: [CreateOrderOrderItemInput]
  upsert: [UpsertOrderOrderItemInput]
}

input CreateManyOrderOrderPropertiesInput {
  connect: [ConnectOrderOrderPropertyInput]
  create: [CreateOrderOrderPropertyInput]
  upsert: [UpsertOrderOrderPropertyInput]
}

input CreateManyOrderStatusOrdersInput {
  connect: [FindOrderInput]
  create: [CreateOrderStatusOrderInput]
  upsert: [UpsertOrderStatusOrderInput]
}

input CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyPersonnelClassPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreatePersonnelClassPersonnelCapabilityInput]
  upsert: [UpsertPersonnelClassPersonnelCapabilityInput]
}

input CreateManyPersonnelClassPersonnelClassPersonMembersInput {
  connect: [ConnectPersonnelClassPersonnelClassPersonMemberInput]
  create: [CreatePersonnelClassPersonnelClassPersonMemberInput]
  upsert: [UpsertPersonnelClassPersonnelClassPersonMemberInput]
}

input CreateManyPersonnelClassPersonnelClassPropertiesInput {
  connect: [ConnectPersonnelClassPersonnelClassPropertyInput]
  create: [CreatePersonnelClassPersonnelClassPropertyInput]
  upsert: [UpsertPersonnelClassPersonnelClassPropertyInput]
}

input CreateManyPersonnelClassPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonnelClassPersonnelPositionInput]
  upsert: [UpsertPersonnelClassPersonnelPositionInput]
}

input CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput]
}

input CreateManyPersonnelPositionPersonnelPositionPersonMembersInput {
  connect: [ConnectPersonnelPositionPersonnelPositionPersonMemberInput]
  create: [CreatePersonnelPositionPersonnelPositionPersonMemberInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPersonMemberInput]
}

input CreateManyPersonnelPositionPersonnelPositionPropertiesInput {
  connect: [ConnectPersonnelPositionPersonnelPositionPropertyInput]
  create: [CreatePersonnelPositionPersonnelPositionPropertyInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPropertyInput]
}

input CreateManyPersonOperationsRequestPersonnelsInput {
  connect: [ConnectPersonOperationsRequestPersonnelInput]
  create: [CreatePersonOperationsRequestPersonnelInput]
  upsert: [UpsertPersonOperationsRequestPersonnelInput]
}

input CreateManyPersonOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectPersonOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyPersonPersonDowntimePeriodsInput {
  connect: [ConnectPersonPersonDowntimePeriodInput]
  create: [CreatePersonPersonDowntimePeriodInput]
  upsert: [UpsertPersonPersonDowntimePeriodInput]
}

input CreateManyPersonPersonnelClassPersonMembersInput {
  connect: [ConnectPersonPersonnelClassPersonMemberInput]
  create: [CreatePersonPersonnelClassPersonMemberInput]
  upsert: [UpsertPersonPersonnelClassPersonMemberInput]
}

input CreateManyPersonPersonnelPositionPersonMembersInput {
  connect: [ConnectPersonPersonnelPositionPersonMemberInput]
  create: [CreatePersonPersonnelPositionPersonMemberInput]
  upsert: [UpsertPersonPersonnelPositionPersonMemberInput]
}

input CreateManyPersonPersonPropertiesInput {
  connect: [ConnectPersonPersonPropertyInput]
  create: [CreatePersonPersonPropertyInput]
  upsert: [UpsertPersonPersonPropertyInput]
}

input CreateManyPersonSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonSegmentRequirementPersonnelRequirementInput]
}

input CreateManyScenarioAvailabilityTemplateItemsInput {
  connect: [ConnectScenarioAvailabilityTemplateItemInput]
  create: [CreateScenarioAvailabilityTemplateItemInput]
  upsert: [UpsertScenarioAvailabilityTemplateItemInput]
}

input CreateManyScenarioAvailabilityTemplatesInput {
  connect: [ConnectScenarioAvailabilityTemplateInput]
  create: [CreateScenarioAvailabilityTemplateInput]
  upsert: [UpsertScenarioAvailabilityTemplateInput]
}

input CreateManyScenarioCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetItemInput]
}

input CreateManyScenarioCalendarisedAvailabilityTemplateSetsInput {
  connect: [ConnectScenarioCalendarisedAvailabilityTemplateSetInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetInput]
}

input CreateManyScenarioCalendarisedThroughputSetItemsInput {
  connect: [ConnectScenarioCalendarisedThroughputSetItemInput]
  create: [CreateScenarioCalendarisedThroughputSetItemInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetItemInput]
}

input CreateManyScenarioCalendarisedThroughputSetsInput {
  connect: [ConnectScenarioCalendarisedThroughputSetInput]
  create: [CreateScenarioCalendarisedThroughputSetInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetInput]
}

input CreateManyScenarioChangeoverSetItemsInput {
  connect: [ConnectScenarioChangeoverSetItemInput]
  create: [CreateScenarioChangeoverSetItemInput]
  upsert: [UpsertScenarioChangeoverSetItemInput]
}

input CreateManyScenarioChangeoverSetsInput {
  connect: [ConnectScenarioChangeoverSetInput]
  create: [CreateScenarioChangeoverSetInput]
  upsert: [UpsertScenarioChangeoverSetInput]
}

input CreateManyScenarioColourSchemeItemsInput {
  connect: [ConnectScenarioColourSchemeItemInput]
  create: [CreateScenarioColourSchemeItemInput]
  upsert: [UpsertScenarioColourSchemeItemInput]
}

input CreateManyScenarioColourSchemesInput {
  connect: [ConnectScenarioColourSchemeInput]
  create: [CreateScenarioColourSchemeInput]
  upsert: [UpsertScenarioColourSchemeInput]
}

input CreateManyScenarioConfigurableApplicationParametersInput {
  connect: [ConnectScenarioConfigurableApplicationParameterInput]
  create: [CreateScenarioConfigurableApplicationParameterInput]
  upsert: [UpsertScenarioConfigurableApplicationParameterInput]
}

input CreateManyScenarioDowntimePeriodsInput {
  connect: [ConnectScenarioDowntimePeriodInput]
  create: [CreateScenarioDowntimePeriodInput]
  upsert: [UpsertScenarioDowntimePeriodInput]
}

input CreateManyScenarioEquipmentCapabilitiesInput {
  connect: [ConnectScenarioEquipmentCapabilityInput]
  create: [CreateScenarioEquipmentCapabilityInput]
  upsert: [UpsertScenarioEquipmentCapabilityInput]
}

input CreateManyScenarioEquipmentChildrenInput {
  connect: [ConnectScenarioEquipmentChildInput]
  create: [CreateScenarioEquipmentChildInput]
  upsert: [UpsertScenarioEquipmentChildInput]
}

input CreateManyScenarioEquipmentClassEquipmentMembersInput {
  connect: [ConnectScenarioEquipmentClassEquipmentMemberInput]
  create: [CreateScenarioEquipmentClassEquipmentMemberInput]
  upsert: [UpsertScenarioEquipmentClassEquipmentMemberInput]
}

input CreateManyScenarioEquipmentClassesInput {
  connect: [ConnectScenarioEquipmentClassInput]
  create: [CreateScenarioEquipmentClassInput]
  upsert: [UpsertScenarioEquipmentClassInput]
}

input CreateManyScenarioEquipmentDescendantsInput {
  connect: [ConnectScenarioEquipmentDescendantInput]
  create: [CreateScenarioEquipmentDescendantInput]
  upsert: [UpsertScenarioEquipmentDescendantInput]
}

input CreateManyScenarioEquipmentDowntimePeriodsInput {
  connect: [ConnectScenarioEquipmentDowntimePeriodInput]
  create: [CreateScenarioEquipmentDowntimePeriodInput]
  upsert: [UpsertScenarioEquipmentDowntimePeriodInput]
}

input CreateManyScenarioEquipmentPropertiesInput {
  connect: [ConnectScenarioEquipmentPropertyInput]
  create: [CreateScenarioEquipmentPropertyInput]
  upsert: [UpsertScenarioEquipmentPropertyInput]
}

input CreateManyScenarioEquipmentsInput {
  connect: [ConnectScenarioEquipmentInput]
  create: [CreateScenarioEquipmentInput]
  upsert: [UpsertScenarioEquipmentInput]
}

input CreateManyScenarioHierarchyScopeDescendantsInput {
  connect: [ConnectScenarioHierarchyScopeDescendantInput]
  create: [CreateScenarioHierarchyScopeDescendantInput]
  upsert: [UpsertScenarioHierarchyScopeDescendantInput]
}

input CreateManyScenarioHierarchyScopesInput {
  connect: [ConnectScenarioHierarchyScopeInput]
  create: [CreateScenarioHierarchyScopeInput]
  upsert: [UpsertScenarioHierarchyScopeInput]
}

input CreateManyScenarioMaterialDefinitionsInput {
  connect: [ConnectScenarioMaterialDefinitionInput]
  create: [CreateScenarioMaterialDefinitionInput]
  upsert: [UpsertScenarioMaterialDefinitionInput]
}

input CreateManyScenarioMaterialLotsInput {
  connect: [ConnectScenarioMaterialLotInput]
  create: [CreateScenarioMaterialLotInput]
  upsert: [UpsertScenarioMaterialLotInput]
}

input CreateManyScenarioMaterialPropertiesInput {
  connect: [ConnectScenarioMaterialPropertyInput]
  create: [CreateScenarioMaterialPropertyInput]
  upsert: [UpsertScenarioMaterialPropertyInput]
}

input CreateManyScenarioOpenPurchaseOrdersInput {
  connect: [ConnectScenarioOpenPurchaseOrderInput]
  create: [CreateScenarioOpenPurchaseOrderInput]
  upsert: [UpsertScenarioOpenPurchaseOrderInput]
}

input CreateManyScenarioOperationalLocationsInput {
  connect: [ConnectScenarioOperationalLocationInput]
  create: [CreateScenarioOperationalLocationInput]
  upsert: [UpsertScenarioOperationalLocationInput]
}

input CreateManyScenarioOperationsDefinitionClassesInput {
  connect: [ConnectScenarioOperationsDefinitionClassInput]
  create: [CreateScenarioOperationsDefinitionClassInput]
  upsert: [UpsertScenarioOperationsDefinitionClassInput]
}

input CreateManyScenarioOperationsDefinitionsInput {
  connect: [ConnectScenarioOperationsDefinitionInput]
  create: [CreateScenarioOperationsDefinitionInput]
  upsert: [UpsertScenarioOperationsDefinitionInput]
}

input CreateManyScenarioOperationsRequestEquipmentsInput {
  connect: [ConnectScenarioOperationsRequestEquipmentInput]
  create: [CreateScenarioOperationsRequestEquipmentInput]
  upsert: [UpsertScenarioOperationsRequestEquipmentInput]
}

input CreateManyScenarioOperationsRequestPersonnelsInput {
  connect: [ConnectScenarioOperationsRequestPersonnelInput]
  create: [CreateScenarioOperationsRequestPersonnelInput]
  upsert: [UpsertScenarioOperationsRequestPersonnelInput]
}

input CreateManyScenarioOperationsRequestProfilesInput {
  connect: [ConnectScenarioOperationsRequestProfileInput]
  create: [CreateScenarioOperationsRequestProfileInput]
  upsert: [UpsertScenarioOperationsRequestProfileInput]
}

input CreateManyScenarioOperationsRequestsInput {
  connect: [ConnectScenarioOperationsRequestInput]
  create: [CreateScenarioOperationsRequestInput]
  upsert: [UpsertScenarioOperationsRequestInput]
}

input CreateManyScenarioOperationsSegmentDependenciesInput {
  connect: [ConnectScenarioOperationsSegmentDependencyInput]
  create: [CreateScenarioOperationsSegmentDependencyInput]
  upsert: [UpsertScenarioOperationsSegmentDependencyInput]
}

input CreateManyScenarioOperationsSegmentDescendantsInput {
  connect: [ConnectScenarioOperationsSegmentDescendantInput]
  create: [CreateScenarioOperationsSegmentDescendantInput]
  upsert: [UpsertScenarioOperationsSegmentDescendantInput]
}

input CreateManyScenarioOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentEquipmentSpecificationInput]
  create: [CreateScenarioOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentEquipmentSpecificationInput]
}

input CreateManyScenarioOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentMaterialSpecificationInput]
  create: [CreateScenarioOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentMaterialSpecificationInput]
}

input CreateManyScenarioOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentPersonnelSpecificationInput]
  create: [CreateScenarioOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentPersonnelSpecificationInput]
}

input CreateManyScenarioOperationsSegmentPropertiesInput {
  connect: [ConnectScenarioOperationsSegmentPropertyInput]
  create: [CreateScenarioOperationsSegmentPropertyInput]
  upsert: [UpsertScenarioOperationsSegmentPropertyInput]
}

input CreateManyScenarioOperationsSegmentsInput {
  connect: [ConnectScenarioOperationsSegmentInput]
  create: [CreateScenarioOperationsSegmentInput]
  upsert: [UpsertScenarioOperationsSegmentInput]
}

input CreateManyScenarioOptimisationHierarchiesInput {
  connect: [ConnectScenarioOptimisationHierarchyInput]
  create: [CreateScenarioOptimisationHierarchyInput]
  upsert: [UpsertScenarioOptimisationHierarchyInput]
}

input CreateManyScenarioOptimisationHierarchyAttributesInput {
  connect: [ConnectScenarioOptimisationHierarchyAttributeInput]
  create: [CreateScenarioOptimisationHierarchyAttributeInput]
  upsert: [UpsertScenarioOptimisationHierarchyAttributeInput]
}

input CreateManyScenarioOptimisationPreferredSequenceItemsInput {
  connect: [ConnectScenarioOptimisationPreferredSequenceItemInput]
  create: [CreateScenarioOptimisationPreferredSequenceItemInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceItemInput]
}

input CreateManyScenarioOptimisationPreferredSequencesInput {
  connect: [ConnectScenarioOptimisationPreferredSequenceInput]
  create: [CreateScenarioOptimisationPreferredSequenceInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceInput]
}

input CreateManyScenarioOptimisationPropertiesInput {
  connect: [ConnectScenarioOptimisationPropertyInput]
  create: [CreateScenarioOptimisationPropertyInput]
  upsert: [UpsertScenarioOptimisationPropertyInput]
}

input CreateManyScenarioOptimisationPropertyValuesInput {
  connect: [ConnectScenarioOptimisationPropertyValueInput]
  create: [CreateScenarioOptimisationPropertyValueInput]
  upsert: [UpsertScenarioOptimisationPropertyValueInput]
}

input CreateManyScenarioOptimizationHierarchiesInput {
  connect: [ConnectScenarioOptimizationHierarchyInput]
  create: [CreateScenarioOptimizationHierarchyInput]
  upsert: [UpsertScenarioOptimizationHierarchyInput]
}

input CreateManyScenarioOrderItemsInput {
  connect: [ConnectScenarioOrderItemInput]
  create: [CreateScenarioOrderItemInput]
  upsert: [UpsertScenarioOrderItemInput]
}

input CreateManyScenarioOrderPropertiesInput {
  connect: [ConnectScenarioOrderPropertyInput]
  create: [CreateScenarioOrderPropertyInput]
  upsert: [UpsertScenarioOrderPropertyInput]
}

input CreateManyScenarioOrdersInput {
  connect: [ConnectScenarioOrderInput]
  create: [CreateScenarioOrderInput]
  upsert: [UpsertScenarioOrderInput]
}

input CreateManyScenarioOrderStatusesInput {
  connect: [ConnectScenarioOrderStatusInput]
  create: [CreateScenarioOrderStatusInput]
  upsert: [UpsertScenarioOrderStatusInput]
}

input CreateManyScenarioPersonDowntimePeriodsInput {
  connect: [ConnectScenarioPersonDowntimePeriodInput]
  create: [CreateScenarioPersonDowntimePeriodInput]
  upsert: [UpsertScenarioPersonDowntimePeriodInput]
}

input CreateManyScenarioPersonnelCapabilitiesInput {
  connect: [ConnectScenarioPersonnelCapabilityInput]
  create: [CreateScenarioPersonnelCapabilityInput]
  upsert: [UpsertScenarioPersonnelCapabilityInput]
}

input CreateManyScenarioPersonnelClassesInput {
  connect: [ConnectScenarioPersonnelClassInput]
  create: [CreateScenarioPersonnelClassInput]
  upsert: [UpsertScenarioPersonnelClassInput]
}

input CreateManyScenarioPersonnelClassPersonMembersInput {
  connect: [ConnectScenarioPersonnelClassPersonMemberInput]
  create: [CreateScenarioPersonnelClassPersonMemberInput]
  upsert: [UpsertScenarioPersonnelClassPersonMemberInput]
}

input CreateManyScenarioPersonnelClassPropertiesInput {
  connect: [ConnectScenarioPersonnelClassPropertyInput]
  create: [CreateScenarioPersonnelClassPropertyInput]
  upsert: [UpsertScenarioPersonnelClassPropertyInput]
}

input CreateManyScenarioPersonnelPositionPersonMembersInput {
  connect: [ConnectScenarioPersonnelPositionPersonMemberInput]
  create: [CreateScenarioPersonnelPositionPersonMemberInput]
  upsert: [UpsertScenarioPersonnelPositionPersonMemberInput]
}

input CreateManyScenarioPersonnelPositionPropertiesInput {
  connect: [ConnectScenarioPersonnelPositionPropertyInput]
  create: [CreateScenarioPersonnelPositionPropertyInput]
  upsert: [UpsertScenarioPersonnelPositionPropertyInput]
}

input CreateManyScenarioPersonnelPositionsInput {
  connect: [ConnectScenarioPersonnelPositionInput]
  create: [CreateScenarioPersonnelPositionInput]
  upsert: [UpsertScenarioPersonnelPositionInput]
}

input CreateManyScenarioPersonPropertiesInput {
  connect: [ConnectScenarioPersonPropertyInput]
  create: [CreateScenarioPersonPropertyInput]
  upsert: [UpsertScenarioPersonPropertyInput]
}

input CreateManyScenarioPersonsInput {
  connect: [ConnectScenarioPersonInput]
  create: [CreateScenarioPersonInput]
  upsert: [UpsertScenarioPersonInput]
}

input CreateManyScenarioSegmentRequirementDescendantsInput {
  connect: [ConnectScenarioSegmentRequirementDescendantInput]
  create: [CreateScenarioSegmentRequirementDescendantInput]
  upsert: [UpsertScenarioSegmentRequirementDescendantInput]
}

input CreateManyScenarioSegmentRequirementEquipmentRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementEquipmentRequirementInput]
  create: [CreateScenarioSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementEquipmentRequirementInput]
}

input CreateManyScenarioSegmentRequirementMaterialRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementMaterialRequirementInput]
  create: [CreateScenarioSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementMaterialRequirementInput]
}

input CreateManyScenarioSegmentRequirementPersonnelRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementPersonnelRequirementInput]
  create: [CreateScenarioSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementPersonnelRequirementInput]
}

input CreateManyScenarioSegmentRequirementPropertiesInput {
  connect: [ConnectScenarioSegmentRequirementPropertyInput]
  create: [CreateScenarioSegmentRequirementPropertyInput]
  upsert: [UpsertScenarioSegmentRequirementPropertyInput]
}

input CreateManyScenarioSegmentRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementInput]
  create: [CreateScenarioSegmentRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementInput]
}

input CreateManyScenarioTimePeriodsInput {
  connect: [ConnectScenarioTimePeriodInput]
  create: [CreateScenarioTimePeriodInput]
  upsert: [UpsertScenarioTimePeriodInput]
}

input CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput]
  create: [CreateSegmentRequirementSegmentRequirementDescendantAscendantInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementDescendantAscendantInput]
}

input CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput]
  create: [CreateSegmentRequirementSegmentRequirementDescendantDescendantInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementDescendantDescendantInput]
}

input CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput]
}

input CreateManySegmentRequirementSegmentRequirementPropertiesInput {
  connect: [ConnectSegmentRequirementSegmentRequirementPropertyInput]
  create: [CreateSegmentRequirementSegmentRequirementPropertyInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPropertyInput]
}

input CreateManySegmentRequirementSegmentRequirementsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementInput]
}

input CreateMaterialDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateMaterialDefinitionMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialDefinitionMaterialPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  scenario: CreateScenarioParentInput
}

input CreateMaterialDefinitionOpenPurchaseOrderInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateMaterialDefinitionParentInput {
  connect: FindMaterialDefinitionInput
  create: CreateMaterialDefinitionInput
  upsert: UpsertMaterialDefinitionInput
}

input CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialLotParentInput {
  connect: FindMaterialLotInput
  create: CreateMaterialLotInput
  upsert: UpsertMaterialLotInput
}

input CreateMaterialLotSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateMaterialPropertyInput {
  id: Int
  materialDefinition: CreateMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  scenario: CreateScenarioParentInput
}

input CreateOneScenarioScenarioAttributeInput {
  connect: ConnectScenarioScenarioAttributeInput
  create: CreateScenarioScenarioAttributeInput
}

input CreateOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
}

input CreateOperationalLocationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateOperationalLocationMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
}

input CreateOperationalLocationOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
}

input CreateOperationalLocationParentInput {
  connect: FindOperationalLocationInput
  create: CreateOperationalLocationInput
  upsert: UpsertOperationalLocationInput
}

input CreateOperationalLocationSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  scenario: CreateScenarioParentInput
}

input CreateOperationalLocationSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateOperationalLocationSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  operationsType: String
  scenario: CreateScenarioParentInput
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateOperationsDefinitionClassOperationsDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: CreateScenarioParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateOperationsDefinitionClassOrderItemInput {
  id: Int
  order: CreateOrderParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOperationsDefinitionClassParentInput {
  connect: FindOperationsDefinitionClassInput
  create: CreateOperationsDefinitionClassInput
  upsert: UpsertOperationsDefinitionClassInput
}

input CreateOperationsDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: CreateScenarioParentInput
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateOperationsDefinitionOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsDefinitionParentInput {
  connect: FindOperationsDefinitionInput
  create: CreateOperationsDefinitionInput
  upsert: UpsertOperationsDefinitionInput
}

input CreateOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: CreateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateOperationsRequestOperationsRequestEquipmentInput {
  id: Int
  equipment: CreateEquipmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestOperationsRequestPersonnelInput {
  id: Int
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestOperationsRequestProfileInput {
  id: Int
  orderItem: CreateOrderItemParentInput
  startupCost: Float
  quantity: Float
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestParentInput {
  connect: FindOperationsRequestInput
  create: CreateOperationsRequestInput
  upsert: UpsertOperationsRequestInput
}

input CreateOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestProfileInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  orderItem: CreateOrderItemParentInput
  startupCost: Float
  quantity: Float
  scenario: CreateScenarioParentInput
}

input CreateOperationsRequestSegmentRequirementInput {
  id: Int
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: CreateScenarioParentInput
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateOperationsSegmentChangeoverSetItemInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: CreateOperationsSegmentParentInput
  toOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentDescendantInput {
  id: Int
  ascendant: CreateOperationsSegmentParentInput
  descendant: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentMaterialSpecificationParentInput {
  connect: FindOperationsSegmentMaterialSpecificationInput
  create: CreateOperationsSegmentMaterialSpecificationInput
  upsert: UpsertOperationsSegmentMaterialSpecificationInput
}

input CreateOperationsSegmentOperationsRequestInput {
  id: Int
  scenario: CreateScenarioParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: CreateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  id: Int
  toOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  id: Int
  fromOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentDescendantAscendantInput {
  id: Int
  descendant: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentDescendantDescendantInput {
  id: Int
  ascendant: CreateOperationsSegmentParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: CreateOperationsDefinitionParentInput
  scenario: CreateScenarioParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  scenario: CreateScenarioParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentParentInput {
  connect: FindOperationsSegmentInput
  create: CreateOperationsSegmentInput
  upsert: UpsertOperationsSegmentInput
}

input CreateOperationsSegmentPersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentPropertyInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateOperationsSegmentSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: CreateScenarioParentInput
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationProperty: CreateOptimisationPropertyParentInput
  description: String
  priority: Int
  scenario: CreateScenarioParentInput
}

input CreateOptimisationHierarchyEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input CreateOptimisationHierarchyOptimisationHierarchyAttributeInput {
  id: Int
  optimisationProperty: CreateOptimisationPropertyParentInput
  description: String
  priority: Int
  scenario: CreateScenarioParentInput
}

input CreateOptimisationHierarchyParentInput {
  connect: FindOptimisationHierarchyInput
  create: CreateOptimisationHierarchyInput
  upsert: UpsertOptimisationHierarchyInput
}

input CreateOptimisationPreferredSequenceEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  scenario: CreateScenarioParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  optimisationProperty: CreateOptimisationPropertyParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  priority: Int!
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  priority: Int!
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPreferredSequenceParentInput {
  connect: FindOptimisationPreferredSequenceInput
  create: CreateOptimisationPreferredSequenceInput
  upsert: UpsertOptimisationPreferredSequenceInput
}

input CreateOptimisationPropertyInput {
  id: Int
  name: String
  scenario: CreateScenarioParentInput
  optimisationPropertyValues: CreateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: CreateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input CreateOptimisationPropertyOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  description: String
  priority: Int
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPropertyOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyOptimisationPropertyValueInput {
  id: Int
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
  changeoverSetItemsFromValue: CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: CreateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: CreateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyParentInput {
  connect: FindOptimisationPropertyInput
  create: CreateOptimisationPropertyInput
  upsert: UpsertOptimisationPropertyInput
}

input CreateOptimisationPropertyValueChangeoverSetItemFromValueInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: CreateScenarioParentInput
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateOptimisationPropertyValueChangeoverSetItemToValueInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: CreateScenarioParentInput
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateOptimisationPropertyValueColourSchemeItemInput {
  id: Int
  colourScheme: CreateColourSchemeParentInput
  red: Int
  green: Int
  blue: Int
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPropertyValueInput {
  id: Int
  optimisationProperty: CreateOptimisationPropertyParentInput
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
  changeoverSetItemsFromValue: CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: CreateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: CreateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input CreateOptimisationPropertyValueMaterialPropertyInput {
  id: Int
  materialDefinition: CreateMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  priority: Int!
  scenario: CreateScenarioParentInput
}

input CreateOptimisationPropertyValueParentInput {
  connect: FindOptimisationPropertyValueInput
  create: CreateOptimisationPropertyValueInput
  upsert: UpsertOptimisationPropertyValueInput
}

input CreateOptimizationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
}

input CreateOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: CreateOrderStatusParentInput
  priority: Int
  scenario: CreateScenarioParentInput
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateOrderItemInput {
  id: Int
  order: CreateOrderParentInput
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOrderItemOperationsRequestProfileInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  startupCost: Float
  quantity: Float
  scenario: CreateScenarioParentInput
}

input CreateOrderItemParentInput {
  connect: FindOrderItemInput
  create: CreateOrderItemInput
  upsert: UpsertOrderItemInput
}

input CreateOrderOrderItemInput {
  id: Int
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateOrderOrderPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateOrderParentInput {
  connect: FindOrderInput
  create: CreateOrderInput
  upsert: UpsertOrderInput
}

input CreateOrderPropertyInput {
  id: Int
  order: CreateOrderParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateOrderStatusInput {
  id: Int
  status: String
  scenario: CreateScenarioParentInput
  orders: CreateManyOrderStatusOrdersInput
}

input CreateOrderStatusOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: CreateScenarioParentInput
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateOrderStatusParentInput {
  connect: FindOrderStatusInput
  create: CreateOrderStatusInput
  upsert: UpsertOrderStatusInput
}

input CreatePersonDowntimePeriodInput {
  id: Int
  person: CreatePersonParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  scenario: CreateScenarioParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: CreateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: CreateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: CreateManyPersonPersonDowntimePeriodsInput
}

input CreatePersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: CreateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassParentInput {
  connect: FindPersonnelClassInput
  create: CreatePersonnelClassInput
  upsert: UpsertPersonnelClassInput
}

input CreatePersonnelClassPersonMemberInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassPersonnelCapabilityInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassPersonnelClassPersonMemberInput {
  id: Int
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassPersonnelClassPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassPersonnelPositionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelPositionPersonMembers: CreateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreatePersonnelClassPropertyInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelClassSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: CreateScenarioParentInput
  personnelPositionPersonMembers: CreateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreatePersonnelPositionParentInput {
  connect: FindPersonnelPositionInput
  create: CreatePersonnelPositionInput
  upsert: UpsertPersonnelPositionInput
}

input CreatePersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonnelPositionPersonnelPositionPersonMemberInput {
  id: Int
  person: CreatePersonParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonnelPositionPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonnelPositionPropertyInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonParentInput {
  connect: FindPersonInput
  create: CreatePersonInput
  upsert: UpsertPersonInput
}

input CreatePersonPersonDowntimePeriodInput {
  id: Int
  downtimePeriod: CreateDowntimePeriodParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  scenario: CreateScenarioParentInput
}

input CreatePersonPersonPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonPropertyInput {
  id: Int
  person: CreatePersonParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreatePersonSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreateScenarioAttributeInput {
  id: Int
  scenario: CreateScenarioParentInput
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input CreateScenarioAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  availabilityTemplateItems: CreateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: CreateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input CreateScenarioAvailabilityTemplateItemInput {
  id: Int
  availabilityTemplate: CreateAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: String
  endTime: String
}

input CreateScenarioCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems: CreateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: CreateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: CreateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input CreateScenarioCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: CreateAvailabilityTemplateParentInput
}

input CreateScenarioCalendarisedThroughputSetInput {
  id: Int
  name: String
  calendarisedThroughputSetItems: CreateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput
}

input CreateScenarioCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
}

input CreateScenarioChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems: CreateManyChangeoverSetChangeoverSetItemsInput
  equipments: CreateManyChangeoverSetEquipmentsInput
}

input CreateScenarioChangeoverSetItemInput {
  id: Int
  changeoverSet: CreateChangeoverSetParentInput
  fromValue: CreateOptimisationPropertyValueParentInput
  toValue: CreateOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: CreateOperationsSegmentParentInput
}

input CreateScenarioColourSchemeInput {
  id: Int
  name: String
  colourSchemeItems: CreateManyColourSchemeColourSchemeItemsInput
}

input CreateScenarioColourSchemeItemInput {
  id: Int
  colourScheme: CreateColourSchemeParentInput
  propertyValue: CreateOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input CreateScenarioConfigurableApplicationParameterInput {
  id: Int
  name: String!
  dataType: String!
  valueAsString: String
}

input CreateScenarioDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipmentDowntimePeriods: CreateManyDowntimePeriodEquipmentDowntimePeriodsInput
  personDowntimePeriods: CreateManyDowntimePeriodPersonDowntimePeriodsInput
}

input CreateScenarioEquipmentCapabilityInput {
  id: Int
  equipment: CreateEquipmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateScenarioEquipmentChildInput {
  id: Int
  parent: CreateEquipmentParentInput
  child: CreateEquipmentParentInput
}

input CreateScenarioEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
}

input CreateScenarioEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  equipmentClassEquipmentMembers: CreateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input CreateScenarioEquipmentDescendantInput {
  id: Int
  ascendant: CreateEquipmentParentInput
  descendant: CreateEquipmentParentInput
}

input CreateScenarioEquipmentDowntimePeriodInput {
  id: Int
  equipment: CreateEquipmentParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
}

input CreateScenarioEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: CreateHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: CreateChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  hierarchyScopes: CreateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: CreateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: CreateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: CreateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: CreateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: CreateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: CreateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: CreateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: CreateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: CreateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: CreateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: CreateManyEquipmentEquipmentDowntimePeriodsInput
}

input CreateScenarioEquipmentPropertyInput {
  id: Int
  equipment: CreateEquipmentParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioHierarchyScopeDescendantInput {
  id: Int
  ascendant: CreateHierarchyScopeParentInput
  descendant: CreateHierarchyScopeParentInput
}

input CreateScenarioHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: CreateEquipmentParentInput
  parent: CreateHierarchyScopeParentInput
  hierarchyScopes: CreateManyHierarchyScopeHierarchyScopesInput
  equipments: CreateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: CreateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: CreateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: CreateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: CreateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: CreateManyHierarchyScopePersonnelClassesInput
  personnelPositions: CreateManyHierarchyScopePersonnelPositionsInput
  persons: CreateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: CreateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: CreateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: CreateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: CreateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: CreateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: CreateManyHierarchyScopeSegmentRequirementsInput
  materialLots: CreateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyHierarchyScopeOpenPurchaseOrdersInput
}

input CreateScenarioInput {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes: CreateManyScenarioHierarchyScopesInput
  optimisationProperties: CreateManyScenarioOptimisationPropertiesInput
  optimisationPropertyValues: CreateManyScenarioOptimisationPropertyValuesInput
  changeoverSets: CreateManyScenarioChangeoverSetsInput
  changeoverSetItems: CreateManyScenarioChangeoverSetItemsInput
  availabilityTemplates: CreateManyScenarioAvailabilityTemplatesInput
  availabilityTemplateItems: CreateManyScenarioAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSets: CreateManyScenarioCalendarisedAvailabilityTemplateSetsInput
  calendarisedAvailabilityTemplateSetItems: CreateManyScenarioCalendarisedAvailabilityTemplateSetItemsInput
  optimizationHierarchies: CreateManyScenarioOptimizationHierarchiesInput
  equipments: CreateManyScenarioEquipmentsInput
  hierarchyScopeDescendants: CreateManyScenarioHierarchyScopeDescendantsInput
  equipmentChildren: CreateManyScenarioEquipmentChildrenInput
  equipmentDescendants: CreateManyScenarioEquipmentDescendantsInput
  equipmentProperties: CreateManyScenarioEquipmentPropertiesInput
  equipmentClasses: CreateManyScenarioEquipmentClassesInput
  equipmentClassEquipmentMembers: CreateManyScenarioEquipmentClassEquipmentMembersInput
  materialDefinitions: CreateManyScenarioMaterialDefinitionsInput
  personnelClasses: CreateManyScenarioPersonnelClassesInput
  personnelClassProperties: CreateManyScenarioPersonnelClassPropertiesInput
  personnelPositions: CreateManyScenarioPersonnelPositionsInput
  persons: CreateManyScenarioPersonsInput
  personProperties: CreateManyScenarioPersonPropertiesInput
  personnelClassPersonMembers: CreateManyScenarioPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: CreateManyScenarioPersonnelPositionPersonMembersInput
  personnelPositionProperties: CreateManyScenarioPersonnelPositionPropertiesInput
  operationsDefinitionClasses: CreateManyScenarioOperationsDefinitionClassesInput
  operationsDefinitions: CreateManyScenarioOperationsDefinitionsInput
  operationsSegments: CreateManyScenarioOperationsSegmentsInput
  equipmentCapabilities: CreateManyScenarioEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyScenarioPersonnelCapabilitiesInput
  operationsSegmentDescendants: CreateManyScenarioOperationsSegmentDescendantsInput
  operationsSegmentProperties: CreateManyScenarioOperationsSegmentPropertiesInput
  operationsSegmentDependencies: CreateManyScenarioOperationsSegmentDependenciesInput
  operationalLocations: CreateManyScenarioOperationalLocationsInput
  calendarisedThroughputSets: CreateManyScenarioCalendarisedThroughputSetsInput
  calendarisedThroughputSetItems: CreateManyScenarioCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: CreateManyScenarioOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyScenarioOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyScenarioOperationsSegmentEquipmentSpecificationsInput
  timePeriods: CreateManyScenarioTimePeriodsInput
  orderStatuses: CreateManyScenarioOrderStatusesInput
  orders: CreateManyScenarioOrdersInput
  orderItems: CreateManyScenarioOrderItemsInput
  operationsRequests: CreateManyScenarioOperationsRequestsInput
  operationsRequestPersonnels: CreateManyScenarioOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyScenarioOperationsRequestEquipmentsInput
  operationsRequestProfiles: CreateManyScenarioOperationsRequestProfilesInput
  segmentRequirements: CreateManyScenarioSegmentRequirementsInput
  segmentRequirementDescendants: CreateManyScenarioSegmentRequirementDescendantsInput
  segmentRequirementProperties: CreateManyScenarioSegmentRequirementPropertiesInput
  materialLots: CreateManyScenarioMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyScenarioSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyScenarioSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyScenarioSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: CreateManyScenarioOpenPurchaseOrdersInput
  materialProperties: CreateManyScenarioMaterialPropertiesInput
  configurableApplicationParameters: CreateManyScenarioConfigurableApplicationParametersInput
  colourSchemes: CreateManyScenarioColourSchemesInput
  colourSchemeItems: CreateManyScenarioColourSchemeItemsInput
  downtimePeriods: CreateManyScenarioDowntimePeriodsInput
  equipmentDowntimePeriods: CreateManyScenarioEquipmentDowntimePeriodsInput
  personDowntimePeriods: CreateManyScenarioPersonDowntimePeriodsInput
  optimisationHierarchies: CreateManyScenarioOptimisationHierarchiesInput
  optimisationHierarchyAttributes: CreateManyScenarioOptimisationHierarchyAttributesInput
  scenarioAttribute: CreateOneScenarioScenarioAttributeInput
  optimisationPreferredSequences: CreateManyScenarioOptimisationPreferredSequencesInput
  optimisationPreferredSequenceItems: CreateManyScenarioOptimisationPreferredSequenceItemsInput
  orderProperties: CreateManyScenarioOrderPropertiesInput
}

input CreateScenarioMaterialDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsSegmentMaterialSpecifications: CreateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: CreateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: CreateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: CreateManyMaterialDefinitionMaterialPropertiesInput
}

input CreateScenarioMaterialLotInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: CreateMaterialDefinitionParentInput
  operationalLocation: CreateOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements: CreateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input CreateScenarioMaterialPropertyInput {
  id: Int
  materialDefinition: CreateMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
}

input CreateScenarioOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

input CreateScenarioOperationalLocationInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications: CreateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: CreateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: CreateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input CreateScenarioOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: CreateHierarchyScopeParentInput
  operationsType: String
  operationsDefinitions: CreateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: CreateManyOperationsDefinitionClassOrderItemsInput
}

input CreateScenarioOperationsDefinitionInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  operationsSegments: CreateManyOperationsDefinitionOperationsSegmentsInput
}

input CreateScenarioOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  equipment: CreateEquipmentParentInput
}

input CreateScenarioOperationsRequestInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: CreateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: CreateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: CreateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: CreateManyOperationsRequestSegmentRequirementsInput
}

input CreateScenarioOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  person: CreatePersonParentInput
}

input CreateScenarioOperationsRequestProfileInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  orderItem: CreateOrderItemParentInput
  startupCost: Float
  quantity: Float
}

input CreateScenarioOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: CreateOperationsSegmentParentInput
  toOperationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input CreateScenarioOperationsSegmentDescendantInput {
  id: Int
  ascendant: CreateOperationsSegmentParentInput
  descendant: CreateOperationsSegmentParentInput
}

input CreateScenarioOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipmentClass: CreateEquipmentClassParentInput
  equipment: CreateEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateScenarioOperationsSegmentInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: CreateOperationsSegmentParentInput
  operationsDefinition: CreateOperationsDefinitionParentInput
  changeoverSetItems: CreateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: CreateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: CreateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: CreateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: CreateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: CreateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: CreateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: CreateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: CreateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: CreateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: CreateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: CreateManyOperationsSegmentSegmentRequirementsInput
}

input CreateScenarioOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
  parent: CreateOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: CreateCalendarisedThroughputSetParentInput
  operationsSegmentMaterialSpecifications: CreateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input CreateScenarioOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateScenarioOperationsSegmentPropertyInput {
  id: Int
  operationsSegment: CreateOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: CreateOptimisationHierarchyParentInput
  optimisationProperty: CreateOptimisationPropertyParentInput
  description: String
  priority: Int
}

input CreateScenarioOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  equipments: CreateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: CreateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input CreateScenarioOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  optimisationProperty: CreateOptimisationPropertyParentInput
  equipments: CreateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input CreateScenarioOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: CreateOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: CreateOptimisationPropertyValueParentInput
  priority: Int!
}

input CreateScenarioOptimisationPropertyInput {
  id: Int
  name: String
  optimisationPropertyValues: CreateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: CreateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: CreateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input CreateScenarioOptimisationPropertyValueInput {
  id: Int
  optimisationProperty: CreateOptimisationPropertyParentInput
  value: String
  dataType: String
  changeoverSetItemsFromValue: CreateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: CreateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: CreateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: CreateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: CreateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input CreateScenarioOptimizationHierarchyInput {
  id: Int
  externalId: String
  description: String
}

input CreateScenarioOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: CreateOrderStatusParentInput
  priority: Int
  orderItems: CreateManyOrderOrderItemsInput
  orderProperties: CreateManyOrderOrderPropertiesInput
}

input CreateScenarioOrderItemInput {
  id: Int
  order: CreateOrderParentInput
  operationsDefinitionClass: CreateOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: CreateManyOrderItemOperationsRequestProfilesInput
}

input CreateScenarioOrderPropertyInput {
  id: Int
  order: CreateOrderParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioOrderStatusInput {
  id: Int
  status: String
  orders: CreateManyOrderStatusOrdersInput
}

input CreateScenarioParentInput {
  connect: FindScenarioInput
  create: CreateScenarioInput
  upsert: UpsertScenarioInput
}

input CreateScenarioPersonDowntimePeriodInput {
  id: Int
  person: CreatePersonParentInput
  downtimePeriod: CreateDowntimePeriodParentInput
}

input CreateScenarioPersonInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CreateCalendarisedAvailabilityTemplateSetParentInput
  personProperties: CreateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: CreateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: CreateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: CreateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: CreateManyPersonPersonDowntimePeriodsInput
}

input CreateScenarioPersonnelCapabilityInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: CreateOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input CreateScenarioPersonnelClassInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  personnelClassProperties: CreateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: CreateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: CreateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: CreateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: CreateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: CreateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input CreateScenarioPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  person: CreatePersonParentInput
}

input CreateScenarioPersonnelClassPropertyInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioPersonnelPositionInput {
  id: Int
  personnelClass: CreatePersonnelClassParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  personnelPositionPersonMembers: CreateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: CreateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input CreateScenarioPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  person: CreatePersonParentInput
}

input CreateScenarioPersonnelPositionPropertyInput {
  id: Int
  personnelPosition: CreatePersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioPersonPropertyInput {
  id: Int
  person: CreatePersonParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioScenarioAttributeInput {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input CreateScenarioSegmentRequirementDescendantInput {
  id: Int
  ascendant: CreateSegmentRequirementParentInput
  descendant: CreateSegmentRequirementParentInput
}

input CreateScenarioSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
}

input CreateScenarioSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateScenarioSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateScenarioSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
}

input CreateScenarioSegmentRequirementPropertyInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
}

input CreateScenarioTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
}

input CreateSegmentRequirementDescendantInput {
  id: Int
  ascendant: CreateSegmentRequirementParentInput
  descendant: CreateSegmentRequirementParentInput
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  parentSegmentRequirement: CreateSegmentRequirementParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: CreateScenarioParentInput
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementMaterialRequirementParentInput {
  connect: FindSegmentRequirementMaterialRequirementInput
  create: CreateSegmentRequirementMaterialRequirementInput
  upsert: UpsertSegmentRequirementMaterialRequirementInput
}

input CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementParentInput {
  connect: FindSegmentRequirementInput
  create: CreateSegmentRequirementInput
  upsert: UpsertSegmentRequirementInput
}

input CreateSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementPropertyInput {
  id: Int
  segmentRequirement: CreateSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementSegmentRequirementDescendantAscendantInput {
  id: Int
  descendant: CreateSegmentRequirementParentInput
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementSegmentRequirementDescendantDescendantInput {
  id: Int
  ascendant: CreateSegmentRequirementParentInput
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  equipment: CreateEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementSegmentRequirementInput {
  id: Int
  operationsRequest: CreateOperationsRequestParentInput
  operationsSegment: CreateOperationsSegmentParentInput
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: CreateScenarioParentInput
  segmentRequirements: CreateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: CreateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: CreateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: CreateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: CreateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: CreateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input CreateSegmentRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  materialDefinition: CreateMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  materialLot: CreateMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: CreateSegmentRequirementMaterialRequirementParentInput
  scenario: CreateScenarioParentInput
  segmentRequirementMaterialRequirements: CreateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  id: Int
  hierarchyScope: CreateHierarchyScopeParentInput
  externalId: String
  person: CreatePersonParentInput
  personnelClass: CreatePersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: CreateOperationalLocationParentInput
  personnelUse: String
  scenario: CreateScenarioParentInput
}

input CreateSegmentRequirementSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: CreateScenarioParentInput
}

input CreateTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
  scenario: CreateScenarioParentInput
}

type DowntimePeriod {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: Scenario
  equipmentDowntimePeriods(where: FilterDowntimePeriodEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriodEquipmentDowntimePeriod]
  personDowntimePeriods(where: FilterDowntimePeriodPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriodPersonDowntimePeriod]
}

type DowntimePeriodConnection {
  pageInfo: PageInfo
  edges: [DowntimePeriodEdge]
}

type DowntimePeriodEdge {
  node: DowntimePeriod
  cursor: String
}

type DowntimePeriodEquipmentDowntimePeriod {
  id: Int
  equipment: Equipment
  scenario: Scenario
}

type DowntimePeriodPersonDowntimePeriod {
  id: Int
  person: Person
  scenario: Scenario
}

type Equipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type EquipmentCapability {
  id: Int
  equipment: Equipment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type EquipmentCapabilityConnection {
  pageInfo: PageInfo
  edges: [EquipmentCapabilityEdge]
}

type EquipmentCapabilityEdge {
  node: EquipmentCapability
  cursor: String
}

type EquipmentChild {
  id: Int
  parent: Equipment
  child: Equipment
  scenario: Scenario
}

type EquipmentChildConnection {
  pageInfo: PageInfo
  edges: [EquipmentChildEdge]
}

type EquipmentChildEdge {
  node: EquipmentChild
  cursor: String
}

type EquipmentClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  scenario: Scenario
  equipmentClassEquipmentMembers(where: FilterEquipmentClassEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassEquipmentClassEquipmentMember]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
}

type EquipmentClassConnection {
  pageInfo: PageInfo
  edges: [EquipmentClassEdge]
}

type EquipmentClassEdge {
  node: EquipmentClass
  cursor: String
}

type EquipmentClassEquipmentClassEquipmentMember {
  id: Int
  equipment: Equipment
  scenario: Scenario
}

type EquipmentClassEquipmentMember {
  id: Int
  equipmentClass: EquipmentClass
  equipment: Equipment
  scenario: Scenario
}

type EquipmentClassEquipmentMemberConnection {
  pageInfo: PageInfo
  edges: [EquipmentClassEquipmentMemberEdge]
}

type EquipmentClassEquipmentMemberEdge {
  node: EquipmentClassEquipmentMember
  cursor: String
}

type EquipmentClassOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type EquipmentConnection {
  pageInfo: PageInfo
  edges: [EquipmentEdge]
}

type EquipmentDescendant {
  id: Int
  ascendant: Equipment
  descendant: Equipment
  scenario: Scenario
}

type EquipmentDescendantConnection {
  pageInfo: PageInfo
  edges: [EquipmentDescendantEdge]
}

type EquipmentDescendantEdge {
  node: EquipmentDescendant
  cursor: String
}

type EquipmentDowntimePeriod {
  id: Int
  equipment: Equipment
  downtimePeriod: DowntimePeriod
  scenario: Scenario
}

type EquipmentDowntimePeriodConnection {
  pageInfo: PageInfo
  edges: [EquipmentDowntimePeriodEdge]
}

type EquipmentDowntimePeriodEdge {
  node: EquipmentDowntimePeriod
  cursor: String
}

type EquipmentEdge {
  node: Equipment
  cursor: String
}

type EquipmentEquipmentCapability {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type EquipmentEquipmentChildChild {
  id: Int
  parent: Equipment
  scenario: Scenario
}

type EquipmentEquipmentChildParent {
  id: Int
  child: Equipment
  scenario: Scenario
}

type EquipmentEquipmentClassEquipmentMember {
  id: Int
  equipmentClass: EquipmentClass
  scenario: Scenario
}

type EquipmentEquipmentDescendantAscendant {
  id: Int
  descendant: Equipment
  scenario: Scenario
}

type EquipmentEquipmentDescendantDescendant {
  id: Int
  ascendant: Equipment
  scenario: Scenario
}

type EquipmentEquipmentDowntimePeriod {
  id: Int
  downtimePeriod: DowntimePeriod
  scenario: Scenario
}

type EquipmentEquipmentProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type EquipmentHierarchyScope {
  id: Int
  externalId: String
  parent: HierarchyScope
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  hierarchyScopeDescendantsAscendant(where: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantAscendant]
  hierarchyScopeDescendantsDescendant(where: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantDescendant]
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
}

type EquipmentOperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  scenario: Scenario
}

type EquipmentOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type EquipmentProperty {
  id: Int
  equipment: Equipment
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type EquipmentPropertyConnection {
  pageInfo: PageInfo
  edges: [EquipmentPropertyEdge]
}

type EquipmentPropertyEdge {
  node: EquipmentProperty
  cursor: String
}

type EquipmentSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

input FilterAvailabilityTemplateAvailabilityTemplateItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  dayOfTheWeek: Int
  dayOfTheWeek_lt: Int
  dayOfTheWeek_le: Int
  dayOfTheWeek_ge: Int
  dayOfTheWeek_gt: Int
  dayOfTheWeek_ne: Int
  dayOfTheWeek_null: Boolean
  dayOfTheWeek_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  or: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  not: [FilterAvailabilityTemplateAvailabilityTemplateItemInput]
  scenario: FilterScenarioInput
}

input FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  scenario: FilterScenarioInput
}

input FilterAvailabilityTemplateInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterAvailabilityTemplateInput]
  or: [FilterAvailabilityTemplateInput]
  not: [FilterAvailabilityTemplateInput]
  scenario: FilterScenarioInput
  availabilityTemplateItems_some: FilterAvailabilityTemplateAvailabilityTemplateItemInput
  availabilityTemplateItems_none: FilterAvailabilityTemplateAvailabilityTemplateItemInput
  calendarisedAvailabilityTemplateSetItems_some: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
  calendarisedAvailabilityTemplateSetItems_none: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
}

input FilterAvailabilityTemplateItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  dayOfTheWeek: Int
  dayOfTheWeek_lt: Int
  dayOfTheWeek_le: Int
  dayOfTheWeek_ge: Int
  dayOfTheWeek_gt: Int
  dayOfTheWeek_ne: Int
  dayOfTheWeek_null: Boolean
  dayOfTheWeek_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterAvailabilityTemplateItemInput]
  or: [FilterAvailabilityTemplateItemInput]
  not: [FilterAvailabilityTemplateItemInput]
  availabilityTemplate: FilterAvailabilityTemplateInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  availabilityTemplate: FilterAvailabilityTemplateInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedAvailabilityTemplateSetEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  or: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  not: [FilterCalendarisedAvailabilityTemplateSetEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedAvailabilityTemplateSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetInput]
  or: [FilterCalendarisedAvailabilityTemplateSetInput]
  not: [FilterCalendarisedAvailabilityTemplateSetInput]
  scenario: FilterScenarioInput
  calendarisedAvailabilityTemplateSetItems_some: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  calendarisedAvailabilityTemplateSetItems_none: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  equipments_some: FilterCalendarisedAvailabilityTemplateSetEquipmentInput
  equipments_none: FilterCalendarisedAvailabilityTemplateSetEquipmentInput
  persons_some: FilterCalendarisedAvailabilityTemplateSetPersonInput
  persons_none: FilterCalendarisedAvailabilityTemplateSetPersonInput
}

input FilterCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterCalendarisedAvailabilityTemplateSetItemInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  availabilityTemplate: FilterAvailabilityTemplateInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedAvailabilityTemplateSetPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  or: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  not: [FilterCalendarisedAvailabilityTemplateSetPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  or: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  not: [FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  scenario: FilterScenarioInput
}

input FilterCalendarisedThroughputSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterCalendarisedThroughputSetInput]
  or: [FilterCalendarisedThroughputSetInput]
  not: [FilterCalendarisedThroughputSetInput]
  scenario: FilterScenarioInput
  calendarisedThroughputSetItems_some: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput
  operationsSegmentMaterialSpecifications_some: FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput
}

input FilterCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterCalendarisedThroughputSetItemInput]
  or: [FilterCalendarisedThroughputSetItemInput]
  not: [FilterCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  or: [FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  not: [FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  scenario: FilterScenarioInput
}

input FilterChangeoverSetChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterChangeoverSetChangeoverSetItemInput]
  or: [FilterChangeoverSetChangeoverSetItemInput]
  not: [FilterChangeoverSetChangeoverSetItemInput]
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterChangeoverSetEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterChangeoverSetEquipmentInput]
  or: [FilterChangeoverSetEquipmentInput]
  not: [FilterChangeoverSetEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterChangeoverSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  defaultTime: Float
  defaultTime_lt: Float
  defaultTime_le: Float
  defaultTime_ge: Float
  defaultTime_gt: Float
  defaultTime_ne: Float
  defaultTime_null: Boolean
  defaultTime_in: [Float]
  and: [FilterChangeoverSetInput]
  or: [FilterChangeoverSetInput]
  not: [FilterChangeoverSetInput]
  scenario: FilterScenarioInput
  changeoverSetItems_some: FilterChangeoverSetChangeoverSetItemInput
  changeoverSetItems_none: FilterChangeoverSetChangeoverSetItemInput
  equipments_some: FilterChangeoverSetEquipmentInput
  equipments_none: FilterChangeoverSetEquipmentInput
}

input FilterChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterChangeoverSetItemInput]
  or: [FilterChangeoverSetItemInput]
  not: [FilterChangeoverSetItemInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterColourSchemeColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterColourSchemeColourSchemeItemInput]
  or: [FilterColourSchemeColourSchemeItemInput]
  not: [FilterColourSchemeColourSchemeItemInput]
  propertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterColourSchemeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterColourSchemeInput]
  or: [FilterColourSchemeInput]
  not: [FilterColourSchemeInput]
  scenario: FilterScenarioInput
  colourSchemeItems_some: FilterColourSchemeColourSchemeItemInput
  colourSchemeItems_none: FilterColourSchemeColourSchemeItemInput
}

input FilterColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterColourSchemeItemInput]
  or: [FilterColourSchemeItemInput]
  not: [FilterColourSchemeItemInput]
  colourScheme: FilterColourSchemeInput
  propertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterConfigurableApplicationParameterInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  valueAsString: String
  valueAsString_lt: String
  valueAsString_le: String
  valueAsString_ge: String
  valueAsString_gt: String
  valueAsString_ne: String
  valueAsString_null: Boolean
  valueAsString_in: [String]
  valueAsString_like: String
  and: [FilterConfigurableApplicationParameterInput]
  or: [FilterConfigurableApplicationParameterInput]
  not: [FilterConfigurableApplicationParameterInput]
  scenario: FilterScenarioInput
}

input FilterDowntimePeriodEquipmentDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDowntimePeriodEquipmentDowntimePeriodInput]
  or: [FilterDowntimePeriodEquipmentDowntimePeriodInput]
  not: [FilterDowntimePeriodEquipmentDowntimePeriodInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  percentageAvailability: Float
  percentageAvailability_lt: Float
  percentageAvailability_le: Float
  percentageAvailability_ge: Float
  percentageAvailability_gt: Float
  percentageAvailability_ne: Float
  percentageAvailability_null: Boolean
  percentageAvailability_in: [Float]
  and: [FilterDowntimePeriodInput]
  or: [FilterDowntimePeriodInput]
  not: [FilterDowntimePeriodInput]
  scenario: FilterScenarioInput
  equipmentDowntimePeriods_some: FilterDowntimePeriodEquipmentDowntimePeriodInput
  equipmentDowntimePeriods_none: FilterDowntimePeriodEquipmentDowntimePeriodInput
  personDowntimePeriods_some: FilterDowntimePeriodPersonDowntimePeriodInput
  personDowntimePeriods_none: FilterDowntimePeriodPersonDowntimePeriodInput
}

input FilterDowntimePeriodPersonDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterDowntimePeriodPersonDowntimePeriodInput]
  or: [FilterDowntimePeriodPersonDowntimePeriodInput]
  not: [FilterDowntimePeriodPersonDowntimePeriodInput]
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterEquipmentCapabilityInput]
  or: [FilterEquipmentCapabilityInput]
  not: [FilterEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentChildInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentChildInput]
  or: [FilterEquipmentChildInput]
  not: [FilterEquipmentChildInput]
  parent: FilterEquipmentInput
  child: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentClassEquipmentClassEquipmentMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentClassEquipmentClassEquipmentMemberInput]
  or: [FilterEquipmentClassEquipmentClassEquipmentMemberInput]
  not: [FilterEquipmentClassEquipmentClassEquipmentMemberInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentClassEquipmentMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentClassEquipmentMemberInput]
  or: [FilterEquipmentClassEquipmentMemberInput]
  not: [FilterEquipmentClassEquipmentMemberInput]
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterEquipmentClassInput]
  or: [FilterEquipmentClassInput]
  not: [FilterEquipmentClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  equipmentClassEquipmentMembers_some: FilterEquipmentClassEquipmentClassEquipmentMemberInput
  equipmentClassEquipmentMembers_none: FilterEquipmentClassEquipmentClassEquipmentMemberInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput
}

input FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  or: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  not: [FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterEquipmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentDescendantInput]
  or: [FilterEquipmentDescendantInput]
  not: [FilterEquipmentDescendantInput]
  ascendant: FilterEquipmentInput
  descendant: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentDowntimePeriodInput]
  or: [FilterEquipmentDowntimePeriodInput]
  not: [FilterEquipmentDowntimePeriodInput]
  equipment: FilterEquipmentInput
  downtimePeriod: FilterDowntimePeriodInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterEquipmentEquipmentCapabilityInput]
  or: [FilterEquipmentEquipmentCapabilityInput]
  not: [FilterEquipmentEquipmentCapabilityInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentChildChildInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentChildChildInput]
  or: [FilterEquipmentEquipmentChildChildInput]
  not: [FilterEquipmentEquipmentChildChildInput]
  parent: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentChildParentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentChildParentInput]
  or: [FilterEquipmentEquipmentChildParentInput]
  not: [FilterEquipmentEquipmentChildParentInput]
  child: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentClassEquipmentMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentClassEquipmentMemberInput]
  or: [FilterEquipmentEquipmentClassEquipmentMemberInput]
  not: [FilterEquipmentEquipmentClassEquipmentMemberInput]
  equipmentClass: FilterEquipmentClassInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentDescendantAscendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentDescendantAscendantInput]
  or: [FilterEquipmentEquipmentDescendantAscendantInput]
  not: [FilterEquipmentEquipmentDescendantAscendantInput]
  descendant: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentDescendantDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentDescendantDescendantInput]
  or: [FilterEquipmentEquipmentDescendantDescendantInput]
  not: [FilterEquipmentEquipmentDescendantDescendantInput]
  ascendant: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentEquipmentDowntimePeriodInput]
  or: [FilterEquipmentEquipmentDowntimePeriodInput]
  not: [FilterEquipmentEquipmentDowntimePeriodInput]
  downtimePeriod: FilterDowntimePeriodInput
  scenario: FilterScenarioInput
}

input FilterEquipmentEquipmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterEquipmentEquipmentPropertyInput]
  or: [FilterEquipmentEquipmentPropertyInput]
  not: [FilterEquipmentEquipmentPropertyInput]
  scenario: FilterScenarioInput
}

input FilterEquipmentHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterEquipmentHierarchyScopeInput]
  or: [FilterEquipmentHierarchyScopeInput]
  not: [FilterEquipmentHierarchyScopeInput]
  parent: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterHierarchyScopeHierarchyScopeInput
  hierarchyScopes_none: FilterHierarchyScopeHierarchyScopeInput
  equipments_some: FilterHierarchyScopeEquipmentInput
  equipments_none: FilterHierarchyScopeEquipmentInput
  hierarchyScopeDescendantsAscendant_some: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput
  hierarchyScopeDescendantsAscendant_none: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput
  hierarchyScopeDescendantsDescendant_some: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput
  hierarchyScopeDescendantsDescendant_none: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput
  equipmentClasses_some: FilterHierarchyScopeEquipmentClassInput
  equipmentClasses_none: FilterHierarchyScopeEquipmentClassInput
  materialDefinitions_some: FilterHierarchyScopeMaterialDefinitionInput
  materialDefinitions_none: FilterHierarchyScopeMaterialDefinitionInput
  personnelClasses_some: FilterHierarchyScopePersonnelClassInput
  personnelClasses_none: FilterHierarchyScopePersonnelClassInput
  personnelPositions_some: FilterHierarchyScopePersonnelPositionInput
  personnelPositions_none: FilterHierarchyScopePersonnelPositionInput
  persons_some: FilterHierarchyScopePersonInput
  persons_none: FilterHierarchyScopePersonInput
  operationsDefinitionClasses_some: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitions_some: FilterHierarchyScopeOperationsDefinitionInput
  operationsDefinitions_none: FilterHierarchyScopeOperationsDefinitionInput
  operationsSegments_some: FilterHierarchyScopeOperationsSegmentInput
  operationsSegments_none: FilterHierarchyScopeOperationsSegmentInput
  equipmentCapabilities_some: FilterHierarchyScopeEquipmentCapabilityInput
  equipmentCapabilities_none: FilterHierarchyScopeEquipmentCapabilityInput
  personnelCapabilities_some: FilterHierarchyScopePersonnelCapabilityInput
  personnelCapabilities_none: FilterHierarchyScopePersonnelCapabilityInput
  operationalLocations_some: FilterHierarchyScopeOperationalLocationInput
  operationalLocations_none: FilterHierarchyScopeOperationalLocationInput
  operationsSegmentMaterialSpecifications_some: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterHierarchyScopeOperationsRequestInput
  operationsRequests_none: FilterHierarchyScopeOperationsRequestInput
  segmentRequirements_some: FilterHierarchyScopeSegmentRequirementInput
  segmentRequirements_none: FilterHierarchyScopeSegmentRequirementInput
  materialLots_some: FilterHierarchyScopeMaterialLotInput
  materialLots_none: FilterHierarchyScopeMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  openPurchaseOrders_some: FilterHierarchyScopeOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterHierarchyScopeOpenPurchaseOrderInput
}

input FilterEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterEquipmentInput]
  or: [FilterEquipmentInput]
  not: [FilterEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  equipmentChildrenParent_some: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenParent_none: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenChild_some: FilterEquipmentEquipmentChildChildInput
  equipmentChildrenChild_none: FilterEquipmentEquipmentChildChildInput
  equipmentDescendantsAscendant_some: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsAscendant_none: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsDescendant_some: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentDescendantsDescendant_none: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClassEquipmentMembers_some: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentClassEquipmentMembers_none: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  equipmentDowntimePeriods_some: FilterEquipmentEquipmentDowntimePeriodInput
  equipmentDowntimePeriods_none: FilterEquipmentEquipmentDowntimePeriodInput
}

input FilterEquipmentOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterEquipmentOperationsRequestEquipmentInput]
  or: [FilterEquipmentOperationsRequestEquipmentInput]
  not: [FilterEquipmentOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  scenario: FilterScenarioInput
}

input FilterEquipmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  or: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  not: [FilterEquipmentOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterEquipmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterEquipmentPropertyInput]
  or: [FilterEquipmentPropertyInput]
  not: [FilterEquipmentPropertyInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterEquipmentSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  or: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  not: [FilterEquipmentSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterHierarchyScopeDescendantInput]
  or: [FilterHierarchyScopeDescendantInput]
  not: [FilterHierarchyScopeDescendantInput]
  ascendant: FilterHierarchyScopeInput
  descendant: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterHierarchyScopeEquipmentCapabilityInput]
  or: [FilterHierarchyScopeEquipmentCapabilityInput]
  not: [FilterHierarchyScopeEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterHierarchyScopeEquipmentClassInput]
  or: [FilterHierarchyScopeEquipmentClassInput]
  not: [FilterHierarchyScopeEquipmentClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeEquipmentInput]
  or: [FilterHierarchyScopeEquipmentInput]
  not: [FilterHierarchyScopeEquipmentInput]
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeHierarchyScopeDescendantAscendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterHierarchyScopeHierarchyScopeDescendantAscendantInput]
  or: [FilterHierarchyScopeHierarchyScopeDescendantAscendantInput]
  not: [FilterHierarchyScopeHierarchyScopeDescendantAscendantInput]
  descendant: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeHierarchyScopeDescendantDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterHierarchyScopeHierarchyScopeDescendantDescendantInput]
  or: [FilterHierarchyScopeHierarchyScopeDescendantDescendantInput]
  not: [FilterHierarchyScopeHierarchyScopeDescendantDescendantInput]
  ascendant: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterHierarchyScopeHierarchyScopeInput]
  or: [FilterHierarchyScopeHierarchyScopeInput]
  not: [FilterHierarchyScopeHierarchyScopeInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterHierarchyScopeInput]
  or: [FilterHierarchyScopeInput]
  not: [FilterHierarchyScopeInput]
  equipment: FilterEquipmentInput
  parent: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterHierarchyScopeHierarchyScopeInput
  hierarchyScopes_none: FilterHierarchyScopeHierarchyScopeInput
  equipments_some: FilterHierarchyScopeEquipmentInput
  equipments_none: FilterHierarchyScopeEquipmentInput
  hierarchyScopeDescendantsAscendant_some: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput
  hierarchyScopeDescendantsAscendant_none: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput
  hierarchyScopeDescendantsDescendant_some: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput
  hierarchyScopeDescendantsDescendant_none: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput
  equipmentClasses_some: FilterHierarchyScopeEquipmentClassInput
  equipmentClasses_none: FilterHierarchyScopeEquipmentClassInput
  materialDefinitions_some: FilterHierarchyScopeMaterialDefinitionInput
  materialDefinitions_none: FilterHierarchyScopeMaterialDefinitionInput
  personnelClasses_some: FilterHierarchyScopePersonnelClassInput
  personnelClasses_none: FilterHierarchyScopePersonnelClassInput
  personnelPositions_some: FilterHierarchyScopePersonnelPositionInput
  personnelPositions_none: FilterHierarchyScopePersonnelPositionInput
  persons_some: FilterHierarchyScopePersonInput
  persons_none: FilterHierarchyScopePersonInput
  operationsDefinitionClasses_some: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterHierarchyScopeOperationsDefinitionClassInput
  operationsDefinitions_some: FilterHierarchyScopeOperationsDefinitionInput
  operationsDefinitions_none: FilterHierarchyScopeOperationsDefinitionInput
  operationsSegments_some: FilterHierarchyScopeOperationsSegmentInput
  operationsSegments_none: FilterHierarchyScopeOperationsSegmentInput
  equipmentCapabilities_some: FilterHierarchyScopeEquipmentCapabilityInput
  equipmentCapabilities_none: FilterHierarchyScopeEquipmentCapabilityInput
  personnelCapabilities_some: FilterHierarchyScopePersonnelCapabilityInput
  personnelCapabilities_none: FilterHierarchyScopePersonnelCapabilityInput
  operationalLocations_some: FilterHierarchyScopeOperationalLocationInput
  operationalLocations_none: FilterHierarchyScopeOperationalLocationInput
  operationsSegmentMaterialSpecifications_some: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterHierarchyScopeOperationsRequestInput
  operationsRequests_none: FilterHierarchyScopeOperationsRequestInput
  segmentRequirements_some: FilterHierarchyScopeSegmentRequirementInput
  segmentRequirements_none: FilterHierarchyScopeSegmentRequirementInput
  materialLots_some: FilterHierarchyScopeMaterialLotInput
  materialLots_none: FilterHierarchyScopeMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput
  openPurchaseOrders_some: FilterHierarchyScopeOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterHierarchyScopeOpenPurchaseOrderInput
}

input FilterHierarchyScopeMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeMaterialDefinitionInput]
  or: [FilterHierarchyScopeMaterialDefinitionInput]
  not: [FilterHierarchyScopeMaterialDefinitionInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterHierarchyScopeMaterialLotInput]
  or: [FilterHierarchyScopeMaterialLotInput]
  not: [FilterHierarchyScopeMaterialLotInput]
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterHierarchyScopeOpenPurchaseOrderInput]
  or: [FilterHierarchyScopeOpenPurchaseOrderInput]
  not: [FilterHierarchyScopeOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterHierarchyScopeOperationalLocationInput]
  or: [FilterHierarchyScopeOperationalLocationInput]
  not: [FilterHierarchyScopeOperationalLocationInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterHierarchyScopeOperationsDefinitionClassInput]
  or: [FilterHierarchyScopeOperationsDefinitionClassInput]
  not: [FilterHierarchyScopeOperationsDefinitionClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterHierarchyScopeOperationsDefinitionInput]
  or: [FilterHierarchyScopeOperationsDefinitionInput]
  not: [FilterHierarchyScopeOperationsDefinitionInput]
  scenario: FilterScenarioInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
}

input FilterHierarchyScopeOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterHierarchyScopeOperationsRequestInput]
  or: [FilterHierarchyScopeOperationsRequestInput]
  not: [FilterHierarchyScopeOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentInput]
  or: [FilterHierarchyScopeOperationsSegmentInput]
  not: [FilterHierarchyScopeOperationsSegmentInput]
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  or: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  not: [FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonInput]
  or: [FilterHierarchyScopePersonInput]
  not: [FilterHierarchyScopePersonInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterHierarchyScopePersonnelCapabilityInput]
  or: [FilterHierarchyScopePersonnelCapabilityInput]
  not: [FilterHierarchyScopePersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonnelClassInput]
  or: [FilterHierarchyScopePersonnelClassInput]
  not: [FilterHierarchyScopePersonnelClassInput]
  scenario: FilterScenarioInput
}

input FilterHierarchyScopePersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopePersonnelPositionInput]
  or: [FilterHierarchyScopePersonnelPositionInput]
  not: [FilterHierarchyScopePersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterHierarchyScopeSegmentRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
}

input FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  or: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  not: [FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterMaterialDefinitionInput]
  or: [FilterMaterialDefinitionInput]
  not: [FilterMaterialDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsSegmentMaterialSpecifications_some: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  materialLots_some: FilterMaterialDefinitionMaterialLotInput
  materialLots_none: FilterMaterialDefinitionMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput
  openPurchaseOrders_some: FilterMaterialDefinitionOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterMaterialDefinitionOpenPurchaseOrderInput
  materialProperties_some: FilterMaterialDefinitionMaterialPropertyInput
  materialProperties_none: FilterMaterialDefinitionMaterialPropertyInput
}

input FilterMaterialDefinitionMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialDefinitionMaterialLotInput]
  or: [FilterMaterialDefinitionMaterialLotInput]
  not: [FilterMaterialDefinitionMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterMaterialDefinitionMaterialPropertyInput]
  or: [FilterMaterialDefinitionMaterialPropertyInput]
  not: [FilterMaterialDefinitionMaterialPropertyInput]
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  or: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  not: [FilterMaterialDefinitionOpenPurchaseOrderInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  or: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  not: [FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  or: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  not: [FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
}

input FilterMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterMaterialLotInput]
  or: [FilterMaterialLotInput]
  not: [FilterMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
  segmentRequirementMaterialRequirements_some: FilterMaterialLotSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterMaterialLotSegmentRequirementMaterialRequirementInput
}

input FilterMaterialLotSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  or: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  not: [FilterMaterialLotSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
}

input FilterMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterMaterialPropertyInput]
  or: [FilterMaterialPropertyInput]
  not: [FilterMaterialPropertyInput]
  materialDefinition: FilterMaterialDefinitionInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterOpenPurchaseOrderInput]
  or: [FilterOpenPurchaseOrderInput]
  not: [FilterOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterOperationalLocationInput]
  or: [FilterOperationalLocationInput]
  not: [FilterOperationalLocationInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsSegmentMaterialSpecifications_some: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput
  materialLots_some: FilterOperationalLocationMaterialLotInput
  materialLots_none: FilterOperationalLocationMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterOperationalLocationSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterOperationalLocationSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput
}

input FilterOperationalLocationMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterOperationalLocationMaterialLotInput]
  or: [FilterOperationalLocationMaterialLotInput]
  not: [FilterOperationalLocationMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
}

input FilterOperationalLocationSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  or: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  not: [FilterOperationalLocationSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterOperationsDefinitionClassInput]
  or: [FilterOperationsDefinitionClassInput]
  not: [FilterOperationsDefinitionClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsDefinitions_some: FilterOperationsDefinitionClassOperationsDefinitionInput
  operationsDefinitions_none: FilterOperationsDefinitionClassOperationsDefinitionInput
  orderItems_some: FilterOperationsDefinitionClassOrderItemInput
  orderItems_none: FilterOperationsDefinitionClassOrderItemInput
}

input FilterOperationsDefinitionClassOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  or: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  not: [FilterOperationsDefinitionClassOperationsDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationsDefinitionClassOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsDefinitionClassOrderItemInput]
  or: [FilterOperationsDefinitionClassOrderItemInput]
  not: [FilterOperationsDefinitionClassOrderItemInput]
  order: FilterOrderInput
  scenario: FilterScenarioInput
}

input FilterOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterOperationsDefinitionInput]
  or: [FilterOperationsDefinitionInput]
  not: [FilterOperationsDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
  operationsSegments_some: FilterOperationsDefinitionOperationsSegmentInput
  operationsSegments_none: FilterOperationsDefinitionOperationsSegmentInput
}

input FilterOperationsDefinitionOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsDefinitionOperationsSegmentInput]
  or: [FilterOperationsDefinitionOperationsSegmentInput]
  not: [FilterOperationsDefinitionOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestEquipmentInput]
  or: [FilterOperationsRequestEquipmentInput]
  not: [FilterOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterOperationsRequestInput]
  or: [FilterOperationsRequestInput]
  not: [FilterOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsRequestPersonnels_some: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterOperationsRequestOperationsRequestPersonnelInput
  operationsRequestEquipments_some: FilterOperationsRequestOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterOperationsRequestOperationsRequestEquipmentInput
  operationsRequestProfiles_some: FilterOperationsRequestOperationsRequestProfileInput
  operationsRequestProfiles_none: FilterOperationsRequestOperationsRequestProfileInput
  segmentRequirements_some: FilterOperationsRequestSegmentRequirementInput
  segmentRequirements_none: FilterOperationsRequestSegmentRequirementInput
}

input FilterOperationsRequestOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestOperationsRequestEquipmentInput]
  or: [FilterOperationsRequestOperationsRequestEquipmentInput]
  not: [FilterOperationsRequestOperationsRequestEquipmentInput]
  equipment: FilterEquipmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestOperationsRequestPersonnelInput]
  or: [FilterOperationsRequestOperationsRequestPersonnelInput]
  not: [FilterOperationsRequestOperationsRequestPersonnelInput]
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterOperationsRequestOperationsRequestProfileInput]
  or: [FilterOperationsRequestOperationsRequestProfileInput]
  not: [FilterOperationsRequestOperationsRequestProfileInput]
  orderItem: FilterOrderItemInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsRequestPersonnelInput]
  or: [FilterOperationsRequestPersonnelInput]
  not: [FilterOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterOperationsRequestProfileInput]
  or: [FilterOperationsRequestProfileInput]
  not: [FilterOperationsRequestProfileInput]
  operationsRequest: FilterOperationsRequestInput
  orderItem: FilterOrderItemInput
  scenario: FilterScenarioInput
}

input FilterOperationsRequestSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterOperationsRequestSegmentRequirementInput]
  or: [FilterOperationsRequestSegmentRequirementInput]
  not: [FilterOperationsRequestSegmentRequirementInput]
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOperationsSegmentChangeoverSetItemInput]
  or: [FilterOperationsSegmentChangeoverSetItemInput]
  not: [FilterOperationsSegmentChangeoverSetItemInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentDependencyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentDependencyInput]
  or: [FilterOperationsSegmentDependencyInput]
  not: [FilterOperationsSegmentDependencyInput]
  fromOperationsSegment: FilterOperationsSegmentInput
  toOperationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentDescendantInput]
  or: [FilterOperationsSegmentDescendantInput]
  not: [FilterOperationsSegmentDescendantInput]
  ascendant: FilterOperationsSegmentInput
  descendant: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterOperationsSegmentEquipmentCapabilityInput]
  or: [FilterOperationsSegmentEquipmentCapabilityInput]
  not: [FilterOperationsSegmentEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsSegmentInput]
  or: [FilterOperationsSegmentInput]
  not: [FilterOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
  scenario: FilterScenarioInput
  changeoverSetItems_some: FilterOperationsSegmentChangeoverSetItemInput
  changeoverSetItems_none: FilterOperationsSegmentChangeoverSetItemInput
  operationsSegments_some: FilterOperationsSegmentOperationsSegmentInput
  operationsSegments_none: FilterOperationsSegmentOperationsSegmentInput
  equipmentCapabilities_some: FilterOperationsSegmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterOperationsSegmentEquipmentCapabilityInput
  personnelCapabilities_some: FilterOperationsSegmentPersonnelCapabilityInput
  personnelCapabilities_none: FilterOperationsSegmentPersonnelCapabilityInput
  operationsSegmentDescendantsAscendant_some: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput
  operationsSegmentDescendantsAscendant_none: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput
  operationsSegmentDescendantsDescendant_some: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput
  operationsSegmentDescendantsDescendant_none: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput
  operationsSegmentProperties_some: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentProperties_none: FilterOperationsSegmentOperationsSegmentPropertyInput
  operationsSegmentDependenciesFromOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesFromOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_some: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentDependenciesToOperationsSegment_none: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  operationsSegmentMaterialSpecifications_some: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  operationsRequests_some: FilterOperationsSegmentOperationsRequestInput
  operationsRequests_none: FilterOperationsSegmentOperationsRequestInput
  segmentRequirements_some: FilterOperationsSegmentSegmentRequirementInput
  segmentRequirements_none: FilterOperationsSegmentSegmentRequirementInput
}

input FilterOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
  operationsSegmentMaterialSpecifications_some: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
}

input FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterOperationsSegmentOperationsRequestInput]
  or: [FilterOperationsSegmentOperationsRequestInput]
  not: [FilterOperationsSegmentOperationsRequestInput]
  scenario: FilterScenarioInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  toOperationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  fromOperationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentDescendantAscendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentOperationsSegmentDescendantAscendantInput]
  or: [FilterOperationsSegmentOperationsSegmentDescendantAscendantInput]
  not: [FilterOperationsSegmentOperationsSegmentDescendantAscendantInput]
  descendant: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentDescendantDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterOperationsSegmentOperationsSegmentDescendantDescendantInput]
  or: [FilterOperationsSegmentOperationsSegmentDescendantDescendantInput]
  not: [FilterOperationsSegmentOperationsSegmentDescendantDescendantInput]
  ascendant: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentInput]
  or: [FilterOperationsSegmentOperationsSegmentInput]
  not: [FilterOperationsSegmentOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsDefinition: FilterOperationsDefinitionInput
  scenario: FilterScenarioInput
  changeoverSetItems_some: FilterOperationsSegmentChangeoverSetItemInput
  changeoverSetItems_none: FilterOperationsSegmentChangeoverSetItemInput
}

input FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentOperationsSegmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  or: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  not: [FilterOperationsSegmentOperationsSegmentPropertyInput]
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterOperationsSegmentPersonnelCapabilityInput]
  or: [FilterOperationsSegmentPersonnelCapabilityInput]
  not: [FilterOperationsSegmentPersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOperationsSegmentPersonnelSpecificationInput]
  or: [FilterOperationsSegmentPersonnelSpecificationInput]
  not: [FilterOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOperationsSegmentPropertyInput]
  or: [FilterOperationsSegmentPropertyInput]
  not: [FilterOperationsSegmentPropertyInput]
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterOperationsSegmentSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterOperationsSegmentSegmentRequirementInput]
  or: [FilterOperationsSegmentSegmentRequirementInput]
  not: [FilterOperationsSegmentSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationHierarchyAttributeInput]
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationProperty: FilterOptimisationPropertyInput
  scenario: FilterScenarioInput
}

input FilterOptimisationHierarchyEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationHierarchyEquipmentInput]
  or: [FilterOptimisationHierarchyEquipmentInput]
  not: [FilterOptimisationHierarchyEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  equipmentChildrenParent_some: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenParent_none: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenChild_some: FilterEquipmentEquipmentChildChildInput
  equipmentChildrenChild_none: FilterEquipmentEquipmentChildChildInput
  equipmentDescendantsAscendant_some: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsAscendant_none: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsDescendant_some: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentDescendantsDescendant_none: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClassEquipmentMembers_some: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentClassEquipmentMembers_none: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  equipmentDowntimePeriods_some: FilterEquipmentEquipmentDowntimePeriodInput
  equipmentDowntimePeriods_none: FilterEquipmentEquipmentDowntimePeriodInput
}

input FilterOptimisationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationHierarchyInput]
  or: [FilterOptimisationHierarchyInput]
  not: [FilterOptimisationHierarchyInput]
  scenario: FilterScenarioInput
  equipments_some: FilterOptimisationHierarchyEquipmentInput
  equipments_none: FilterOptimisationHierarchyEquipmentInput
  optimisationHierarchyAttributes_some: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput
  optimisationHierarchyAttributes_none: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput
}

input FilterOptimisationHierarchyOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationHierarchyOptimisationHierarchyAttributeInput]
  optimisationProperty: FilterOptimisationPropertyInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPreferredSequenceEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPreferredSequenceEquipmentInput]
  or: [FilterOptimisationPreferredSequenceEquipmentInput]
  not: [FilterOptimisationPreferredSequenceEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  scenario: FilterScenarioInput
  hierarchyScopes_some: FilterEquipmentHierarchyScopeInput
  hierarchyScopes_none: FilterEquipmentHierarchyScopeInput
  equipmentChildrenParent_some: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenParent_none: FilterEquipmentEquipmentChildParentInput
  equipmentChildrenChild_some: FilterEquipmentEquipmentChildChildInput
  equipmentChildrenChild_none: FilterEquipmentEquipmentChildChildInput
  equipmentDescendantsAscendant_some: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsAscendant_none: FilterEquipmentEquipmentDescendantAscendantInput
  equipmentDescendantsDescendant_some: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentDescendantsDescendant_none: FilterEquipmentEquipmentDescendantDescendantInput
  equipmentProperties_some: FilterEquipmentEquipmentPropertyInput
  equipmentProperties_none: FilterEquipmentEquipmentPropertyInput
  equipmentClassEquipmentMembers_some: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentClassEquipmentMembers_none: FilterEquipmentEquipmentClassEquipmentMemberInput
  equipmentCapabilities_some: FilterEquipmentEquipmentCapabilityInput
  equipmentCapabilities_none: FilterEquipmentEquipmentCapabilityInput
  operationsSegmentEquipmentSpecifications_some: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterEquipmentOperationsSegmentEquipmentSpecificationInput
  operationsRequestEquipments_some: FilterEquipmentOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterEquipmentOperationsRequestEquipmentInput
  segmentRequirementEquipmentRequirements_some: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterEquipmentSegmentRequirementEquipmentRequirementInput
  equipmentDowntimePeriods_some: FilterEquipmentEquipmentDowntimePeriodInput
  equipmentDowntimePeriods_none: FilterEquipmentEquipmentDowntimePeriodInput
}

input FilterOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPreferredSequenceInput]
  or: [FilterOptimisationPreferredSequenceInput]
  not: [FilterOptimisationPreferredSequenceInput]
  scenario: FilterScenarioInput
  optimisationProperty: FilterOptimisationPropertyInput
  equipments_some: FilterOptimisationPreferredSequenceEquipmentInput
  equipments_none: FilterOptimisationPreferredSequenceEquipmentInput
  optimisationPreferredSequenceItems_some: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
  optimisationPreferredSequenceItems_none: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
}

input FilterOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPreferredSequenceItemInput]
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterOptimisationPropertyInput]
  or: [FilterOptimisationPropertyInput]
  not: [FilterOptimisationPropertyInput]
  scenario: FilterScenarioInput
  optimisationPropertyValues_some: FilterOptimisationPropertyOptimisationPropertyValueInput
  optimisationPropertyValues_none: FilterOptimisationPropertyOptimisationPropertyValueInput
  optimisationHierarchyAttributes_some: FilterOptimisationPropertyOptimisationHierarchyAttributeInput
  optimisationHierarchyAttributes_none: FilterOptimisationPropertyOptimisationHierarchyAttributeInput
  optimisationPreferredSequences_some: FilterOptimisationPropertyOptimisationPreferredSequenceInput
  optimisationPreferredSequences_none: FilterOptimisationPropertyOptimisationPreferredSequenceInput
}

input FilterOptimisationPropertyOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  or: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  not: [FilterOptimisationPropertyOptimisationHierarchyAttributeInput]
  optimisationHierarchy: FilterOptimisationHierarchyInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  or: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  not: [FilterOptimisationPropertyOptimisationPreferredSequenceInput]
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyOptimisationPropertyValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  or: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  not: [FilterOptimisationPropertyOptimisationPropertyValueInput]
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyValueChangeoverSetItemFromValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  or: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  not: [FilterOptimisationPropertyValueChangeoverSetItemFromValueInput]
  changeoverSet: FilterChangeoverSetInput
  toValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterOptimisationPropertyValueChangeoverSetItemToValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  or: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  not: [FilterOptimisationPropertyValueChangeoverSetItemToValueInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  scenario: FilterScenarioInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterOptimisationPropertyValueColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterOptimisationPropertyValueColourSchemeItemInput]
  or: [FilterOptimisationPropertyValueColourSchemeItemInput]
  not: [FilterOptimisationPropertyValueColourSchemeItemInput]
  colourScheme: FilterColourSchemeInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyValueInput]
  or: [FilterOptimisationPropertyValueInput]
  not: [FilterOptimisationPropertyValueInput]
  optimisationProperty: FilterOptimisationPropertyInput
  scenario: FilterScenarioInput
  changeoverSetItemsFromValue_some: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput
  changeoverSetItemsFromValue_none: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput
  changeoverSetItemsToValue_some: FilterOptimisationPropertyValueChangeoverSetItemToValueInput
  changeoverSetItemsToValue_none: FilterOptimisationPropertyValueChangeoverSetItemToValueInput
  materialProperties_some: FilterOptimisationPropertyValueMaterialPropertyInput
  materialProperties_none: FilterOptimisationPropertyValueMaterialPropertyInput
  colourSchemeItems_some: FilterOptimisationPropertyValueColourSchemeItemInput
  colourSchemeItems_none: FilterOptimisationPropertyValueColourSchemeItemInput
  optimisationPreferredSequenceItems_some: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput
  optimisationPreferredSequenceItems_none: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput
}

input FilterOptimisationPropertyValueMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOptimisationPropertyValueMaterialPropertyInput]
  or: [FilterOptimisationPropertyValueMaterialPropertyInput]
  not: [FilterOptimisationPropertyValueMaterialPropertyInput]
  materialDefinition: FilterMaterialDefinitionInput
  scenario: FilterScenarioInput
}

input FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  or: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  not: [FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  scenario: FilterScenarioInput
}

input FilterOptimizationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterOptimizationHierarchyInput]
  or: [FilterOptimizationHierarchyInput]
  not: [FilterOptimizationHierarchyInput]
  scenario: FilterScenarioInput
}

input FilterOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOrderInput]
  or: [FilterOrderInput]
  not: [FilterOrderInput]
  status: FilterOrderStatusInput
  scenario: FilterScenarioInput
  orderItems_some: FilterOrderOrderItemInput
  orderItems_none: FilterOrderOrderItemInput
  orderProperties_some: FilterOrderOrderPropertyInput
  orderProperties_none: FilterOrderOrderPropertyInput
}

input FilterOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOrderItemInput]
  or: [FilterOrderItemInput]
  not: [FilterOrderItemInput]
  order: FilterOrderInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
  scenario: FilterScenarioInput
  operationsRequestProfiles_some: FilterOrderItemOperationsRequestProfileInput
  operationsRequestProfiles_none: FilterOrderItemOperationsRequestProfileInput
}

input FilterOrderItemOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterOrderItemOperationsRequestProfileInput]
  or: [FilterOrderItemOperationsRequestProfileInput]
  not: [FilterOrderItemOperationsRequestProfileInput]
  operationsRequest: FilterOperationsRequestInput
  scenario: FilterScenarioInput
}

input FilterOrderOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterOrderOrderItemInput]
  or: [FilterOrderOrderItemInput]
  not: [FilterOrderOrderItemInput]
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
  scenario: FilterScenarioInput
}

input FilterOrderOrderPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOrderOrderPropertyInput]
  or: [FilterOrderOrderPropertyInput]
  not: [FilterOrderOrderPropertyInput]
  scenario: FilterScenarioInput
}

input FilterOrderPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterOrderPropertyInput]
  or: [FilterOrderPropertyInput]
  not: [FilterOrderPropertyInput]
  order: FilterOrderInput
  scenario: FilterScenarioInput
}

input FilterOrderStatusInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  and: [FilterOrderStatusInput]
  or: [FilterOrderStatusInput]
  not: [FilterOrderStatusInput]
  scenario: FilterScenarioInput
  orders_some: FilterOrderStatusOrderInput
  orders_none: FilterOrderStatusOrderInput
}

input FilterOrderStatusOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterOrderStatusOrderInput]
  or: [FilterOrderStatusOrderInput]
  not: [FilterOrderStatusOrderInput]
  scenario: FilterScenarioInput
}

input FilterPersonDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonDowntimePeriodInput]
  or: [FilterPersonDowntimePeriodInput]
  not: [FilterPersonDowntimePeriodInput]
  person: FilterPersonInput
  downtimePeriod: FilterDowntimePeriodInput
  scenario: FilterScenarioInput
}

input FilterPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonInput]
  or: [FilterPersonInput]
  not: [FilterPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  scenario: FilterScenarioInput
  personProperties_some: FilterPersonPersonPropertyInput
  personProperties_none: FilterPersonPersonPropertyInput
  personnelClassPersonMembers_some: FilterPersonPersonnelClassPersonMemberInput
  personnelClassPersonMembers_none: FilterPersonPersonnelClassPersonMemberInput
  personnelPositionPersonMembers_some: FilterPersonPersonnelPositionPersonMemberInput
  personnelPositionPersonMembers_none: FilterPersonPersonnelPositionPersonMemberInput
  operationsSegmentPersonnelSpecifications_some: FilterPersonOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterPersonOperationsSegmentPersonnelSpecificationInput
  operationsRequestPersonnels_some: FilterPersonOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterPersonOperationsRequestPersonnelInput
  segmentRequirementPersonnelRequirements_some: FilterPersonSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterPersonSegmentRequirementPersonnelRequirementInput
  personDowntimePeriods_some: FilterPersonPersonDowntimePeriodInput
  personDowntimePeriods_none: FilterPersonPersonDowntimePeriodInput
}

input FilterPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterPersonnelCapabilityInput]
  or: [FilterPersonnelCapabilityInput]
  not: [FilterPersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelClassInput]
  or: [FilterPersonnelClassInput]
  not: [FilterPersonnelClassInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  personnelClassProperties_some: FilterPersonnelClassPersonnelClassPropertyInput
  personnelClassProperties_none: FilterPersonnelClassPersonnelClassPropertyInput
  personnelPositions_some: FilterPersonnelClassPersonnelPositionInput
  personnelPositions_none: FilterPersonnelClassPersonnelPositionInput
  personnelClassPersonMembers_some: FilterPersonnelClassPersonnelClassPersonMemberInput
  personnelClassPersonMembers_none: FilterPersonnelClassPersonnelClassPersonMemberInput
  personnelCapabilities_some: FilterPersonnelClassPersonnelCapabilityInput
  personnelCapabilities_none: FilterPersonnelClassPersonnelCapabilityInput
  operationsSegmentPersonnelSpecifications_some: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput
  segmentRequirementPersonnelRequirements_some: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput
}

input FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  or: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  not: [FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelClassPersonMemberInput]
  or: [FilterPersonnelClassPersonMemberInput]
  not: [FilterPersonnelClassPersonMemberInput]
  personnelClass: FilterPersonnelClassInput
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterPersonnelClassPersonnelCapabilityInput]
  or: [FilterPersonnelClassPersonnelCapabilityInput]
  not: [FilterPersonnelClassPersonnelCapabilityInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonnelClassPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelClassPersonnelClassPersonMemberInput]
  or: [FilterPersonnelClassPersonnelClassPersonMemberInput]
  not: [FilterPersonnelClassPersonnelClassPersonMemberInput]
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonnelClassPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelClassPersonnelClassPropertyInput]
  or: [FilterPersonnelClassPersonnelClassPropertyInput]
  not: [FilterPersonnelClassPersonnelClassPropertyInput]
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelClassPersonnelPositionInput]
  or: [FilterPersonnelClassPersonnelPositionInput]
  not: [FilterPersonnelClassPersonnelPositionInput]
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelClassPropertyInput]
  or: [FilterPersonnelClassPropertyInput]
  not: [FilterPersonnelClassPropertyInput]
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterPersonnelClassSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  or: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  not: [FilterPersonnelClassSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterPersonnelPositionInput]
  or: [FilterPersonnelPositionInput]
  not: [FilterPersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  personnelPositionPersonMembers_some: FilterPersonnelPositionPersonnelPositionPersonMemberInput
  personnelPositionPersonMembers_none: FilterPersonnelPositionPersonnelPositionPersonMemberInput
  personnelPositionProperties_some: FilterPersonnelPositionPersonnelPositionPropertyInput
  personnelPositionProperties_none: FilterPersonnelPositionPersonnelPositionPropertyInput
}

input FilterPersonnelPositionPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelPositionPersonMemberInput]
  or: [FilterPersonnelPositionPersonMemberInput]
  not: [FilterPersonnelPositionPersonMemberInput]
  personnelPosition: FilterPersonnelPositionInput
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterPersonnelPositionPersonnelPositionPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonnelPositionPersonnelPositionPersonMemberInput]
  or: [FilterPersonnelPositionPersonnelPositionPersonMemberInput]
  not: [FilterPersonnelPositionPersonnelPositionPersonMemberInput]
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterPersonnelPositionPersonnelPositionPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  or: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  not: [FilterPersonnelPositionPersonnelPositionPropertyInput]
  scenario: FilterScenarioInput
}

input FilterPersonnelPositionPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonnelPositionPropertyInput]
  or: [FilterPersonnelPositionPropertyInput]
  not: [FilterPersonnelPositionPropertyInput]
  personnelPosition: FilterPersonnelPositionInput
  scenario: FilterScenarioInput
}

input FilterPersonOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonOperationsRequestPersonnelInput]
  or: [FilterPersonOperationsRequestPersonnelInput]
  not: [FilterPersonOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  scenario: FilterScenarioInput
}

input FilterPersonOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  or: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  not: [FilterPersonOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterPersonPersonDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonPersonDowntimePeriodInput]
  or: [FilterPersonPersonDowntimePeriodInput]
  not: [FilterPersonPersonDowntimePeriodInput]
  downtimePeriod: FilterDowntimePeriodInput
  scenario: FilterScenarioInput
}

input FilterPersonPersonnelClassPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonPersonnelClassPersonMemberInput]
  or: [FilterPersonPersonnelClassPersonMemberInput]
  not: [FilterPersonPersonnelClassPersonMemberInput]
  personnelClass: FilterPersonnelClassInput
  scenario: FilterScenarioInput
}

input FilterPersonPersonnelPositionPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterPersonPersonnelPositionPersonMemberInput]
  or: [FilterPersonPersonnelPositionPersonMemberInput]
  not: [FilterPersonPersonnelPositionPersonMemberInput]
  personnelPosition: FilterPersonnelPositionInput
  scenario: FilterScenarioInput
}

input FilterPersonPersonPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonPersonPropertyInput]
  or: [FilterPersonPersonPropertyInput]
  not: [FilterPersonPersonPropertyInput]
  scenario: FilterScenarioInput
}

input FilterPersonPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterPersonPropertyInput]
  or: [FilterPersonPropertyInput]
  not: [FilterPersonPropertyInput]
  person: FilterPersonInput
  scenario: FilterScenarioInput
}

input FilterPersonSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  or: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  not: [FilterPersonSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterScenarioAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  changeoverTime: Float
  changeoverTime_lt: Float
  changeoverTime_le: Float
  changeoverTime_ge: Float
  changeoverTime_gt: Float
  changeoverTime_ne: Float
  changeoverTime_null: Boolean
  changeoverTime_in: [Float]
  changeoverCount: Int
  changeoverCount_lt: Int
  changeoverCount_le: Int
  changeoverCount_ge: Int
  changeoverCount_gt: Int
  changeoverCount_ne: Int
  changeoverCount_null: Boolean
  changeoverCount_in: [Int]
  waitingTime: Float
  waitingTime_lt: Float
  waitingTime_le: Float
  waitingTime_ge: Float
  waitingTime_gt: Float
  waitingTime_ne: Float
  waitingTime_null: Boolean
  waitingTime_in: [Float]
  inventoryShortage: Float
  inventoryShortage_lt: Float
  inventoryShortage_le: Float
  inventoryShortage_ge: Float
  inventoryShortage_gt: Float
  inventoryShortage_ne: Float
  inventoryShortage_null: Boolean
  inventoryShortage_in: [Float]
  overdueCount: Int
  overdueCount_lt: Int
  overdueCount_le: Int
  overdueCount_ge: Int
  overdueCount_gt: Int
  overdueCount_ne: Int
  overdueCount_null: Boolean
  overdueCount_in: [Int]
  conflictCount: Int
  conflictCount_lt: Int
  conflictCount_le: Int
  conflictCount_ge: Int
  conflictCount_gt: Int
  conflictCount_ne: Int
  conflictCount_null: Boolean
  conflictCount_in: [Int]
  and: [FilterScenarioAttributeInput]
  or: [FilterScenarioAttributeInput]
  not: [FilterScenarioAttributeInput]
  scenario: FilterScenarioInput
}

input FilterScenarioAvailabilityTemplateInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioAvailabilityTemplateInput]
  or: [FilterScenarioAvailabilityTemplateInput]
  not: [FilterScenarioAvailabilityTemplateInput]
}

input FilterScenarioAvailabilityTemplateItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  dayOfTheWeek: Int
  dayOfTheWeek_lt: Int
  dayOfTheWeek_le: Int
  dayOfTheWeek_ge: Int
  dayOfTheWeek_gt: Int
  dayOfTheWeek_ne: Int
  dayOfTheWeek_null: Boolean
  dayOfTheWeek_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterScenarioAvailabilityTemplateItemInput]
  or: [FilterScenarioAvailabilityTemplateItemInput]
  not: [FilterScenarioAvailabilityTemplateItemInput]
  availabilityTemplate: FilterAvailabilityTemplateInput
}

input FilterScenarioCalendarisedAvailabilityTemplateSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
  or: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
  not: [FilterScenarioCalendarisedAvailabilityTemplateSetInput]
}

input FilterScenarioCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterScenarioCalendarisedAvailabilityTemplateSetItemInput]
  or: [FilterScenarioCalendarisedAvailabilityTemplateSetItemInput]
  not: [FilterScenarioCalendarisedAvailabilityTemplateSetItemInput]
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  availabilityTemplate: FilterAvailabilityTemplateInput
}

input FilterScenarioCalendarisedThroughputSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioCalendarisedThroughputSetInput]
  or: [FilterScenarioCalendarisedThroughputSetInput]
  not: [FilterScenarioCalendarisedThroughputSetInput]
}

input FilterScenarioCalendarisedThroughputSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  unitOfTime: String
  unitOfTime_lt: String
  unitOfTime_le: String
  unitOfTime_ge: String
  unitOfTime_gt: String
  unitOfTime_ne: String
  unitOfTime_null: Boolean
  unitOfTime_in: [String]
  unitOfTime_like: String
  and: [FilterScenarioCalendarisedThroughputSetItemInput]
  or: [FilterScenarioCalendarisedThroughputSetItemInput]
  not: [FilterScenarioCalendarisedThroughputSetItemInput]
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
}

input FilterScenarioChangeoverSetInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  defaultTime: Float
  defaultTime_lt: Float
  defaultTime_le: Float
  defaultTime_ge: Float
  defaultTime_gt: Float
  defaultTime_ne: Float
  defaultTime_null: Boolean
  defaultTime_in: [Float]
  and: [FilterScenarioChangeoverSetInput]
  or: [FilterScenarioChangeoverSetInput]
  not: [FilterScenarioChangeoverSetInput]
}

input FilterScenarioChangeoverSetItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  fromValueString: String
  fromValueString_lt: String
  fromValueString_le: String
  fromValueString_ge: String
  fromValueString_gt: String
  fromValueString_ne: String
  fromValueString_null: Boolean
  fromValueString_in: [String]
  fromValueString_like: String
  toValueString: String
  toValueString_lt: String
  toValueString_le: String
  toValueString_ge: String
  toValueString_gt: String
  toValueString_ne: String
  toValueString_null: Boolean
  toValueString_in: [String]
  toValueString_like: String
  property: String
  property_lt: String
  property_le: String
  property_ge: String
  property_gt: String
  property_ne: String
  property_null: Boolean
  property_in: [String]
  property_like: String
  time: Float
  time_lt: Float
  time_le: Float
  time_ge: Float
  time_gt: Float
  time_ne: Float
  time_null: Boolean
  time_in: [Float]
  and: [FilterScenarioChangeoverSetItemInput]
  or: [FilterScenarioChangeoverSetItemInput]
  not: [FilterScenarioChangeoverSetItemInput]
  changeoverSet: FilterChangeoverSetInput
  fromValue: FilterOptimisationPropertyValueInput
  toValue: FilterOptimisationPropertyValueInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterScenarioColourSchemeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioColourSchemeInput]
  or: [FilterScenarioColourSchemeInput]
  not: [FilterScenarioColourSchemeInput]
}

input FilterScenarioColourSchemeItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  red: Int
  red_lt: Int
  red_le: Int
  red_ge: Int
  red_gt: Int
  red_ne: Int
  red_null: Boolean
  red_in: [Int]
  green: Int
  green_lt: Int
  green_le: Int
  green_ge: Int
  green_gt: Int
  green_ne: Int
  green_null: Boolean
  green_in: [Int]
  blue: Int
  blue_lt: Int
  blue_le: Int
  blue_ge: Int
  blue_gt: Int
  blue_ne: Int
  blue_null: Boolean
  blue_in: [Int]
  and: [FilterScenarioColourSchemeItemInput]
  or: [FilterScenarioColourSchemeItemInput]
  not: [FilterScenarioColourSchemeItemInput]
  colourScheme: FilterColourSchemeInput
  propertyValue: FilterOptimisationPropertyValueInput
}

input FilterScenarioConfigurableApplicationParameterInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  valueAsString: String
  valueAsString_lt: String
  valueAsString_le: String
  valueAsString_ge: String
  valueAsString_gt: String
  valueAsString_ne: String
  valueAsString_null: Boolean
  valueAsString_in: [String]
  valueAsString_like: String
  and: [FilterScenarioConfigurableApplicationParameterInput]
  or: [FilterScenarioConfigurableApplicationParameterInput]
  not: [FilterScenarioConfigurableApplicationParameterInput]
}

input FilterScenarioDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  percentageAvailability: Float
  percentageAvailability_lt: Float
  percentageAvailability_le: Float
  percentageAvailability_ge: Float
  percentageAvailability_gt: Float
  percentageAvailability_ne: Float
  percentageAvailability_null: Boolean
  percentageAvailability_in: [Float]
  and: [FilterScenarioDowntimePeriodInput]
  or: [FilterScenarioDowntimePeriodInput]
  not: [FilterScenarioDowntimePeriodInput]
}

input FilterScenarioEquipmentCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterScenarioEquipmentCapabilityInput]
  or: [FilterScenarioEquipmentCapabilityInput]
  not: [FilterScenarioEquipmentCapabilityInput]
  equipment: FilterEquipmentInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterScenarioEquipmentChildInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioEquipmentChildInput]
  or: [FilterScenarioEquipmentChildInput]
  not: [FilterScenarioEquipmentChildInput]
  parent: FilterEquipmentInput
  child: FilterEquipmentInput
}

input FilterScenarioEquipmentClassEquipmentMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioEquipmentClassEquipmentMemberInput]
  or: [FilterScenarioEquipmentClassEquipmentMemberInput]
  not: [FilterScenarioEquipmentClassEquipmentMemberInput]
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
}

input FilterScenarioEquipmentClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  and: [FilterScenarioEquipmentClassInput]
  or: [FilterScenarioEquipmentClassInput]
  not: [FilterScenarioEquipmentClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioEquipmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioEquipmentDescendantInput]
  or: [FilterScenarioEquipmentDescendantInput]
  not: [FilterScenarioEquipmentDescendantInput]
  ascendant: FilterEquipmentInput
  descendant: FilterEquipmentInput
}

input FilterScenarioEquipmentDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioEquipmentDowntimePeriodInput]
  or: [FilterScenarioEquipmentDowntimePeriodInput]
  not: [FilterScenarioEquipmentDowntimePeriodInput]
  equipment: FilterEquipmentInput
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterScenarioEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  equipmentLevel: String
  equipmentLevel_lt: String
  equipmentLevel_le: String
  equipmentLevel_ge: String
  equipmentLevel_gt: String
  equipmentLevel_ne: String
  equipmentLevel_null: Boolean
  equipmentLevel_in: [String]
  equipmentLevel_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioEquipmentInput]
  or: [FilterScenarioEquipmentInput]
  not: [FilterScenarioEquipmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  changeoverSet: FilterChangeoverSetInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
}

input FilterScenarioEquipmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioEquipmentPropertyInput]
  or: [FilterScenarioEquipmentPropertyInput]
  not: [FilterScenarioEquipmentPropertyInput]
  equipment: FilterEquipmentInput
}

input FilterScenarioHierarchyScopeDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioHierarchyScopeDescendantInput]
  or: [FilterScenarioHierarchyScopeDescendantInput]
  not: [FilterScenarioHierarchyScopeDescendantInput]
  ascendant: FilterHierarchyScopeInput
  descendant: FilterHierarchyScopeInput
}

input FilterScenarioHierarchyScopeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  and: [FilterScenarioHierarchyScopeInput]
  or: [FilterScenarioHierarchyScopeInput]
  not: [FilterScenarioHierarchyScopeInput]
  equipment: FilterEquipmentInput
  parent: FilterHierarchyScopeInput
}

input FilterScenarioInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startDate: String
  startDate_lt: String
  startDate_le: String
  startDate_ge: String
  startDate_gt: String
  startDate_ne: String
  startDate_null: Boolean
  startDate_in: [String]
  startDate_like: String
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  updatedAt: String
  updatedAt_lt: String
  updatedAt_le: String
  updatedAt_ge: String
  updatedAt_gt: String
  updatedAt_ne: String
  updatedAt_null: Boolean
  updatedAt_in: [String]
  updatedAt_like: String
  createdAt: String
  createdAt_lt: String
  createdAt_le: String
  createdAt_ge: String
  createdAt_gt: String
  createdAt_ne: String
  createdAt_null: Boolean
  createdAt_in: [String]
  createdAt_like: String
  and: [FilterScenarioInput]
  or: [FilterScenarioInput]
  not: [FilterScenarioInput]
  hierarchyScopes_some: FilterScenarioHierarchyScopeInput
  hierarchyScopes_none: FilterScenarioHierarchyScopeInput
  optimisationProperties_some: FilterScenarioOptimisationPropertyInput
  optimisationProperties_none: FilterScenarioOptimisationPropertyInput
  optimisationPropertyValues_some: FilterScenarioOptimisationPropertyValueInput
  optimisationPropertyValues_none: FilterScenarioOptimisationPropertyValueInput
  changeoverSets_some: FilterScenarioChangeoverSetInput
  changeoverSets_none: FilterScenarioChangeoverSetInput
  changeoverSetItems_some: FilterScenarioChangeoverSetItemInput
  changeoverSetItems_none: FilterScenarioChangeoverSetItemInput
  availabilityTemplates_some: FilterScenarioAvailabilityTemplateInput
  availabilityTemplates_none: FilterScenarioAvailabilityTemplateInput
  availabilityTemplateItems_some: FilterScenarioAvailabilityTemplateItemInput
  availabilityTemplateItems_none: FilterScenarioAvailabilityTemplateItemInput
  calendarisedAvailabilityTemplateSets_some: FilterScenarioCalendarisedAvailabilityTemplateSetInput
  calendarisedAvailabilityTemplateSets_none: FilterScenarioCalendarisedAvailabilityTemplateSetInput
  calendarisedAvailabilityTemplateSetItems_some: FilterScenarioCalendarisedAvailabilityTemplateSetItemInput
  calendarisedAvailabilityTemplateSetItems_none: FilterScenarioCalendarisedAvailabilityTemplateSetItemInput
  optimizationHierarchies_some: FilterScenarioOptimizationHierarchyInput
  optimizationHierarchies_none: FilterScenarioOptimizationHierarchyInput
  equipments_some: FilterScenarioEquipmentInput
  equipments_none: FilterScenarioEquipmentInput
  hierarchyScopeDescendants_some: FilterScenarioHierarchyScopeDescendantInput
  hierarchyScopeDescendants_none: FilterScenarioHierarchyScopeDescendantInput
  equipmentChildren_some: FilterScenarioEquipmentChildInput
  equipmentChildren_none: FilterScenarioEquipmentChildInput
  equipmentDescendants_some: FilterScenarioEquipmentDescendantInput
  equipmentDescendants_none: FilterScenarioEquipmentDescendantInput
  equipmentProperties_some: FilterScenarioEquipmentPropertyInput
  equipmentProperties_none: FilterScenarioEquipmentPropertyInput
  equipmentClasses_some: FilterScenarioEquipmentClassInput
  equipmentClasses_none: FilterScenarioEquipmentClassInput
  equipmentClassEquipmentMembers_some: FilterScenarioEquipmentClassEquipmentMemberInput
  equipmentClassEquipmentMembers_none: FilterScenarioEquipmentClassEquipmentMemberInput
  materialDefinitions_some: FilterScenarioMaterialDefinitionInput
  materialDefinitions_none: FilterScenarioMaterialDefinitionInput
  personnelClasses_some: FilterScenarioPersonnelClassInput
  personnelClasses_none: FilterScenarioPersonnelClassInput
  personnelClassProperties_some: FilterScenarioPersonnelClassPropertyInput
  personnelClassProperties_none: FilterScenarioPersonnelClassPropertyInput
  personnelPositions_some: FilterScenarioPersonnelPositionInput
  personnelPositions_none: FilterScenarioPersonnelPositionInput
  persons_some: FilterScenarioPersonInput
  persons_none: FilterScenarioPersonInput
  personProperties_some: FilterScenarioPersonPropertyInput
  personProperties_none: FilterScenarioPersonPropertyInput
  personnelClassPersonMembers_some: FilterScenarioPersonnelClassPersonMemberInput
  personnelClassPersonMembers_none: FilterScenarioPersonnelClassPersonMemberInput
  personnelPositionPersonMembers_some: FilterScenarioPersonnelPositionPersonMemberInput
  personnelPositionPersonMembers_none: FilterScenarioPersonnelPositionPersonMemberInput
  personnelPositionProperties_some: FilterScenarioPersonnelPositionPropertyInput
  personnelPositionProperties_none: FilterScenarioPersonnelPositionPropertyInput
  operationsDefinitionClasses_some: FilterScenarioOperationsDefinitionClassInput
  operationsDefinitionClasses_none: FilterScenarioOperationsDefinitionClassInput
  operationsDefinitions_some: FilterScenarioOperationsDefinitionInput
  operationsDefinitions_none: FilterScenarioOperationsDefinitionInput
  operationsSegments_some: FilterScenarioOperationsSegmentInput
  operationsSegments_none: FilterScenarioOperationsSegmentInput
  equipmentCapabilities_some: FilterScenarioEquipmentCapabilityInput
  equipmentCapabilities_none: FilterScenarioEquipmentCapabilityInput
  personnelCapabilities_some: FilterScenarioPersonnelCapabilityInput
  personnelCapabilities_none: FilterScenarioPersonnelCapabilityInput
  operationsSegmentDescendants_some: FilterScenarioOperationsSegmentDescendantInput
  operationsSegmentDescendants_none: FilterScenarioOperationsSegmentDescendantInput
  operationsSegmentProperties_some: FilterScenarioOperationsSegmentPropertyInput
  operationsSegmentProperties_none: FilterScenarioOperationsSegmentPropertyInput
  operationsSegmentDependencies_some: FilterScenarioOperationsSegmentDependencyInput
  operationsSegmentDependencies_none: FilterScenarioOperationsSegmentDependencyInput
  operationalLocations_some: FilterScenarioOperationalLocationInput
  operationalLocations_none: FilterScenarioOperationalLocationInput
  calendarisedThroughputSets_some: FilterScenarioCalendarisedThroughputSetInput
  calendarisedThroughputSets_none: FilterScenarioCalendarisedThroughputSetInput
  calendarisedThroughputSetItems_some: FilterScenarioCalendarisedThroughputSetItemInput
  calendarisedThroughputSetItems_none: FilterScenarioCalendarisedThroughputSetItemInput
  operationsSegmentMaterialSpecifications_some: FilterScenarioOperationsSegmentMaterialSpecificationInput
  operationsSegmentMaterialSpecifications_none: FilterScenarioOperationsSegmentMaterialSpecificationInput
  operationsSegmentPersonnelSpecifications_some: FilterScenarioOperationsSegmentPersonnelSpecificationInput
  operationsSegmentPersonnelSpecifications_none: FilterScenarioOperationsSegmentPersonnelSpecificationInput
  operationsSegmentEquipmentSpecifications_some: FilterScenarioOperationsSegmentEquipmentSpecificationInput
  operationsSegmentEquipmentSpecifications_none: FilterScenarioOperationsSegmentEquipmentSpecificationInput
  timePeriods_some: FilterScenarioTimePeriodInput
  timePeriods_none: FilterScenarioTimePeriodInput
  orderStatuses_some: FilterScenarioOrderStatusInput
  orderStatuses_none: FilterScenarioOrderStatusInput
  orders_some: FilterScenarioOrderInput
  orders_none: FilterScenarioOrderInput
  orderItems_some: FilterScenarioOrderItemInput
  orderItems_none: FilterScenarioOrderItemInput
  operationsRequests_some: FilterScenarioOperationsRequestInput
  operationsRequests_none: FilterScenarioOperationsRequestInput
  operationsRequestPersonnels_some: FilterScenarioOperationsRequestPersonnelInput
  operationsRequestPersonnels_none: FilterScenarioOperationsRequestPersonnelInput
  operationsRequestEquipments_some: FilterScenarioOperationsRequestEquipmentInput
  operationsRequestEquipments_none: FilterScenarioOperationsRequestEquipmentInput
  operationsRequestProfiles_some: FilterScenarioOperationsRequestProfileInput
  operationsRequestProfiles_none: FilterScenarioOperationsRequestProfileInput
  segmentRequirements_some: FilterScenarioSegmentRequirementInput
  segmentRequirements_none: FilterScenarioSegmentRequirementInput
  segmentRequirementDescendants_some: FilterScenarioSegmentRequirementDescendantInput
  segmentRequirementDescendants_none: FilterScenarioSegmentRequirementDescendantInput
  segmentRequirementProperties_some: FilterScenarioSegmentRequirementPropertyInput
  segmentRequirementProperties_none: FilterScenarioSegmentRequirementPropertyInput
  materialLots_some: FilterScenarioMaterialLotInput
  materialLots_none: FilterScenarioMaterialLotInput
  segmentRequirementMaterialRequirements_some: FilterScenarioSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterScenarioSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterScenarioSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterScenarioSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterScenarioSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterScenarioSegmentRequirementEquipmentRequirementInput
  openPurchaseOrders_some: FilterScenarioOpenPurchaseOrderInput
  openPurchaseOrders_none: FilterScenarioOpenPurchaseOrderInput
  materialProperties_some: FilterScenarioMaterialPropertyInput
  materialProperties_none: FilterScenarioMaterialPropertyInput
  configurableApplicationParameters_some: FilterScenarioConfigurableApplicationParameterInput
  configurableApplicationParameters_none: FilterScenarioConfigurableApplicationParameterInput
  colourSchemes_some: FilterScenarioColourSchemeInput
  colourSchemes_none: FilterScenarioColourSchemeInput
  colourSchemeItems_some: FilterScenarioColourSchemeItemInput
  colourSchemeItems_none: FilterScenarioColourSchemeItemInput
  downtimePeriods_some: FilterScenarioDowntimePeriodInput
  downtimePeriods_none: FilterScenarioDowntimePeriodInput
  equipmentDowntimePeriods_some: FilterScenarioEquipmentDowntimePeriodInput
  equipmentDowntimePeriods_none: FilterScenarioEquipmentDowntimePeriodInput
  personDowntimePeriods_some: FilterScenarioPersonDowntimePeriodInput
  personDowntimePeriods_none: FilterScenarioPersonDowntimePeriodInput
  optimisationHierarchies_some: FilterScenarioOptimisationHierarchyInput
  optimisationHierarchies_none: FilterScenarioOptimisationHierarchyInput
  optimisationHierarchyAttributes_some: FilterScenarioOptimisationHierarchyAttributeInput
  optimisationHierarchyAttributes_none: FilterScenarioOptimisationHierarchyAttributeInput
  scenarioAttribute_some: FilterScenarioScenarioAttributeInput
  scenarioAttribute_none: FilterScenarioScenarioAttributeInput
  optimisationPreferredSequences_some: FilterScenarioOptimisationPreferredSequenceInput
  optimisationPreferredSequences_none: FilterScenarioOptimisationPreferredSequenceInput
  optimisationPreferredSequenceItems_some: FilterScenarioOptimisationPreferredSequenceItemInput
  optimisationPreferredSequenceItems_none: FilterScenarioOptimisationPreferredSequenceItemInput
  orderProperties_some: FilterScenarioOrderPropertyInput
  orderProperties_none: FilterScenarioOrderPropertyInput
}

input FilterScenarioMaterialDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioMaterialDefinitionInput]
  or: [FilterScenarioMaterialDefinitionInput]
  not: [FilterScenarioMaterialDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioMaterialLotInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterScenarioMaterialLotInput]
  or: [FilterScenarioMaterialLotInput]
  not: [FilterScenarioMaterialLotInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioMaterialPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioMaterialPropertyInput]
  or: [FilterScenarioMaterialPropertyInput]
  not: [FilterScenarioMaterialPropertyInput]
  materialDefinition: FilterMaterialDefinitionInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterScenarioOpenPurchaseOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Int
  quantity_lt: Int
  quantity_le: Int
  quantity_ge: Int
  quantity_gt: Int
  quantity_ne: Int
  quantity_null: Boolean
  quantity_in: [Int]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  and: [FilterScenarioOpenPurchaseOrderInput]
  or: [FilterScenarioOpenPurchaseOrderInput]
  not: [FilterScenarioOpenPurchaseOrderInput]
  materialDefinition: FilterMaterialDefinitionInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationalLocationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  availabileForUse: String
  availabileForUse_lt: String
  availabileForUse_le: String
  availabileForUse_ge: String
  availabileForUse_gt: String
  availabileForUse_ne: String
  availabileForUse_null: Boolean
  availabileForUse_in: [String]
  availabileForUse_like: String
  and: [FilterScenarioOperationalLocationInput]
  or: [FilterScenarioOperationalLocationInput]
  not: [FilterScenarioOperationalLocationInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationsDefinitionClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  and: [FilterScenarioOperationsDefinitionClassInput]
  or: [FilterScenarioOperationsDefinitionClassInput]
  not: [FilterScenarioOperationsDefinitionClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationsDefinitionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  and: [FilterScenarioOperationsDefinitionInput]
  or: [FilterScenarioOperationsDefinitionInput]
  not: [FilterScenarioOperationsDefinitionInput]
  hierarchyScope: FilterHierarchyScopeInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
}

input FilterScenarioOperationsRequestEquipmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioOperationsRequestEquipmentInput]
  or: [FilterScenarioOperationsRequestEquipmentInput]
  not: [FilterScenarioOperationsRequestEquipmentInput]
  operationsRequest: FilterOperationsRequestInput
  equipment: FilterEquipmentInput
}

input FilterScenarioOperationsRequestInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  requestState: String
  requestState_lt: String
  requestState_le: String
  requestState_ge: String
  requestState_gt: String
  requestState_ne: String
  requestState_null: Boolean
  requestState_in: [String]
  requestState_like: String
  priority: String
  priority_lt: String
  priority_le: String
  priority_ge: String
  priority_gt: String
  priority_ne: String
  priority_null: Boolean
  priority_in: [String]
  priority_like: String
  and: [FilterScenarioOperationsRequestInput]
  or: [FilterScenarioOperationsRequestInput]
  not: [FilterScenarioOperationsRequestInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioOperationsRequestPersonnelInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioOperationsRequestPersonnelInput]
  or: [FilterScenarioOperationsRequestPersonnelInput]
  not: [FilterScenarioOperationsRequestPersonnelInput]
  operationsRequest: FilterOperationsRequestInput
  person: FilterPersonInput
}

input FilterScenarioOperationsRequestProfileInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startupCost: Float
  startupCost_lt: Float
  startupCost_le: Float
  startupCost_ge: Float
  startupCost_gt: Float
  startupCost_ne: Float
  startupCost_null: Boolean
  startupCost_in: [Float]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  and: [FilterScenarioOperationsRequestProfileInput]
  or: [FilterScenarioOperationsRequestProfileInput]
  not: [FilterScenarioOperationsRequestProfileInput]
  operationsRequest: FilterOperationsRequestInput
  orderItem: FilterOrderItemInput
}

input FilterScenarioOperationsSegmentDependencyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  dependencyType: String
  dependencyType_lt: String
  dependencyType_le: String
  dependencyType_ge: String
  dependencyType_gt: String
  dependencyType_ne: String
  dependencyType_null: Boolean
  dependencyType_in: [String]
  dependencyType_like: String
  dependencyFactor: Float
  dependencyFactor_lt: Float
  dependencyFactor_le: Float
  dependencyFactor_ge: Float
  dependencyFactor_gt: Float
  dependencyFactor_ne: Float
  dependencyFactor_null: Boolean
  dependencyFactor_in: [Float]
  dependencyFactorUnitOfMeasure: String
  dependencyFactorUnitOfMeasure_lt: String
  dependencyFactorUnitOfMeasure_le: String
  dependencyFactorUnitOfMeasure_ge: String
  dependencyFactorUnitOfMeasure_gt: String
  dependencyFactorUnitOfMeasure_ne: String
  dependencyFactorUnitOfMeasure_null: Boolean
  dependencyFactorUnitOfMeasure_in: [String]
  dependencyFactorUnitOfMeasure_like: String
  and: [FilterScenarioOperationsSegmentDependencyInput]
  or: [FilterScenarioOperationsSegmentDependencyInput]
  not: [FilterScenarioOperationsSegmentDependencyInput]
  fromOperationsSegment: FilterOperationsSegmentInput
  toOperationsSegment: FilterOperationsSegmentInput
}

input FilterScenarioOperationsSegmentDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioOperationsSegmentDescendantInput]
  or: [FilterScenarioOperationsSegmentDescendantInput]
  not: [FilterScenarioOperationsSegmentDescendantInput]
  ascendant: FilterOperationsSegmentInput
  descendant: FilterOperationsSegmentInput
}

input FilterScenarioOperationsSegmentEquipmentSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  equipmentUse: String
  equipmentUse_lt: String
  equipmentUse_le: String
  equipmentUse_ge: String
  equipmentUse_gt: String
  equipmentUse_ne: String
  equipmentUse_null: Boolean
  equipmentUse_in: [String]
  equipmentUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterScenarioOperationsSegmentEquipmentSpecificationInput]
  or: [FilterScenarioOperationsSegmentEquipmentSpecificationInput]
  not: [FilterScenarioOperationsSegmentEquipmentSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  equipmentClass: FilterEquipmentClassInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioOperationsSegmentInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  operationsType: String
  operationsType_lt: String
  operationsType_le: String
  operationsType_ge: String
  operationsType_gt: String
  operationsType_ne: String
  operationsType_null: Boolean
  operationsType_in: [String]
  operationsType_like: String
  version: String
  version_lt: String
  version_le: String
  version_ge: String
  version_gt: String
  version_ne: String
  version_null: Boolean
  version_in: [String]
  version_like: String
  duration: Float
  duration_lt: Float
  duration_le: Float
  duration_ge: Float
  duration_gt: Float
  duration_ne: Float
  duration_null: Boolean
  duration_in: [Float]
  durationUnitOfMeasure: String
  durationUnitOfMeasure_lt: String
  durationUnitOfMeasure_le: String
  durationUnitOfMeasure_ge: String
  durationUnitOfMeasure_gt: String
  durationUnitOfMeasure_ne: String
  durationUnitOfMeasure_null: Boolean
  durationUnitOfMeasure_in: [String]
  durationUnitOfMeasure_like: String
  and: [FilterScenarioOperationsSegmentInput]
  or: [FilterScenarioOperationsSegmentInput]
  not: [FilterScenarioOperationsSegmentInput]
  hierarchyScope: FilterHierarchyScopeInput
  parentSegment: FilterOperationsSegmentInput
  operationsDefinition: FilterOperationsDefinitionInput
}

input FilterScenarioOperationsSegmentMaterialSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterScenarioOperationsSegmentMaterialSpecificationInput]
  or: [FilterScenarioOperationsSegmentMaterialSpecificationInput]
  not: [FilterScenarioOperationsSegmentMaterialSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  parent: FilterOperationsSegmentMaterialSpecificationInput
  calendarisedThroughputSet: FilterCalendarisedThroughputSetInput
}

input FilterScenarioOperationsSegmentPersonnelSpecificationInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterScenarioOperationsSegmentPersonnelSpecificationInput]
  or: [FilterScenarioOperationsSegmentPersonnelSpecificationInput]
  not: [FilterScenarioOperationsSegmentPersonnelSpecificationInput]
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioOperationsSegmentPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioOperationsSegmentPropertyInput]
  or: [FilterScenarioOperationsSegmentPropertyInput]
  not: [FilterScenarioOperationsSegmentPropertyInput]
  operationsSegment: FilterOperationsSegmentInput
}

input FilterScenarioOptimisationHierarchyAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterScenarioOptimisationHierarchyAttributeInput]
  or: [FilterScenarioOptimisationHierarchyAttributeInput]
  not: [FilterScenarioOptimisationHierarchyAttributeInput]
  optimisationHierarchy: FilterOptimisationHierarchyInput
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterScenarioOptimisationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioOptimisationHierarchyInput]
  or: [FilterScenarioOptimisationHierarchyInput]
  not: [FilterScenarioOptimisationHierarchyInput]
}

input FilterScenarioOptimisationPreferredSequenceInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioOptimisationPreferredSequenceInput]
  or: [FilterScenarioOptimisationPreferredSequenceInput]
  not: [FilterScenarioOptimisationPreferredSequenceInput]
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterScenarioOptimisationPreferredSequenceItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterScenarioOptimisationPreferredSequenceItemInput]
  or: [FilterScenarioOptimisationPreferredSequenceItemInput]
  not: [FilterScenarioOptimisationPreferredSequenceItemInput]
  optimisationPreferredSequence: FilterOptimisationPreferredSequenceInput
  optimisationPropertyValue: FilterOptimisationPropertyValueInput
}

input FilterScenarioOptimisationPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  and: [FilterScenarioOptimisationPropertyInput]
  or: [FilterScenarioOptimisationPropertyInput]
  not: [FilterScenarioOptimisationPropertyInput]
}

input FilterScenarioOptimisationPropertyValueInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioOptimisationPropertyValueInput]
  or: [FilterScenarioOptimisationPropertyValueInput]
  not: [FilterScenarioOptimisationPropertyValueInput]
  optimisationProperty: FilterOptimisationPropertyInput
}

input FilterScenarioOptimizationHierarchyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioOptimizationHierarchyInput]
  or: [FilterScenarioOptimizationHierarchyInput]
  not: [FilterScenarioOptimizationHierarchyInput]
}

input FilterScenarioOrderInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  date: String
  date_lt: String
  date_le: String
  date_ge: String
  date_gt: String
  date_ne: String
  date_null: Boolean
  date_in: [String]
  date_like: String
  earliestStartDate: String
  earliestStartDate_lt: String
  earliestStartDate_le: String
  earliestStartDate_ge: String
  earliestStartDate_gt: String
  earliestStartDate_ne: String
  earliestStartDate_null: Boolean
  earliestStartDate_in: [String]
  earliestStartDate_like: String
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  priority: Int
  priority_lt: Int
  priority_le: Int
  priority_ge: Int
  priority_gt: Int
  priority_ne: Int
  priority_null: Boolean
  priority_in: [Int]
  and: [FilterScenarioOrderInput]
  or: [FilterScenarioOrderInput]
  not: [FilterScenarioOrderInput]
  status: FilterOrderStatusInput
}

input FilterScenarioOrderItemInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  and: [FilterScenarioOrderItemInput]
  or: [FilterScenarioOrderItemInput]
  not: [FilterScenarioOrderItemInput]
  order: FilterOrderInput
  operationsDefinitionClass: FilterOperationsDefinitionClassInput
}

input FilterScenarioOrderPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioOrderPropertyInput]
  or: [FilterScenarioOrderPropertyInput]
  not: [FilterScenarioOrderPropertyInput]
  order: FilterOrderInput
}

input FilterScenarioOrderStatusInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  status: String
  status_lt: String
  status_le: String
  status_ge: String
  status_gt: String
  status_ne: String
  status_null: Boolean
  status_in: [String]
  status_like: String
  and: [FilterScenarioOrderStatusInput]
  or: [FilterScenarioOrderStatusInput]
  not: [FilterScenarioOrderStatusInput]
}

input FilterScenarioPersonDowntimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioPersonDowntimePeriodInput]
  or: [FilterScenarioPersonDowntimePeriodInput]
  not: [FilterScenarioPersonDowntimePeriodInput]
  person: FilterPersonInput
  downtimePeriod: FilterDowntimePeriodInput
}

input FilterScenarioPersonInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  name: String
  name_lt: String
  name_le: String
  name_ge: String
  name_gt: String
  name_ne: String
  name_null: Boolean
  name_in: [String]
  name_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonInput]
  or: [FilterScenarioPersonInput]
  not: [FilterScenarioPersonInput]
  hierarchyScope: FilterHierarchyScopeInput
  calendarisedAvailabilityTemplateSet: FilterCalendarisedAvailabilityTemplateSetInput
}

input FilterScenarioPersonnelCapabilityInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  capabilityType: String
  capabilityType_lt: String
  capabilityType_le: String
  capabilityType_ge: String
  capabilityType_gt: String
  capabilityType_ne: String
  capabilityType_null: Boolean
  capabilityType_in: [String]
  capabilityType_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  reason: String
  reason_lt: String
  reason_le: String
  reason_ge: String
  reason_gt: String
  reason_ne: String
  reason_null: Boolean
  reason_in: [String]
  reason_like: String
  and: [FilterScenarioPersonnelCapabilityInput]
  or: [FilterScenarioPersonnelCapabilityInput]
  not: [FilterScenarioPersonnelCapabilityInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
  operationsSegment: FilterOperationsSegmentInput
}

input FilterScenarioPersonnelClassInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonnelClassInput]
  or: [FilterScenarioPersonnelClassInput]
  not: [FilterScenarioPersonnelClassInput]
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioPersonnelClassPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioPersonnelClassPersonMemberInput]
  or: [FilterScenarioPersonnelClassPersonMemberInput]
  not: [FilterScenarioPersonnelClassPersonMemberInput]
  personnelClass: FilterPersonnelClassInput
  person: FilterPersonInput
}

input FilterScenarioPersonnelClassPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioPersonnelClassPropertyInput]
  or: [FilterScenarioPersonnelClassPropertyInput]
  not: [FilterScenarioPersonnelClassPropertyInput]
  personnelClass: FilterPersonnelClassInput
}

input FilterScenarioPersonnelPositionInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioPersonnelPositionInput]
  or: [FilterScenarioPersonnelPositionInput]
  not: [FilterScenarioPersonnelPositionInput]
  personnelClass: FilterPersonnelClassInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioPersonnelPositionPersonMemberInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioPersonnelPositionPersonMemberInput]
  or: [FilterScenarioPersonnelPositionPersonMemberInput]
  not: [FilterScenarioPersonnelPositionPersonMemberInput]
  personnelPosition: FilterPersonnelPositionInput
  person: FilterPersonInput
}

input FilterScenarioPersonnelPositionPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioPersonnelPositionPropertyInput]
  or: [FilterScenarioPersonnelPositionPropertyInput]
  not: [FilterScenarioPersonnelPositionPropertyInput]
  personnelPosition: FilterPersonnelPositionInput
}

input FilterScenarioPersonPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioPersonPropertyInput]
  or: [FilterScenarioPersonPropertyInput]
  not: [FilterScenarioPersonPropertyInput]
  person: FilterPersonInput
}

input FilterScenarioScenarioAttributeInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  changeoverTime: Float
  changeoverTime_lt: Float
  changeoverTime_le: Float
  changeoverTime_ge: Float
  changeoverTime_gt: Float
  changeoverTime_ne: Float
  changeoverTime_null: Boolean
  changeoverTime_in: [Float]
  changeoverCount: Int
  changeoverCount_lt: Int
  changeoverCount_le: Int
  changeoverCount_ge: Int
  changeoverCount_gt: Int
  changeoverCount_ne: Int
  changeoverCount_null: Boolean
  changeoverCount_in: [Int]
  waitingTime: Float
  waitingTime_lt: Float
  waitingTime_le: Float
  waitingTime_ge: Float
  waitingTime_gt: Float
  waitingTime_ne: Float
  waitingTime_null: Boolean
  waitingTime_in: [Float]
  inventoryShortage: Float
  inventoryShortage_lt: Float
  inventoryShortage_le: Float
  inventoryShortage_ge: Float
  inventoryShortage_gt: Float
  inventoryShortage_ne: Float
  inventoryShortage_null: Boolean
  inventoryShortage_in: [Float]
  overdueCount: Int
  overdueCount_lt: Int
  overdueCount_le: Int
  overdueCount_ge: Int
  overdueCount_gt: Int
  overdueCount_ne: Int
  overdueCount_null: Boolean
  overdueCount_in: [Int]
  conflictCount: Int
  conflictCount_lt: Int
  conflictCount_le: Int
  conflictCount_ge: Int
  conflictCount_gt: Int
  conflictCount_ne: Int
  conflictCount_null: Boolean
  conflictCount_in: [Int]
  and: [FilterScenarioScenarioAttributeInput]
  or: [FilterScenarioScenarioAttributeInput]
  not: [FilterScenarioScenarioAttributeInput]
}

input FilterScenarioSegmentRequirementDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterScenarioSegmentRequirementDescendantInput]
  or: [FilterScenarioSegmentRequirementDescendantInput]
  not: [FilterScenarioSegmentRequirementDescendantInput]
  ascendant: FilterSegmentRequirementInput
  descendant: FilterSegmentRequirementInput
}

input FilterScenarioSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterScenarioSegmentRequirementEquipmentRequirementInput]
  or: [FilterScenarioSegmentRequirementEquipmentRequirementInput]
  not: [FilterScenarioSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterScenarioSegmentRequirementInput]
  or: [FilterScenarioSegmentRequirementInput]
  not: [FilterScenarioSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
}

input FilterScenarioSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterScenarioSegmentRequirementMaterialRequirementInput]
  or: [FilterScenarioSegmentRequirementMaterialRequirementInput]
  not: [FilterScenarioSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
}

input FilterScenarioSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterScenarioSegmentRequirementPersonnelRequirementInput]
  or: [FilterScenarioSegmentRequirementPersonnelRequirementInput]
  not: [FilterScenarioSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
}

input FilterScenarioSegmentRequirementPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterScenarioSegmentRequirementPropertyInput]
  or: [FilterScenarioSegmentRequirementPropertyInput]
  not: [FilterScenarioSegmentRequirementPropertyInput]
  segmentRequirement: FilterSegmentRequirementInput
}

input FilterScenarioTimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterScenarioTimePeriodInput]
  or: [FilterScenarioTimePeriodInput]
  not: [FilterScenarioTimePeriodInput]
}

input FilterSegmentRequirementDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterSegmentRequirementDescendantInput]
  or: [FilterSegmentRequirementDescendantInput]
  not: [FilterSegmentRequirementDescendantInput]
  ascendant: FilterSegmentRequirementInput
  descendant: FilterSegmentRequirementInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterSegmentRequirementEquipmentRequirementInput]
  or: [FilterSegmentRequirementEquipmentRequirementInput]
  not: [FilterSegmentRequirementEquipmentRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterSegmentRequirementInput]
  or: [FilterSegmentRequirementInput]
  not: [FilterSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  parentSegmentRequirement: FilterSegmentRequirementInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
  segmentRequirements_some: FilterSegmentRequirementSegmentRequirementInput
  segmentRequirements_none: FilterSegmentRequirementSegmentRequirementInput
  segmentRequirementDescendantsAscendant_some: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput
  segmentRequirementDescendantsAscendant_none: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput
  segmentRequirementDescendantsDescendant_some: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput
  segmentRequirementDescendantsDescendant_none: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput
  segmentRequirementProperties_some: FilterSegmentRequirementSegmentRequirementPropertyInput
  segmentRequirementProperties_none: FilterSegmentRequirementSegmentRequirementPropertyInput
  segmentRequirementMaterialRequirements_some: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementPersonnelRequirements_some: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput
  segmentRequirementPersonnelRequirements_none: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput
  segmentRequirementEquipmentRequirements_some: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput
  segmentRequirementEquipmentRequirements_none: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput
}

input FilterSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
  segmentRequirementMaterialRequirements_some: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
  segmentRequirementMaterialRequirements_none: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
}

input FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterSegmentRequirementPersonnelRequirementInput]
  or: [FilterSegmentRequirementPersonnelRequirementInput]
  not: [FilterSegmentRequirementPersonnelRequirementInput]
  segmentRequirement: FilterSegmentRequirementInput
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterSegmentRequirementPropertyInput]
  or: [FilterSegmentRequirementPropertyInput]
  not: [FilterSegmentRequirementPropertyInput]
  segmentRequirement: FilterSegmentRequirementInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementDescendantAscendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterSegmentRequirementSegmentRequirementDescendantAscendantInput]
  or: [FilterSegmentRequirementSegmentRequirementDescendantAscendantInput]
  not: [FilterSegmentRequirementSegmentRequirementDescendantAscendantInput]
  descendant: FilterSegmentRequirementInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementDescendantDescendantInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  and: [FilterSegmentRequirementSegmentRequirementDescendantDescendantInput]
  or: [FilterSegmentRequirementSegmentRequirementDescendantDescendantInput]
  not: [FilterSegmentRequirementSegmentRequirementDescendantDescendantInput]
  ascendant: FilterSegmentRequirementInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  and: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  equipment: FilterEquipmentInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  segmentState: String
  segmentState_lt: String
  segmentState_le: String
  segmentState_ge: String
  segmentState_gt: String
  segmentState_ne: String
  segmentState_null: Boolean
  segmentState_in: [String]
  segmentState_like: String
  and: [FilterSegmentRequirementSegmentRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementInput]
  operationsRequest: FilterOperationsRequestInput
  operationsSegment: FilterOperationsSegmentInput
  hierarchyScope: FilterHierarchyScopeInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementMaterialRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  materialUse: String
  materialUse_lt: String
  materialUse_le: String
  materialUse_ge: String
  materialUse_gt: String
  materialUse_ne: String
  materialUse_null: Boolean
  materialUse_in: [String]
  materialUse_like: String
  remainingQuantity: Float
  remainingQuantity_lt: Float
  remainingQuantity_le: Float
  remainingQuantity_ge: Float
  remainingQuantity_gt: Float
  remainingQuantity_ne: Float
  remainingQuantity_null: Boolean
  remainingQuantity_in: [Float]
  remainingQuantityUnitOfMeasure: String
  remainingQuantityUnitOfMeasure_lt: String
  remainingQuantityUnitOfMeasure_le: String
  remainingQuantityUnitOfMeasure_ge: String
  remainingQuantityUnitOfMeasure_gt: String
  remainingQuantityUnitOfMeasure_ne: String
  remainingQuantityUnitOfMeasure_null: Boolean
  remainingQuantityUnitOfMeasure_in: [String]
  remainingQuantityUnitOfMeasure_like: String
  and: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementMaterialRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  materialDefinition: FilterMaterialDefinitionInput
  operationalLocation: FilterOperationalLocationInput
  materialLot: FilterMaterialLotInput
  parent: FilterSegmentRequirementMaterialRequirementInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  quantity: Float
  quantity_lt: Float
  quantity_le: Float
  quantity_ge: Float
  quantity_gt: Float
  quantity_ne: Float
  quantity_null: Boolean
  quantity_in: [Float]
  quantityUnitOfMeasure: String
  quantityUnitOfMeasure_lt: String
  quantityUnitOfMeasure_le: String
  quantityUnitOfMeasure_ge: String
  quantityUnitOfMeasure_gt: String
  quantityUnitOfMeasure_ne: String
  quantityUnitOfMeasure_null: Boolean
  quantityUnitOfMeasure_in: [String]
  quantityUnitOfMeasure_like: String
  description: String
  description_lt: String
  description_le: String
  description_ge: String
  description_gt: String
  description_ne: String
  description_null: Boolean
  description_in: [String]
  description_like: String
  personnelUse: String
  personnelUse_lt: String
  personnelUse_le: String
  personnelUse_ge: String
  personnelUse_gt: String
  personnelUse_ne: String
  personnelUse_null: Boolean
  personnelUse_in: [String]
  personnelUse_like: String
  and: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  or: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  not: [FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  hierarchyScope: FilterHierarchyScopeInput
  person: FilterPersonInput
  personnelClass: FilterPersonnelClassInput
  operationalLocation: FilterOperationalLocationInput
  scenario: FilterScenarioInput
}

input FilterSegmentRequirementSegmentRequirementPropertyInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  externalId: String
  externalId_lt: String
  externalId_le: String
  externalId_ge: String
  externalId_gt: String
  externalId_ne: String
  externalId_null: Boolean
  externalId_in: [String]
  externalId_like: String
  value: String
  value_lt: String
  value_le: String
  value_ge: String
  value_gt: String
  value_ne: String
  value_null: Boolean
  value_in: [String]
  value_like: String
  dataType: String
  dataType_lt: String
  dataType_le: String
  dataType_ge: String
  dataType_gt: String
  dataType_ne: String
  dataType_null: Boolean
  dataType_in: [String]
  dataType_like: String
  and: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  or: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  not: [FilterSegmentRequirementSegmentRequirementPropertyInput]
  scenario: FilterScenarioInput
}

input FilterTimePeriodInput {
  id: Int
  id_lt: Int
  id_le: Int
  id_ge: Int
  id_gt: Int
  id_ne: Int
  id_null: Boolean
  id_in: [Int]
  startTime: String
  startTime_lt: String
  startTime_le: String
  startTime_ge: String
  startTime_gt: String
  startTime_ne: String
  startTime_null: Boolean
  startTime_in: [String]
  startTime_like: String
  endTime: String
  endTime_lt: String
  endTime_le: String
  endTime_ge: String
  endTime_gt: String
  endTime_ne: String
  endTime_null: Boolean
  endTime_in: [String]
  endTime_like: String
  and: [FilterTimePeriodInput]
  or: [FilterTimePeriodInput]
  not: [FilterTimePeriodInput]
  scenario: FilterScenarioInput
}

input FindAvailabilityTemplateInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindAvailabilityTemplateItemInput {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  availabilityTemplate: FindAvailabilityTemplateInput
  scenario: FindScenarioInput
}

input FindCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  startTime: String
  calendarisedAvailabilityTemplateSet: FindCalendarisedAvailabilityTemplateSetInput
  scenario: FindScenarioInput
}

input FindCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindCalendarisedThroughputSetItemInput {
  id: Int
  startTime: String
  calendarisedThroughputSet: FindCalendarisedThroughputSetInput
  scenario: FindScenarioInput
}

input FindChangeoverSetInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindChangeoverSetItemInput {
  id: Int
  changeoverSet: FindChangeoverSetInput
  fromValue: FindOptimisationPropertyValueInput
  toValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input FindColourSchemeInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindColourSchemeItemInput {
  id: Int
  colourScheme: FindColourSchemeInput
  propertyValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input FindConfigurableApplicationParameterInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindDowntimePeriodInput {
  id: Int
  externalId: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: FindScenarioInput
}

input FindEquipmentCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindEquipmentChildInput {
  id: Int
  parent: FindEquipmentInput
  child: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindEquipmentClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindEquipmentDescendantInput {
  id: Int
  ascendant: FindEquipmentInput
  descendant: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindEquipmentDowntimePeriodInput {
  id: Int
  equipment: FindEquipmentInput
  downtimePeriod: FindDowntimePeriodInput
  scenario: FindScenarioInput
}

input FindEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindEquipmentPropertyInput {
  id: Int
  externalId: String
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindHierarchyScopeDescendantInput {
  id: Int
  ascendant: FindHierarchyScopeInput
  descendant: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindHierarchyScopeInput {
  id: Int
  externalId: String
  parent: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialLotInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindMaterialPropertyInput {
  id: Int
  externalId: String
  materialDefinition: FindMaterialDefinitionInput
  scenario: FindScenarioInput
}

input FindOpenPurchaseOrderInput {
  id: Int
  externalId: String
  date: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindOperationalLocationInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOperationsDefinitionClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindOperationsDefinitionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
}

input FindOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindOperationsRequestInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input FindOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  person: FindPersonInput
  scenario: FindScenarioInput
}

input FindOperationsRequestProfileInput {
  id: Int
  operationsRequest: FindOperationsRequestInput
  orderItem: FindOrderItemInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: FindOperationsSegmentInput
  toOperationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentDescendantInput {
  id: Int
  ascendant: FindOperationsSegmentInput
  descendant: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  equipmentClass: FindEquipmentClassInput
  equipment: FindEquipmentInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  materialDefinition: FindMaterialDefinitionInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: FindOperationsSegmentInput
  person: FindPersonInput
  personnelClass: FindPersonnelClassInput
  scenario: FindScenarioInput
}

input FindOperationsSegmentPropertyInput {
  id: Int
  externalId: String
  operationsSegment: FindOperationsSegmentInput
  scenario: FindScenarioInput
}

input FindOptimisationHierarchyAttributeInput {
  id: Int
  priority: Int
  optimisationHierarchy: FindOptimisationHierarchyInput
  optimisationProperty: FindOptimisationPropertyInput
  scenario: FindScenarioInput
}

input FindOptimisationHierarchyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
  optimisationProperty: FindOptimisationPropertyInput
}

input FindOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: FindOptimisationPreferredSequenceInput
  optimisationPropertyValue: FindOptimisationPropertyValueInput
  scenario: FindScenarioInput
}

input FindOptimisationPropertyInput {
  id: Int
  name: String
  scenario: FindScenarioInput
}

input FindOptimisationPropertyValueInput {
  id: Int
  value: String
  optimisationProperty: FindOptimisationPropertyInput
  scenario: FindScenarioInput
}

input FindOptimizationHierarchyInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOrderInput {
  id: Int
  externalId: String
  scenario: FindScenarioInput
}

input FindOrderItemInput {
  id: Int
  order: FindOrderInput
  operationsDefinitionClass: FindOperationsDefinitionClassInput
  scenario: FindScenarioInput
}

input FindOrderPropertyInput {
  id: Int
  externalId: String
  order: FindOrderInput
  scenario: FindScenarioInput
}

input FindOrderStatusInput {
  id: Int
  status: String
  scenario: FindScenarioInput
}

input FindPersonDowntimePeriodInput {
  id: Int
  person: FindPersonInput
  downtimePeriod: FindDowntimePeriodInput
  scenario: FindScenarioInput
}

input FindPersonInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelCapabilityInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelClassInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelClassPersonMemberInput {
  id: Int
  personnelClass: FindPersonnelClassInput
  person: FindPersonInput
  scenario: FindScenarioInput
}

input FindPersonnelClassPropertyInput {
  id: Int
  externalId: String
  personnelClass: FindPersonnelClassInput
  scenario: FindScenarioInput
}

input FindPersonnelPositionInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindPersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: FindPersonnelPositionInput
  person: FindPersonInput
  scenario: FindScenarioInput
}

input FindPersonnelPositionPropertyInput {
  id: Int
  externalId: String
  personnelPosition: FindPersonnelPositionInput
  scenario: FindScenarioInput
}

input FindPersonPropertyInput {
  id: Int
  externalId: String
  person: FindPersonInput
  scenario: FindScenarioInput
}

input FindScenarioAttributeInput {
  id: Int
  scenario: FindScenarioInput
}

input FindScenarioInput {
  id: Int
  name: String
}

input FindSegmentRequirementDescendantInput {
  id: Int
  ascendant: FindSegmentRequirementInput
  descendant: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input FindSegmentRequirementEquipmentRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindSegmentRequirementInput {
  id: Int
  externalId: String
  operationsRequest: FindOperationsRequestInput
  parentSegmentRequirement: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input FindSegmentRequirementMaterialRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindSegmentRequirementPersonnelRequirementInput {
  id: Int
  externalId: String
  hierarchyScope: FindHierarchyScopeInput
  scenario: FindScenarioInput
}

input FindSegmentRequirementPropertyInput {
  id: Int
  externalId: String
  segmentRequirement: FindSegmentRequirementInput
  scenario: FindScenarioInput
}

input FindTimePeriodInput {
  id: Int
  startTime: String
  scenario: FindScenarioInput
}

type HierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  parent: HierarchyScope
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  hierarchyScopeDescendantsAscendant(where: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantAscendant]
  hierarchyScopeDescendantsDescendant(where: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantDescendant]
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
}

type HierarchyScopeConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeEdge]
}

type HierarchyScopeDescendant {
  id: Int
  ascendant: HierarchyScope
  descendant: HierarchyScope
  scenario: Scenario
}

type HierarchyScopeDescendantConnection {
  pageInfo: PageInfo
  edges: [HierarchyScopeDescendantEdge]
}

type HierarchyScopeDescendantEdge {
  node: HierarchyScopeDescendant
  cursor: String
}

type HierarchyScopeEdge {
  node: HierarchyScope
  cursor: String
}

type HierarchyScopeEquipment {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type HierarchyScopeEquipmentCapability {
  id: Int
  equipment: Equipment
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type HierarchyScopeEquipmentClass {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: Scenario
  equipmentClassEquipmentMembers(where: FilterEquipmentClassEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassEquipmentClassEquipmentMember]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
}

type HierarchyScopeHierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  scenario: Scenario
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  hierarchyScopeDescendantsAscendant(where: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantAscendant]
  hierarchyScopeDescendantsDescendant(where: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantDescendant]
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
}

type HierarchyScopeHierarchyScopeDescendantAscendant {
  id: Int
  descendant: HierarchyScope
  scenario: Scenario
}

type HierarchyScopeHierarchyScopeDescendantDescendant {
  id: Int
  ascendant: HierarchyScope
  scenario: Scenario
}

type HierarchyScopeMaterialDefinition {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
}

type HierarchyScopeMaterialLot {
  id: Int
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
}

type HierarchyScopeOpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type HierarchyScopeOperationalLocation {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
}

type HierarchyScopeOperationsDefinition {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: Scenario
  operationsDefinitionClass: OperationsDefinitionClass
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
}

type HierarchyScopeOperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: Scenario
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
}

type HierarchyScopeOperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  scenario: Scenario
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestProfiles(where: FilterOperationsRequestOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestProfile]
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
}

type HierarchyScopeOperationsSegment {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  scenario: Scenario
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  operationsSegmentDescendantsAscendant(where: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantAscendant]
  operationsSegmentDescendantsDescendant(where: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantDescendant]
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
}

type HierarchyScopeOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type HierarchyScopeOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type HierarchyScopeOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type HierarchyScopePerson {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personnelClassPersonMembers(where: FilterPersonPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelClassPersonMember]
  personnelPositionPersonMembers(where: FilterPersonPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelPositionPersonMember]
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  personDowntimePeriods(where: FilterPersonPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonDowntimePeriod]
}

type HierarchyScopePersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type HierarchyScopePersonnelClass {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelClassPersonMembers(where: FilterPersonnelClassPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassPersonMember]
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
}

type HierarchyScopePersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  description: String
  scenario: Scenario
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionPersonMember]
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
}

type HierarchyScopeSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: Scenario
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type HierarchyScopeSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type HierarchyScopeSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type HierarchyScopeSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
  scenario: Scenario
}

type MaterialDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
}

type MaterialDefinitionConnection {
  pageInfo: PageInfo
  edges: [MaterialDefinitionEdge]
}

type MaterialDefinitionEdge {
  node: MaterialDefinition
  cursor: String
}

type MaterialDefinitionMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
}

type MaterialDefinitionMaterialProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: OptimisationPropertyValue
  scenario: Scenario
}

type MaterialDefinitionOpenPurchaseOrder {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type MaterialDefinitionOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type MaterialDefinitionSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type MaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
}

type MaterialLotConnection {
  pageInfo: PageInfo
  edges: [MaterialLotEdge]
}

type MaterialLotEdge {
  node: MaterialLot
  cursor: String
}

type MaterialLotSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type MaterialProperty {
  id: Int
  materialDefinition: MaterialDefinition
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: OptimisationPropertyValue
  scenario: Scenario
}

type MaterialPropertyConnection {
  pageInfo: PageInfo
  edges: [MaterialPropertyEdge]
}

type MaterialPropertyEdge {
  node: MaterialProperty
  cursor: String
}

type Mutation {
  createScenario(data: CreateScenarioInput): Scenario
  createHierarchyScope(data: CreateHierarchyScopeInput): HierarchyScope
  createOptimisationProperty(data: CreateOptimisationPropertyInput): OptimisationProperty
  createOptimisationPropertyValue(data: CreateOptimisationPropertyValueInput): OptimisationPropertyValue
  createChangeoverSet(data: CreateChangeoverSetInput): ChangeoverSet
  createChangeoverSetItem(data: CreateChangeoverSetItemInput): ChangeoverSetItem
  createAvailabilityTemplate(data: CreateAvailabilityTemplateInput): AvailabilityTemplate
  createAvailabilityTemplateItem(data: CreateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  createCalendarisedAvailabilityTemplateSet(data: CreateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  createCalendarisedAvailabilityTemplateSetItem(data: CreateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  createOptimizationHierarchy(data: CreateOptimizationHierarchyInput): OptimizationHierarchy
  createEquipment(data: CreateEquipmentInput): Equipment
  createHierarchyScopeDescendant(data: CreateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  createEquipmentChild(data: CreateEquipmentChildInput): EquipmentChild
  createEquipmentDescendant(data: CreateEquipmentDescendantInput): EquipmentDescendant
  createEquipmentProperty(data: CreateEquipmentPropertyInput): EquipmentProperty
  createEquipmentClass(data: CreateEquipmentClassInput): EquipmentClass
  createEquipmentClassEquipmentMember(data: CreateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  createMaterialDefinition(data: CreateMaterialDefinitionInput): MaterialDefinition
  createPersonnelClass(data: CreatePersonnelClassInput): PersonnelClass
  createPersonnelClassProperty(data: CreatePersonnelClassPropertyInput): PersonnelClassProperty
  createPersonnelPosition(data: CreatePersonnelPositionInput): PersonnelPosition
  createPerson(data: CreatePersonInput): Person
  createPersonProperty(data: CreatePersonPropertyInput): PersonProperty
  createPersonnelClassPersonMember(data: CreatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  createPersonnelPositionPersonMember(data: CreatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  createPersonnelPositionProperty(data: CreatePersonnelPositionPropertyInput): PersonnelPositionProperty
  createOperationsDefinitionClass(data: CreateOperationsDefinitionClassInput): OperationsDefinitionClass
  createOperationsDefinition(data: CreateOperationsDefinitionInput): OperationsDefinition
  createOperationsSegment(data: CreateOperationsSegmentInput): OperationsSegment
  createEquipmentCapability(data: CreateEquipmentCapabilityInput): EquipmentCapability
  createPersonnelCapability(data: CreatePersonnelCapabilityInput): PersonnelCapability
  createOperationsSegmentDescendant(data: CreateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  createOperationsSegmentProperty(data: CreateOperationsSegmentPropertyInput): OperationsSegmentProperty
  createOperationsSegmentDependency(data: CreateOperationsSegmentDependencyInput): OperationsSegmentDependency
  createOperationalLocation(data: CreateOperationalLocationInput): OperationalLocation
  createCalendarisedThroughputSet(data: CreateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  createCalendarisedThroughputSetItem(data: CreateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  createOperationsSegmentMaterialSpecification(data: CreateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  createOperationsSegmentPersonnelSpecification(data: CreateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  createOperationsSegmentEquipmentSpecification(data: CreateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  createTimePeriod(data: CreateTimePeriodInput): TimePeriod
  createOrderStatus(data: CreateOrderStatusInput): OrderStatus
  createOrder(data: CreateOrderInput): Order
  createOrderItem(data: CreateOrderItemInput): OrderItem
  createOperationsRequest(data: CreateOperationsRequestInput): OperationsRequest
  createOperationsRequestPersonnel(data: CreateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  createOperationsRequestEquipment(data: CreateOperationsRequestEquipmentInput): OperationsRequestEquipment
  createOperationsRequestProfile(data: CreateOperationsRequestProfileInput): OperationsRequestProfile
  createSegmentRequirement(data: CreateSegmentRequirementInput): SegmentRequirement
  createSegmentRequirementDescendant(data: CreateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  createSegmentRequirementProperty(data: CreateSegmentRequirementPropertyInput): SegmentRequirementProperty
  createMaterialLot(data: CreateMaterialLotInput): MaterialLot
  createSegmentRequirementMaterialRequirement(data: CreateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  createSegmentRequirementPersonnelRequirement(data: CreateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  createSegmentRequirementEquipmentRequirement(data: CreateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  createOpenPurchaseOrder(data: CreateOpenPurchaseOrderInput): OpenPurchaseOrder
  createMaterialProperty(data: CreateMaterialPropertyInput): MaterialProperty
  createConfigurableApplicationParameter(data: CreateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  createColourScheme(data: CreateColourSchemeInput): ColourScheme
  createColourSchemeItem(data: CreateColourSchemeItemInput): ColourSchemeItem
  createDowntimePeriod(data: CreateDowntimePeriodInput): DowntimePeriod
  createEquipmentDowntimePeriod(data: CreateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  createPersonDowntimePeriod(data: CreatePersonDowntimePeriodInput): PersonDowntimePeriod
  createOptimisationHierarchy(data: CreateOptimisationHierarchyInput): OptimisationHierarchy
  createOptimisationHierarchyAttribute(data: CreateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  createScenarioAttribute(data: CreateScenarioAttributeInput): ScenarioAttribute
  createOptimisationPreferredSequence(data: CreateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  createOptimisationPreferredSequenceItem(data: CreateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  createOrderProperty(data: CreateOrderPropertyInput): OrderProperty
  updateScenario(where: FindScenarioInput, data: UpdateScenarioInput): Scenario
  updateHierarchyScope(where: FindHierarchyScopeInput, data: UpdateHierarchyScopeInput): HierarchyScope
  updateOptimisationProperty(where: FindOptimisationPropertyInput, data: UpdateOptimisationPropertyInput): OptimisationProperty
  updateOptimisationPropertyValue(where: FindOptimisationPropertyValueInput, data: UpdateOptimisationPropertyValueInput): OptimisationPropertyValue
  updateChangeoverSet(where: FindChangeoverSetInput, data: UpdateChangeoverSetInput): ChangeoverSet
  updateChangeoverSetItem(where: FindChangeoverSetItemInput, data: UpdateChangeoverSetItemInput): ChangeoverSetItem
  updateAvailabilityTemplate(where: FindAvailabilityTemplateInput, data: UpdateAvailabilityTemplateInput): AvailabilityTemplate
  updateAvailabilityTemplateItem(where: FindAvailabilityTemplateItemInput, data: UpdateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  updateCalendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput, data: UpdateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  updateCalendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput, data: UpdateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  updateOptimizationHierarchy(where: FindOptimizationHierarchyInput, data: UpdateOptimizationHierarchyInput): OptimizationHierarchy
  updateEquipment(where: FindEquipmentInput, data: UpdateEquipmentInput): Equipment
  updateHierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput, data: UpdateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  updateEquipmentChild(where: FindEquipmentChildInput, data: UpdateEquipmentChildInput): EquipmentChild
  updateEquipmentDescendant(where: FindEquipmentDescendantInput, data: UpdateEquipmentDescendantInput): EquipmentDescendant
  updateEquipmentProperty(where: FindEquipmentPropertyInput, data: UpdateEquipmentPropertyInput): EquipmentProperty
  updateEquipmentClass(where: FindEquipmentClassInput, data: UpdateEquipmentClassInput): EquipmentClass
  updateEquipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput, data: UpdateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  updateMaterialDefinition(where: FindMaterialDefinitionInput, data: UpdateMaterialDefinitionInput): MaterialDefinition
  updatePersonnelClass(where: FindPersonnelClassInput, data: UpdatePersonnelClassInput): PersonnelClass
  updatePersonnelClassProperty(where: FindPersonnelClassPropertyInput, data: UpdatePersonnelClassPropertyInput): PersonnelClassProperty
  updatePersonnelPosition(where: FindPersonnelPositionInput, data: UpdatePersonnelPositionInput): PersonnelPosition
  updatePerson(where: FindPersonInput, data: UpdatePersonInput): Person
  updatePersonProperty(where: FindPersonPropertyInput, data: UpdatePersonPropertyInput): PersonProperty
  updatePersonnelClassPersonMember(where: FindPersonnelClassPersonMemberInput, data: UpdatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  updatePersonnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput, data: UpdatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  updatePersonnelPositionProperty(where: FindPersonnelPositionPropertyInput, data: UpdatePersonnelPositionPropertyInput): PersonnelPositionProperty
  updateOperationsDefinitionClass(where: FindOperationsDefinitionClassInput, data: UpdateOperationsDefinitionClassInput): OperationsDefinitionClass
  updateOperationsDefinition(where: FindOperationsDefinitionInput, data: UpdateOperationsDefinitionInput): OperationsDefinition
  updateOperationsSegment(where: FindOperationsSegmentInput, data: UpdateOperationsSegmentInput): OperationsSegment
  updateEquipmentCapability(where: FindEquipmentCapabilityInput, data: UpdateEquipmentCapabilityInput): EquipmentCapability
  updatePersonnelCapability(where: FindPersonnelCapabilityInput, data: UpdatePersonnelCapabilityInput): PersonnelCapability
  updateOperationsSegmentDescendant(where: FindOperationsSegmentDescendantInput, data: UpdateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  updateOperationsSegmentProperty(where: FindOperationsSegmentPropertyInput, data: UpdateOperationsSegmentPropertyInput): OperationsSegmentProperty
  updateOperationsSegmentDependency(where: FindOperationsSegmentDependencyInput, data: UpdateOperationsSegmentDependencyInput): OperationsSegmentDependency
  updateOperationalLocation(where: FindOperationalLocationInput, data: UpdateOperationalLocationInput): OperationalLocation
  updateCalendarisedThroughputSet(where: FindCalendarisedThroughputSetInput, data: UpdateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  updateCalendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput, data: UpdateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  updateOperationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput, data: UpdateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  updateOperationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput, data: UpdateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  updateOperationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput, data: UpdateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  updateTimePeriod(where: FindTimePeriodInput, data: UpdateTimePeriodInput): TimePeriod
  updateOrderStatus(where: FindOrderStatusInput, data: UpdateOrderStatusInput): OrderStatus
  updateOrder(where: FindOrderInput, data: UpdateOrderInput): Order
  updateOrderItem(where: FindOrderItemInput, data: UpdateOrderItemInput): OrderItem
  updateOperationsRequest(where: FindOperationsRequestInput, data: UpdateOperationsRequestInput): OperationsRequest
  updateOperationsRequestPersonnel(where: FindOperationsRequestPersonnelInput, data: UpdateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  updateOperationsRequestEquipment(where: FindOperationsRequestEquipmentInput, data: UpdateOperationsRequestEquipmentInput): OperationsRequestEquipment
  updateOperationsRequestProfile(where: FindOperationsRequestProfileInput, data: UpdateOperationsRequestProfileInput): OperationsRequestProfile
  updateSegmentRequirement(where: FindSegmentRequirementInput, data: UpdateSegmentRequirementInput): SegmentRequirement
  updateSegmentRequirementDescendant(where: FindSegmentRequirementDescendantInput, data: UpdateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  updateSegmentRequirementProperty(where: FindSegmentRequirementPropertyInput, data: UpdateSegmentRequirementPropertyInput): SegmentRequirementProperty
  updateMaterialLot(where: FindMaterialLotInput, data: UpdateMaterialLotInput): MaterialLot
  updateSegmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput, data: UpdateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  updateSegmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput, data: UpdateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  updateSegmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput, data: UpdateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  updateOpenPurchaseOrder(where: FindOpenPurchaseOrderInput, data: UpdateOpenPurchaseOrderInput): OpenPurchaseOrder
  updateMaterialProperty(where: FindMaterialPropertyInput, data: UpdateMaterialPropertyInput): MaterialProperty
  updateConfigurableApplicationParameter(where: FindConfigurableApplicationParameterInput, data: UpdateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  updateColourScheme(where: FindColourSchemeInput, data: UpdateColourSchemeInput): ColourScheme
  updateColourSchemeItem(where: FindColourSchemeItemInput, data: UpdateColourSchemeItemInput): ColourSchemeItem
  updateDowntimePeriod(where: FindDowntimePeriodInput, data: UpdateDowntimePeriodInput): DowntimePeriod
  updateEquipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput, data: UpdateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  updatePersonDowntimePeriod(where: FindPersonDowntimePeriodInput, data: UpdatePersonDowntimePeriodInput): PersonDowntimePeriod
  updateOptimisationHierarchy(where: FindOptimisationHierarchyInput, data: UpdateOptimisationHierarchyInput): OptimisationHierarchy
  updateOptimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput, data: UpdateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  updateScenarioAttribute(where: FindScenarioAttributeInput, data: UpdateScenarioAttributeInput): ScenarioAttribute
  updateOptimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput, data: UpdateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  updateOptimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput, data: UpdateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  updateOrderProperty(where: FindOrderPropertyInput, data: UpdateOrderPropertyInput): OrderProperty
  upsertScenario(create: CreateScenarioInput, update: UpdateScenarioInput): Scenario
  upsertHierarchyScope(create: CreateHierarchyScopeInput, update: UpdateHierarchyScopeInput): HierarchyScope
  upsertOptimisationProperty(create: CreateOptimisationPropertyInput, update: UpdateOptimisationPropertyInput): OptimisationProperty
  upsertOptimisationPropertyValue(create: CreateOptimisationPropertyValueInput, update: UpdateOptimisationPropertyValueInput): OptimisationPropertyValue
  upsertChangeoverSet(create: CreateChangeoverSetInput, update: UpdateChangeoverSetInput): ChangeoverSet
  upsertChangeoverSetItem(create: CreateChangeoverSetItemInput, update: UpdateChangeoverSetItemInput): ChangeoverSetItem
  upsertAvailabilityTemplate(create: CreateAvailabilityTemplateInput, update: UpdateAvailabilityTemplateInput): AvailabilityTemplate
  upsertAvailabilityTemplateItem(create: CreateAvailabilityTemplateItemInput, update: UpdateAvailabilityTemplateItemInput): AvailabilityTemplateItem
  upsertCalendarisedAvailabilityTemplateSet(create: CreateCalendarisedAvailabilityTemplateSetInput, update: UpdateCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  upsertCalendarisedAvailabilityTemplateSetItem(create: CreateCalendarisedAvailabilityTemplateSetItemInput, update: UpdateCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  upsertOptimizationHierarchy(create: CreateOptimizationHierarchyInput, update: UpdateOptimizationHierarchyInput): OptimizationHierarchy
  upsertEquipment(create: CreateEquipmentInput, update: UpdateEquipmentInput): Equipment
  upsertHierarchyScopeDescendant(create: CreateHierarchyScopeDescendantInput, update: UpdateHierarchyScopeDescendantInput): HierarchyScopeDescendant
  upsertEquipmentChild(create: CreateEquipmentChildInput, update: UpdateEquipmentChildInput): EquipmentChild
  upsertEquipmentDescendant(create: CreateEquipmentDescendantInput, update: UpdateEquipmentDescendantInput): EquipmentDescendant
  upsertEquipmentProperty(create: CreateEquipmentPropertyInput, update: UpdateEquipmentPropertyInput): EquipmentProperty
  upsertEquipmentClass(create: CreateEquipmentClassInput, update: UpdateEquipmentClassInput): EquipmentClass
  upsertEquipmentClassEquipmentMember(create: CreateEquipmentClassEquipmentMemberInput, update: UpdateEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  upsertMaterialDefinition(create: CreateMaterialDefinitionInput, update: UpdateMaterialDefinitionInput): MaterialDefinition
  upsertPersonnelClass(create: CreatePersonnelClassInput, update: UpdatePersonnelClassInput): PersonnelClass
  upsertPersonnelClassProperty(create: CreatePersonnelClassPropertyInput, update: UpdatePersonnelClassPropertyInput): PersonnelClassProperty
  upsertPersonnelPosition(create: CreatePersonnelPositionInput, update: UpdatePersonnelPositionInput): PersonnelPosition
  upsertPerson(create: CreatePersonInput, update: UpdatePersonInput): Person
  upsertPersonProperty(create: CreatePersonPropertyInput, update: UpdatePersonPropertyInput): PersonProperty
  upsertPersonnelClassPersonMember(create: CreatePersonnelClassPersonMemberInput, update: UpdatePersonnelClassPersonMemberInput): PersonnelClassPersonMember
  upsertPersonnelPositionPersonMember(create: CreatePersonnelPositionPersonMemberInput, update: UpdatePersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  upsertPersonnelPositionProperty(create: CreatePersonnelPositionPropertyInput, update: UpdatePersonnelPositionPropertyInput): PersonnelPositionProperty
  upsertOperationsDefinitionClass(create: CreateOperationsDefinitionClassInput, update: UpdateOperationsDefinitionClassInput): OperationsDefinitionClass
  upsertOperationsDefinition(create: CreateOperationsDefinitionInput, update: UpdateOperationsDefinitionInput): OperationsDefinition
  upsertOperationsSegment(create: CreateOperationsSegmentInput, update: UpdateOperationsSegmentInput): OperationsSegment
  upsertEquipmentCapability(create: CreateEquipmentCapabilityInput, update: UpdateEquipmentCapabilityInput): EquipmentCapability
  upsertPersonnelCapability(create: CreatePersonnelCapabilityInput, update: UpdatePersonnelCapabilityInput): PersonnelCapability
  upsertOperationsSegmentDescendant(create: CreateOperationsSegmentDescendantInput, update: UpdateOperationsSegmentDescendantInput): OperationsSegmentDescendant
  upsertOperationsSegmentProperty(create: CreateOperationsSegmentPropertyInput, update: UpdateOperationsSegmentPropertyInput): OperationsSegmentProperty
  upsertOperationsSegmentDependency(create: CreateOperationsSegmentDependencyInput, update: UpdateOperationsSegmentDependencyInput): OperationsSegmentDependency
  upsertOperationalLocation(create: CreateOperationalLocationInput, update: UpdateOperationalLocationInput): OperationalLocation
  upsertCalendarisedThroughputSet(create: CreateCalendarisedThroughputSetInput, update: UpdateCalendarisedThroughputSetInput): CalendarisedThroughputSet
  upsertCalendarisedThroughputSetItem(create: CreateCalendarisedThroughputSetItemInput, update: UpdateCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  upsertOperationsSegmentMaterialSpecification(create: CreateOperationsSegmentMaterialSpecificationInput, update: UpdateOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  upsertOperationsSegmentPersonnelSpecification(create: CreateOperationsSegmentPersonnelSpecificationInput, update: UpdateOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  upsertOperationsSegmentEquipmentSpecification(create: CreateOperationsSegmentEquipmentSpecificationInput, update: UpdateOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  upsertTimePeriod(create: CreateTimePeriodInput, update: UpdateTimePeriodInput): TimePeriod
  upsertOrderStatus(create: CreateOrderStatusInput, update: UpdateOrderStatusInput): OrderStatus
  upsertOrder(create: CreateOrderInput, update: UpdateOrderInput): Order
  upsertOrderItem(create: CreateOrderItemInput, update: UpdateOrderItemInput): OrderItem
  upsertOperationsRequest(create: CreateOperationsRequestInput, update: UpdateOperationsRequestInput): OperationsRequest
  upsertOperationsRequestPersonnel(create: CreateOperationsRequestPersonnelInput, update: UpdateOperationsRequestPersonnelInput): OperationsRequestPersonnel
  upsertOperationsRequestEquipment(create: CreateOperationsRequestEquipmentInput, update: UpdateOperationsRequestEquipmentInput): OperationsRequestEquipment
  upsertOperationsRequestProfile(create: CreateOperationsRequestProfileInput, update: UpdateOperationsRequestProfileInput): OperationsRequestProfile
  upsertSegmentRequirement(create: CreateSegmentRequirementInput, update: UpdateSegmentRequirementInput): SegmentRequirement
  upsertSegmentRequirementDescendant(create: CreateSegmentRequirementDescendantInput, update: UpdateSegmentRequirementDescendantInput): SegmentRequirementDescendant
  upsertSegmentRequirementProperty(create: CreateSegmentRequirementPropertyInput, update: UpdateSegmentRequirementPropertyInput): SegmentRequirementProperty
  upsertMaterialLot(create: CreateMaterialLotInput, update: UpdateMaterialLotInput): MaterialLot
  upsertSegmentRequirementMaterialRequirement(create: CreateSegmentRequirementMaterialRequirementInput, update: UpdateSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  upsertSegmentRequirementPersonnelRequirement(create: CreateSegmentRequirementPersonnelRequirementInput, update: UpdateSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  upsertSegmentRequirementEquipmentRequirement(create: CreateSegmentRequirementEquipmentRequirementInput, update: UpdateSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  upsertOpenPurchaseOrder(create: CreateOpenPurchaseOrderInput, update: UpdateOpenPurchaseOrderInput): OpenPurchaseOrder
  upsertMaterialProperty(create: CreateMaterialPropertyInput, update: UpdateMaterialPropertyInput): MaterialProperty
  upsertConfigurableApplicationParameter(create: CreateConfigurableApplicationParameterInput, update: UpdateConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  upsertColourScheme(create: CreateColourSchemeInput, update: UpdateColourSchemeInput): ColourScheme
  upsertColourSchemeItem(create: CreateColourSchemeItemInput, update: UpdateColourSchemeItemInput): ColourSchemeItem
  upsertDowntimePeriod(create: CreateDowntimePeriodInput, update: UpdateDowntimePeriodInput): DowntimePeriod
  upsertEquipmentDowntimePeriod(create: CreateEquipmentDowntimePeriodInput, update: UpdateEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  upsertPersonDowntimePeriod(create: CreatePersonDowntimePeriodInput, update: UpdatePersonDowntimePeriodInput): PersonDowntimePeriod
  upsertOptimisationHierarchy(create: CreateOptimisationHierarchyInput, update: UpdateOptimisationHierarchyInput): OptimisationHierarchy
  upsertOptimisationHierarchyAttribute(create: CreateOptimisationHierarchyAttributeInput, update: UpdateOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  upsertScenarioAttribute(create: CreateScenarioAttributeInput, update: UpdateScenarioAttributeInput): ScenarioAttribute
  upsertOptimisationPreferredSequence(create: CreateOptimisationPreferredSequenceInput, update: UpdateOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  upsertOptimisationPreferredSequenceItem(create: CreateOptimisationPreferredSequenceItemInput, update: UpdateOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  upsertOrderProperty(create: CreateOrderPropertyInput, update: UpdateOrderPropertyInput): OrderProperty
  deleteScenario(where: FindScenarioInput): Scenario
  deleteHierarchyScope(where: FindHierarchyScopeInput): HierarchyScope
  deleteOptimisationProperty(where: FindOptimisationPropertyInput): OptimisationProperty
  deleteOptimisationPropertyValue(where: FindOptimisationPropertyValueInput): OptimisationPropertyValue
  deleteChangeoverSet(where: FindChangeoverSetInput): ChangeoverSet
  deleteChangeoverSetItem(where: FindChangeoverSetItemInput): ChangeoverSetItem
  deleteAvailabilityTemplate(where: FindAvailabilityTemplateInput): AvailabilityTemplate
  deleteAvailabilityTemplateItem(where: FindAvailabilityTemplateItemInput): AvailabilityTemplateItem
  deleteCalendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  deleteCalendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  deleteOptimizationHierarchy(where: FindOptimizationHierarchyInput): OptimizationHierarchy
  deleteEquipment(where: FindEquipmentInput): Equipment
  deleteHierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput): HierarchyScopeDescendant
  deleteEquipmentChild(where: FindEquipmentChildInput): EquipmentChild
  deleteEquipmentDescendant(where: FindEquipmentDescendantInput): EquipmentDescendant
  deleteEquipmentProperty(where: FindEquipmentPropertyInput): EquipmentProperty
  deleteEquipmentClass(where: FindEquipmentClassInput): EquipmentClass
  deleteEquipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  deleteMaterialDefinition(where: FindMaterialDefinitionInput): MaterialDefinition
  deletePersonnelClass(where: FindPersonnelClassInput): PersonnelClass
  deletePersonnelClassProperty(where: FindPersonnelClassPropertyInput): PersonnelClassProperty
  deletePersonnelPosition(where: FindPersonnelPositionInput): PersonnelPosition
  deletePerson(where: FindPersonInput): Person
  deletePersonProperty(where: FindPersonPropertyInput): PersonProperty
  deletePersonnelClassPersonMember(where: FindPersonnelClassPersonMemberInput): PersonnelClassPersonMember
  deletePersonnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  deletePersonnelPositionProperty(where: FindPersonnelPositionPropertyInput): PersonnelPositionProperty
  deleteOperationsDefinitionClass(where: FindOperationsDefinitionClassInput): OperationsDefinitionClass
  deleteOperationsDefinition(where: FindOperationsDefinitionInput): OperationsDefinition
  deleteOperationsSegment(where: FindOperationsSegmentInput): OperationsSegment
  deleteEquipmentCapability(where: FindEquipmentCapabilityInput): EquipmentCapability
  deletePersonnelCapability(where: FindPersonnelCapabilityInput): PersonnelCapability
  deleteOperationsSegmentDescendant(where: FindOperationsSegmentDescendantInput): OperationsSegmentDescendant
  deleteOperationsSegmentProperty(where: FindOperationsSegmentPropertyInput): OperationsSegmentProperty
  deleteOperationsSegmentDependency(where: FindOperationsSegmentDependencyInput): OperationsSegmentDependency
  deleteOperationalLocation(where: FindOperationalLocationInput): OperationalLocation
  deleteCalendarisedThroughputSet(where: FindCalendarisedThroughputSetInput): CalendarisedThroughputSet
  deleteCalendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  deleteOperationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  deleteOperationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  deleteOperationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  deleteTimePeriod(where: FindTimePeriodInput): TimePeriod
  deleteOrderStatus(where: FindOrderStatusInput): OrderStatus
  deleteOrder(where: FindOrderInput): Order
  deleteOrderItem(where: FindOrderItemInput): OrderItem
  deleteOperationsRequest(where: FindOperationsRequestInput): OperationsRequest
  deleteOperationsRequestPersonnel(where: FindOperationsRequestPersonnelInput): OperationsRequestPersonnel
  deleteOperationsRequestEquipment(where: FindOperationsRequestEquipmentInput): OperationsRequestEquipment
  deleteOperationsRequestProfile(where: FindOperationsRequestProfileInput): OperationsRequestProfile
  deleteSegmentRequirement(where: FindSegmentRequirementInput): SegmentRequirement
  deleteSegmentRequirementDescendant(where: FindSegmentRequirementDescendantInput): SegmentRequirementDescendant
  deleteSegmentRequirementProperty(where: FindSegmentRequirementPropertyInput): SegmentRequirementProperty
  deleteMaterialLot(where: FindMaterialLotInput): MaterialLot
  deleteSegmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  deleteSegmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  deleteSegmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  deleteOpenPurchaseOrder(where: FindOpenPurchaseOrderInput): OpenPurchaseOrder
  deleteMaterialProperty(where: FindMaterialPropertyInput): MaterialProperty
  deleteConfigurableApplicationParameter(where: FindConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  deleteColourScheme(where: FindColourSchemeInput): ColourScheme
  deleteColourSchemeItem(where: FindColourSchemeItemInput): ColourSchemeItem
  deleteDowntimePeriod(where: FindDowntimePeriodInput): DowntimePeriod
  deleteEquipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  deletePersonDowntimePeriod(where: FindPersonDowntimePeriodInput): PersonDowntimePeriod
  deleteOptimisationHierarchy(where: FindOptimisationHierarchyInput): OptimisationHierarchy
  deleteOptimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  deleteScenarioAttribute(where: FindScenarioAttributeInput): ScenarioAttribute
  deleteOptimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  deleteOptimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  deleteOrderProperty(where: FindOrderPropertyInput): OrderProperty
}

type OpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
}

type OpenPurchaseOrderConnection {
  pageInfo: PageInfo
  edges: [OpenPurchaseOrderEdge]
}

type OpenPurchaseOrderEdge {
  node: OpenPurchaseOrder
  cursor: String
}

type OperationalLocation {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  availabileForUse: String
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
}

type OperationalLocationConnection {
  pageInfo: PageInfo
  edges: [OperationalLocationEdge]
}

type OperationalLocationEdge {
  node: OperationalLocation
  cursor: String
}

type OperationalLocationMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
}

type OperationalLocationOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: Scenario
}

type OperationalLocationOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type OperationalLocationOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: Scenario
}

type OperationalLocationSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  scenario: Scenario
}

type OperationalLocationSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type OperationalLocationSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
  scenario: Scenario
}

type OperationsDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: Scenario
  operationsDefinitionClass: OperationsDefinitionClass
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
}

type OperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  operationsType: String
  scenario: Scenario
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
}

type OperationsDefinitionClassConnection {
  pageInfo: PageInfo
  edges: [OperationsDefinitionClassEdge]
}

type OperationsDefinitionClassEdge {
  node: OperationsDefinitionClass
  cursor: String
}

type OperationsDefinitionClassOperationsDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: Scenario
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
}

type OperationsDefinitionClassOrderItem {
  id: Int
  order: Order
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: Scenario
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
}

type OperationsDefinitionConnection {
  pageInfo: PageInfo
  edges: [OperationsDefinitionEdge]
}

type OperationsDefinitionEdge {
  node: OperationsDefinition
  cursor: String
}

type OperationsDefinitionOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  scenario: Scenario
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  operationsSegmentDescendantsAscendant(where: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantAscendant]
  operationsSegmentDescendantsDescendant(where: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantDescendant]
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
}

type OperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  scenario: Scenario
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestProfiles(where: FilterOperationsRequestOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestProfile]
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
}

type OperationsRequestConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestEdge]
}

type OperationsRequestEdge {
  node: OperationsRequest
  cursor: String
}

type OperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  equipment: Equipment
  scenario: Scenario
}

type OperationsRequestEquipmentConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestEquipmentEdge]
}

type OperationsRequestEquipmentEdge {
  node: OperationsRequestEquipment
  cursor: String
}

type OperationsRequestOperationsRequestEquipment {
  id: Int
  equipment: Equipment
  scenario: Scenario
}

type OperationsRequestOperationsRequestPersonnel {
  id: Int
  person: Person
  scenario: Scenario
}

type OperationsRequestOperationsRequestProfile {
  id: Int
  orderItem: OrderItem
  startupCost: Float
  quantity: Float
  scenario: Scenario
}

type OperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  person: Person
  scenario: Scenario
}

type OperationsRequestPersonnelConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestPersonnelEdge]
}

type OperationsRequestPersonnelEdge {
  node: OperationsRequestPersonnel
  cursor: String
}

type OperationsRequestProfile {
  id: Int
  operationsRequest: OperationsRequest
  orderItem: OrderItem
  startupCost: Float
  quantity: Float
  scenario: Scenario
}

type OperationsRequestProfileConnection {
  pageInfo: PageInfo
  edges: [OperationsRequestProfileEdge]
}

type OperationsRequestProfileEdge {
  node: OperationsRequestProfile
  cursor: String
}

type OperationsRequestSegmentRequirement {
  id: Int
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: Scenario
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type OperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  scenario: Scenario
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  operationsSegmentDescendantsAscendant(where: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantAscendant]
  operationsSegmentDescendantsDescendant(where: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantDescendant]
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
}

type OperationsSegmentChangeoverSetItem {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: Scenario
}

type OperationsSegmentConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentEdge]
}

type OperationsSegmentDependency {
  id: Int
  fromOperationsSegment: OperationsSegment
  toOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: Scenario
}

type OperationsSegmentDependencyConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentDependencyEdge]
}

type OperationsSegmentDependencyEdge {
  node: OperationsSegmentDependency
  cursor: String
}

type OperationsSegmentDescendant {
  id: Int
  ascendant: OperationsSegment
  descendant: OperationsSegment
  scenario: Scenario
}

type OperationsSegmentDescendantConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentDescendantEdge]
}

type OperationsSegmentDescendantEdge {
  node: OperationsSegmentDescendant
  cursor: String
}

type OperationsSegmentEdge {
  node: OperationsSegment
  cursor: String
}

type OperationsSegmentEquipmentCapability {
  id: Int
  equipment: Equipment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type OperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type OperationsSegmentEquipmentSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentEquipmentSpecificationEdge]
}

type OperationsSegmentEquipmentSpecificationEdge {
  node: OperationsSegmentEquipmentSpecification
  cursor: String
}

type OperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type OperationsSegmentMaterialSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentMaterialSpecificationEdge]
}

type OperationsSegmentMaterialSpecificationEdge {
  node: OperationsSegmentMaterialSpecification
  cursor: String
}

type OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type OperationsSegmentOperationsRequest {
  id: Int
  scenario: Scenario
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestProfiles(where: FilterOperationsRequestOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestProfile]
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
}

type OperationsSegmentOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: OperationsDefinition
  scenario: Scenario
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  operationsSegmentDescendantsAscendant(where: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantAscendant]
  operationsSegmentDescendantsDescendant(where: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantDescendant]
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
}

type OperationsSegmentOperationsSegmentDependencyFromOperationsSegment {
  id: Int
  toOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentDependencyToOperationsSegment {
  id: Int
  fromOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentDescendantAscendant {
  id: Int
  descendant: OperationsSegment
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentDescendantDescendant {
  id: Int
  ascendant: OperationsSegment
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentEquipmentSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentMaterialSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  scenario: Scenario
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type OperationsSegmentOperationsSegmentPersonnelSpecification {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type OperationsSegmentOperationsSegmentProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type OperationsSegmentPersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type OperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type OperationsSegmentPersonnelSpecificationConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentPersonnelSpecificationEdge]
}

type OperationsSegmentPersonnelSpecificationEdge {
  node: OperationsSegmentPersonnelSpecification
  cursor: String
}

type OperationsSegmentProperty {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type OperationsSegmentPropertyConnection {
  pageInfo: PageInfo
  edges: [OperationsSegmentPropertyEdge]
}

type OperationsSegmentPropertyEdge {
  node: OperationsSegmentProperty
  cursor: String
}

type OperationsSegmentSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: Scenario
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type OptimisationHierarchy {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  equipments(where: FilterOptimisationHierarchyEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyEquipment]
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyOptimisationHierarchyAttribute]
}

type OptimisationHierarchyAttribute {
  id: Int
  optimisationHierarchy: OptimisationHierarchy
  optimisationProperty: OptimisationProperty
  description: String
  priority: Int
  scenario: Scenario
}

type OptimisationHierarchyAttributeConnection {
  pageInfo: PageInfo
  edges: [OptimisationHierarchyAttributeEdge]
}

type OptimisationHierarchyAttributeEdge {
  node: OptimisationHierarchyAttribute
  cursor: String
}

type OptimisationHierarchyConnection {
  pageInfo: PageInfo
  edges: [OptimisationHierarchyEdge]
}

type OptimisationHierarchyEdge {
  node: OptimisationHierarchy
  cursor: String
}

type OptimisationHierarchyEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationPreferredSequence: OptimisationPreferredSequence
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type OptimisationHierarchyOptimisationHierarchyAttribute {
  id: Int
  optimisationProperty: OptimisationProperty
  description: String
  priority: Int
  scenario: Scenario
}

type OptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  optimisationProperty: OptimisationProperty
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
}

type OptimisationPreferredSequenceConnection {
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceEdge]
}

type OptimisationPreferredSequenceEdge {
  node: OptimisationPreferredSequence
  cursor: String
}

type OptimisationPreferredSequenceEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  scenario: Scenario
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type OptimisationPreferredSequenceItem {
  id: Int
  optimisationPreferredSequence: OptimisationPreferredSequence
  optimisationPropertyValue: OptimisationPropertyValue
  priority: Int
  scenario: Scenario
}

type OptimisationPreferredSequenceItemConnection {
  pageInfo: PageInfo
  edges: [OptimisationPreferredSequenceItemEdge]
}

type OptimisationPreferredSequenceItemEdge {
  node: OptimisationPreferredSequenceItem
  cursor: String
}

type OptimisationPreferredSequenceOptimisationPreferredSequenceItem {
  id: Int
  optimisationPropertyValue: OptimisationPropertyValue
  priority: Int
  scenario: Scenario
}

type OptimisationProperty {
  id: Int
  name: String
  scenario: Scenario
  optimisationPropertyValues(where: FilterOptimisationPropertyOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPropertyValue]
  optimisationHierarchyAttributes(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationHierarchyAttribute]
  optimisationPreferredSequences(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPreferredSequence]
}

type OptimisationPropertyConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyEdge]
}

type OptimisationPropertyEdge {
  node: OptimisationProperty
  cursor: String
}

type OptimisationPropertyOptimisationHierarchyAttribute {
  id: Int
  optimisationHierarchy: OptimisationHierarchy
  description: String
  priority: Int
  scenario: Scenario
}

type OptimisationPropertyOptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
}

type OptimisationPropertyOptimisationPropertyValue {
  id: Int
  value: String
  dataType: String
  scenario: Scenario
  changeoverSetItemsFromValue(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemFromValue]
  changeoverSetItemsToValue(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemToValue]
  materialProperties(where: FilterOptimisationPropertyValueMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueMaterialProperty]
  colourSchemeItems(where: FilterOptimisationPropertyValueColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueColourSchemeItem]
  optimisationPreferredSequenceItems(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueOptimisationPreferredSequenceItem]
}

type OptimisationPropertyValue {
  id: Int
  optimisationProperty: OptimisationProperty
  value: String
  dataType: String
  scenario: Scenario
  changeoverSetItemsFromValue(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemFromValue]
  changeoverSetItemsToValue(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemToValue]
  materialProperties(where: FilterOptimisationPropertyValueMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueMaterialProperty]
  colourSchemeItems(where: FilterOptimisationPropertyValueColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueColourSchemeItem]
  optimisationPreferredSequenceItems(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueOptimisationPreferredSequenceItem]
}

type OptimisationPropertyValueChangeoverSetItemFromValue {
  id: Int
  changeoverSet: ChangeoverSet
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: Scenario
  operationsSegment: OperationsSegment
}

type OptimisationPropertyValueChangeoverSetItemToValue {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: Scenario
  operationsSegment: OperationsSegment
}

type OptimisationPropertyValueColourSchemeItem {
  id: Int
  colourScheme: ColourScheme
  red: Int
  green: Int
  blue: Int
  scenario: Scenario
}

type OptimisationPropertyValueConnection {
  pageInfo: PageInfo
  edges: [OptimisationPropertyValueEdge]
}

type OptimisationPropertyValueEdge {
  node: OptimisationPropertyValue
  cursor: String
}

type OptimisationPropertyValueMaterialProperty {
  id: Int
  materialDefinition: MaterialDefinition
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type OptimisationPropertyValueOptimisationPreferredSequenceItem {
  id: Int
  optimisationPreferredSequence: OptimisationPreferredSequence
  priority: Int
  scenario: Scenario
}

type OptimizationHierarchy {
  id: Int
  externalId: String
  description: String
  scenario: Scenario
}

type OptimizationHierarchyConnection {
  pageInfo: PageInfo
  edges: [OptimizationHierarchyEdge]
}

type OptimizationHierarchyEdge {
  node: OptimizationHierarchy
  cursor: String
}

type Order {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: OrderStatus
  priority: Int
  scenario: Scenario
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
}

type OrderConnection {
  pageInfo: PageInfo
  edges: [OrderEdge]
}

type OrderEdge {
  node: Order
  cursor: String
}

type OrderItem {
  id: Int
  order: Order
  operationsDefinitionClass: OperationsDefinitionClass
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: Scenario
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
}

type OrderItemConnection {
  pageInfo: PageInfo
  edges: [OrderItemEdge]
}

type OrderItemEdge {
  node: OrderItem
  cursor: String
}

type OrderItemOperationsRequestProfile {
  id: Int
  operationsRequest: OperationsRequest
  startupCost: Float
  quantity: Float
  scenario: Scenario
}

type OrderOrderItem {
  id: Int
  operationsDefinitionClass: OperationsDefinitionClass
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: Scenario
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
}

type OrderOrderProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type OrderProperty {
  id: Int
  order: Order
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type OrderPropertyConnection {
  pageInfo: PageInfo
  edges: [OrderPropertyEdge]
}

type OrderPropertyEdge {
  node: OrderProperty
  cursor: String
}

type OrderStatus {
  id: Int
  status: String
  scenario: Scenario
  orders(where: FilterOrderStatusOrderInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatusOrder]
}

type OrderStatusConnection {
  pageInfo: PageInfo
  edges: [OrderStatusEdge]
}

type OrderStatusEdge {
  node: OrderStatus
  cursor: String
}

type OrderStatusOrder {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: Scenario
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
}

type Person {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  scenario: Scenario
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personnelClassPersonMembers(where: FilterPersonPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelClassPersonMember]
  personnelPositionPersonMembers(where: FilterPersonPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelPositionPersonMember]
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  personDowntimePeriods(where: FilterPersonPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonDowntimePeriod]
}

type PersonConnection {
  pageInfo: PageInfo
  edges: [PersonEdge]
}

type PersonDowntimePeriod {
  id: Int
  person: Person
  downtimePeriod: DowntimePeriod
  scenario: Scenario
}

type PersonDowntimePeriodConnection {
  pageInfo: PageInfo
  edges: [PersonDowntimePeriodEdge]
}

type PersonDowntimePeriodEdge {
  node: PersonDowntimePeriod
  cursor: String
}

type PersonEdge {
  node: Person
  cursor: String
}

type PersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type PersonnelCapabilityConnection {
  pageInfo: PageInfo
  edges: [PersonnelCapabilityEdge]
}

type PersonnelCapabilityEdge {
  node: PersonnelCapability
  cursor: String
}

type PersonnelClass {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelClassPersonMembers(where: FilterPersonnelClassPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassPersonMember]
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
}

type PersonnelClassConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassEdge]
}

type PersonnelClassEdge {
  node: PersonnelClass
  cursor: String
}

type PersonnelClassOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type PersonnelClassPersonMember {
  id: Int
  personnelClass: PersonnelClass
  person: Person
  scenario: Scenario
}

type PersonnelClassPersonMemberConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassPersonMemberEdge]
}

type PersonnelClassPersonMemberEdge {
  node: PersonnelClassPersonMember
  cursor: String
}

type PersonnelClassPersonnelCapability {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: Scenario
}

type PersonnelClassPersonnelClassPersonMember {
  id: Int
  person: Person
  scenario: Scenario
}

type PersonnelClassPersonnelClassProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonnelClassPersonnelPosition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionPersonMember]
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
}

type PersonnelClassProperty {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonnelClassPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonnelClassPropertyEdge]
}

type PersonnelClassPropertyEdge {
  node: PersonnelClassProperty
  cursor: String
}

type PersonnelClassSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
  scenario: Scenario
}

type PersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  scenario: Scenario
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionPersonMember]
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
}

type PersonnelPositionConnection {
  pageInfo: PageInfo
  edges: [PersonnelPositionEdge]
}

type PersonnelPositionEdge {
  node: PersonnelPosition
  cursor: String
}

type PersonnelPositionPersonMember {
  id: Int
  personnelPosition: PersonnelPosition
  person: Person
  scenario: Scenario
}

type PersonnelPositionPersonMemberConnection {
  pageInfo: PageInfo
  edges: [PersonnelPositionPersonMemberEdge]
}

type PersonnelPositionPersonMemberEdge {
  node: PersonnelPositionPersonMember
  cursor: String
}

type PersonnelPositionPersonnelPositionPersonMember {
  id: Int
  person: Person
  scenario: Scenario
}

type PersonnelPositionPersonnelPositionProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonnelPositionProperty {
  id: Int
  personnelPosition: PersonnelPosition
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonnelPositionPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonnelPositionPropertyEdge]
}

type PersonnelPositionPropertyEdge {
  node: PersonnelPositionProperty
  cursor: String
}

type PersonOperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  scenario: Scenario
}

type PersonOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type PersonPersonDowntimePeriod {
  id: Int
  downtimePeriod: DowntimePeriod
  scenario: Scenario
}

type PersonPersonnelClassPersonMember {
  id: Int
  personnelClass: PersonnelClass
  scenario: Scenario
}

type PersonPersonnelPositionPersonMember {
  id: Int
  personnelPosition: PersonnelPosition
  scenario: Scenario
}

type PersonPersonProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonProperty {
  id: Int
  person: Person
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type PersonPropertyConnection {
  pageInfo: PageInfo
  edges: [PersonPropertyEdge]
}

type PersonPropertyEdge {
  node: PersonProperty
  cursor: String
}

type PersonSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
  scenario: Scenario
}

type Query {
  scenarios(where: FilterScenarioInput, limit: Int, offset: Int, orderBy: [String]): [Scenario]
  scenariosConnection(where: FilterScenarioInput, first: Int, after: String, orderBy: [String]): ScenarioConnection
  scenario(where: FindScenarioInput): Scenario
  hierarchyScopes(where: FilterHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScope]
  hierarchyScopesConnection(where: FilterHierarchyScopeInput, first: Int, after: String, orderBy: [String]): HierarchyScopeConnection
  hierarchyScope(where: FindHierarchyScopeInput): HierarchyScope
  optimisationProperties(where: FilterOptimisationPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationProperty]
  optimisationPropertiesConnection(where: FilterOptimisationPropertyInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyConnection
  optimisationProperty(where: FindOptimisationPropertyInput): OptimisationProperty
  optimisationPropertyValues(where: FilterOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValue]
  optimisationPropertyValuesConnection(where: FilterOptimisationPropertyValueInput, first: Int, after: String, orderBy: [String]): OptimisationPropertyValueConnection
  optimisationPropertyValue(where: FindOptimisationPropertyValueInput): OptimisationPropertyValue
  changeoverSets(where: FilterChangeoverSetInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSet]
  changeoverSetsConnection(where: FilterChangeoverSetInput, first: Int, after: String, orderBy: [String]): ChangeoverSetConnection
  changeoverSet(where: FindChangeoverSetInput): ChangeoverSet
  changeoverSetItems(where: FilterChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetItem]
  changeoverSetItemsConnection(where: FilterChangeoverSetItemInput, first: Int, after: String, orderBy: [String]): ChangeoverSetItemConnection
  changeoverSetItem(where: FindChangeoverSetItemInput): ChangeoverSetItem
  availabilityTemplates(where: FilterAvailabilityTemplateInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplate]
  availabilityTemplatesConnection(where: FilterAvailabilityTemplateInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateConnection
  availabilityTemplate(where: FindAvailabilityTemplateInput): AvailabilityTemplate
  availabilityTemplateItems(where: FilterAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateItem]
  availabilityTemplateItemsConnection(where: FilterAvailabilityTemplateItemInput, first: Int, after: String, orderBy: [String]): AvailabilityTemplateItemConnection
  availabilityTemplateItem(where: FindAvailabilityTemplateItemInput): AvailabilityTemplateItem
  calendarisedAvailabilityTemplateSets(where: FilterCalendarisedAvailabilityTemplateSetInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSet]
  calendarisedAvailabilityTemplateSetsConnection(where: FilterCalendarisedAvailabilityTemplateSetInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetConnection
  calendarisedAvailabilityTemplateSet(where: FindCalendarisedAvailabilityTemplateSetInput): CalendarisedAvailabilityTemplateSet
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetItem]
  calendarisedAvailabilityTemplateSetItemsConnection(where: FilterCalendarisedAvailabilityTemplateSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedAvailabilityTemplateSetItemConnection
  calendarisedAvailabilityTemplateSetItem(where: FindCalendarisedAvailabilityTemplateSetItemInput): CalendarisedAvailabilityTemplateSetItem
  optimizationHierarchies(where: FilterOptimizationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [OptimizationHierarchy]
  optimizationHierarchiesConnection(where: FilterOptimizationHierarchyInput, first: Int, after: String, orderBy: [String]): OptimizationHierarchyConnection
  optimizationHierarchy(where: FindOptimizationHierarchyInput): OptimizationHierarchy
  equipments(where: FilterEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [Equipment]
  equipmentsConnection(where: FilterEquipmentInput, first: Int, after: String, orderBy: [String]): EquipmentConnection
  equipment(where: FindEquipmentInput): Equipment
  hierarchyScopeDescendants(where: FilterHierarchyScopeDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeDescendant]
  hierarchyScopeDescendantsConnection(where: FilterHierarchyScopeDescendantInput, first: Int, after: String, orderBy: [String]): HierarchyScopeDescendantConnection
  hierarchyScopeDescendant(where: FindHierarchyScopeDescendantInput): HierarchyScopeDescendant
  equipmentChildren(where: FilterEquipmentChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentChild]
  equipmentChildrenConnection(where: FilterEquipmentChildInput, first: Int, after: String, orderBy: [String]): EquipmentChildConnection
  equipmentChild(where: FindEquipmentChildInput): EquipmentChild
  equipmentDescendants(where: FilterEquipmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentDescendant]
  equipmentDescendantsConnection(where: FilterEquipmentDescendantInput, first: Int, after: String, orderBy: [String]): EquipmentDescendantConnection
  equipmentDescendant(where: FindEquipmentDescendantInput): EquipmentDescendant
  equipmentProperties(where: FilterEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentProperty]
  equipmentPropertiesConnection(where: FilterEquipmentPropertyInput, first: Int, after: String, orderBy: [String]): EquipmentPropertyConnection
  equipmentProperty(where: FindEquipmentPropertyInput): EquipmentProperty
  equipmentClasses(where: FilterEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClass]
  equipmentClassesConnection(where: FilterEquipmentClassInput, first: Int, after: String, orderBy: [String]): EquipmentClassConnection
  equipmentClass(where: FindEquipmentClassInput): EquipmentClass
  equipmentClassEquipmentMembers(where: FilterEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassEquipmentMember]
  equipmentClassEquipmentMembersConnection(where: FilterEquipmentClassEquipmentMemberInput, first: Int, after: String, orderBy: [String]): EquipmentClassEquipmentMemberConnection
  equipmentClassEquipmentMember(where: FindEquipmentClassEquipmentMemberInput): EquipmentClassEquipmentMember
  materialDefinitions(where: FilterMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinition]
  materialDefinitionsConnection(where: FilterMaterialDefinitionInput, first: Int, after: String, orderBy: [String]): MaterialDefinitionConnection
  materialDefinition(where: FindMaterialDefinitionInput): MaterialDefinition
  personnelClasses(where: FilterPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClass]
  personnelClassesConnection(where: FilterPersonnelClassInput, first: Int, after: String, orderBy: [String]): PersonnelClassConnection
  personnelClass(where: FindPersonnelClassInput): PersonnelClass
  personnelClassProperties(where: FilterPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassProperty]
  personnelClassPropertiesConnection(where: FilterPersonnelClassPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelClassPropertyConnection
  personnelClassProperty(where: FindPersonnelClassPropertyInput): PersonnelClassProperty
  personnelPositions(where: FilterPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPosition]
  personnelPositionsConnection(where: FilterPersonnelPositionInput, first: Int, after: String, orderBy: [String]): PersonnelPositionConnection
  personnelPosition(where: FindPersonnelPositionInput): PersonnelPosition
  persons(where: FilterPersonInput, limit: Int, offset: Int, orderBy: [String]): [Person]
  personsConnection(where: FilterPersonInput, first: Int, after: String, orderBy: [String]): PersonConnection
  person(where: FindPersonInput): Person
  personProperties(where: FilterPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonProperty]
  personPropertiesConnection(where: FilterPersonPropertyInput, first: Int, after: String, orderBy: [String]): PersonPropertyConnection
  personProperty(where: FindPersonPropertyInput): PersonProperty
  personnelClassPersonMembers(where: FilterPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonMember]
  personnelClassPersonMembersConnection(where: FilterPersonnelClassPersonMemberInput, first: Int, after: String, orderBy: [String]): PersonnelClassPersonMemberConnection
  personnelClassPersonMember(where: FindPersonnelClassPersonMemberInput): PersonnelClassPersonMember
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonMember]
  personnelPositionPersonMembersConnection(where: FilterPersonnelPositionPersonMemberInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPersonMemberConnection
  personnelPositionPersonMember(where: FindPersonnelPositionPersonMemberInput): PersonnelPositionPersonMember
  personnelPositionProperties(where: FilterPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionProperty]
  personnelPositionPropertiesConnection(where: FilterPersonnelPositionPropertyInput, first: Int, after: String, orderBy: [String]): PersonnelPositionPropertyConnection
  personnelPositionProperty(where: FindPersonnelPositionPropertyInput): PersonnelPositionProperty
  operationsDefinitionClasses(where: FilterOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClass]
  operationsDefinitionClassesConnection(where: FilterOperationsDefinitionClassInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionClassConnection
  operationsDefinitionClass(where: FindOperationsDefinitionClassInput): OperationsDefinitionClass
  operationsDefinitions(where: FilterOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinition]
  operationsDefinitionsConnection(where: FilterOperationsDefinitionInput, first: Int, after: String, orderBy: [String]): OperationsDefinitionConnection
  operationsDefinition(where: FindOperationsDefinitionInput): OperationsDefinition
  operationsSegments(where: FilterOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegment]
  operationsSegmentsConnection(where: FilterOperationsSegmentInput, first: Int, after: String, orderBy: [String]): OperationsSegmentConnection
  operationsSegment(where: FindOperationsSegmentInput): OperationsSegment
  equipmentCapabilities(where: FilterEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentCapability]
  equipmentCapabilitiesConnection(where: FilterEquipmentCapabilityInput, first: Int, after: String, orderBy: [String]): EquipmentCapabilityConnection
  equipmentCapability(where: FindEquipmentCapabilityInput): EquipmentCapability
  personnelCapabilities(where: FilterPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelCapability]
  personnelCapabilitiesConnection(where: FilterPersonnelCapabilityInput, first: Int, after: String, orderBy: [String]): PersonnelCapabilityConnection
  personnelCapability(where: FindPersonnelCapabilityInput): PersonnelCapability
  operationsSegmentDescendants(where: FilterOperationsSegmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentDescendant]
  operationsSegmentDescendantsConnection(where: FilterOperationsSegmentDescendantInput, first: Int, after: String, orderBy: [String]): OperationsSegmentDescendantConnection
  operationsSegmentDescendant(where: FindOperationsSegmentDescendantInput): OperationsSegmentDescendant
  operationsSegmentProperties(where: FilterOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentProperty]
  operationsSegmentPropertiesConnection(where: FilterOperationsSegmentPropertyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPropertyConnection
  operationsSegmentProperty(where: FindOperationsSegmentPropertyInput): OperationsSegmentProperty
  operationsSegmentDependencies(where: FilterOperationsSegmentDependencyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentDependency]
  operationsSegmentDependenciesConnection(where: FilterOperationsSegmentDependencyInput, first: Int, after: String, orderBy: [String]): OperationsSegmentDependencyConnection
  operationsSegmentDependency(where: FindOperationsSegmentDependencyInput): OperationsSegmentDependency
  operationalLocations(where: FilterOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocation]
  operationalLocationsConnection(where: FilterOperationalLocationInput, first: Int, after: String, orderBy: [String]): OperationalLocationConnection
  operationalLocation(where: FindOperationalLocationInput): OperationalLocation
  calendarisedThroughputSets(where: FilterCalendarisedThroughputSetInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSet]
  calendarisedThroughputSetsConnection(where: FilterCalendarisedThroughputSetInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetConnection
  calendarisedThroughputSet(where: FindCalendarisedThroughputSetInput): CalendarisedThroughputSet
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetItem]
  calendarisedThroughputSetItemsConnection(where: FilterCalendarisedThroughputSetItemInput, first: Int, after: String, orderBy: [String]): CalendarisedThroughputSetItemConnection
  calendarisedThroughputSetItem(where: FindCalendarisedThroughputSetItemInput): CalendarisedThroughputSetItem
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecification]
  operationsSegmentMaterialSpecificationsConnection(where: FilterOperationsSegmentMaterialSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentMaterialSpecificationConnection
  operationsSegmentMaterialSpecification(where: FindOperationsSegmentMaterialSpecificationInput): OperationsSegmentMaterialSpecification
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelSpecification]
  operationsSegmentPersonnelSpecificationsConnection(where: FilterOperationsSegmentPersonnelSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentPersonnelSpecificationConnection
  operationsSegmentPersonnelSpecification(where: FindOperationsSegmentPersonnelSpecificationInput): OperationsSegmentPersonnelSpecification
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentSpecification]
  operationsSegmentEquipmentSpecificationsConnection(where: FilterOperationsSegmentEquipmentSpecificationInput, first: Int, after: String, orderBy: [String]): OperationsSegmentEquipmentSpecificationConnection
  operationsSegmentEquipmentSpecification(where: FindOperationsSegmentEquipmentSpecificationInput): OperationsSegmentEquipmentSpecification
  timePeriods(where: FilterTimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [TimePeriod]
  timePeriodsConnection(where: FilterTimePeriodInput, first: Int, after: String, orderBy: [String]): TimePeriodConnection
  timePeriod(where: FindTimePeriodInput): TimePeriod
  orderStatuses(where: FilterOrderStatusInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatus]
  orderStatusesConnection(where: FilterOrderStatusInput, first: Int, after: String, orderBy: [String]): OrderStatusConnection
  orderStatus(where: FindOrderStatusInput): OrderStatus
  orders(where: FilterOrderInput, limit: Int, offset: Int, orderBy: [String]): [Order]
  ordersConnection(where: FilterOrderInput, first: Int, after: String, orderBy: [String]): OrderConnection
  order(where: FindOrderInput): Order
  orderItems(where: FilterOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderItem]
  orderItemsConnection(where: FilterOrderItemInput, first: Int, after: String, orderBy: [String]): OrderItemConnection
  orderItem(where: FindOrderItemInput): OrderItem
  operationsRequests(where: FilterOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequest]
  operationsRequestsConnection(where: FilterOperationsRequestInput, first: Int, after: String, orderBy: [String]): OperationsRequestConnection
  operationsRequest(where: FindOperationsRequestInput): OperationsRequest
  operationsRequestPersonnels(where: FilterOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestPersonnel]
  operationsRequestPersonnelsConnection(where: FilterOperationsRequestPersonnelInput, first: Int, after: String, orderBy: [String]): OperationsRequestPersonnelConnection
  operationsRequestPersonnel(where: FindOperationsRequestPersonnelInput): OperationsRequestPersonnel
  operationsRequestEquipments(where: FilterOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestEquipment]
  operationsRequestEquipmentsConnection(where: FilterOperationsRequestEquipmentInput, first: Int, after: String, orderBy: [String]): OperationsRequestEquipmentConnection
  operationsRequestEquipment(where: FindOperationsRequestEquipmentInput): OperationsRequestEquipment
  operationsRequestProfiles(where: FilterOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestProfile]
  operationsRequestProfilesConnection(where: FilterOperationsRequestProfileInput, first: Int, after: String, orderBy: [String]): OperationsRequestProfileConnection
  operationsRequestProfile(where: FindOperationsRequestProfileInput): OperationsRequestProfile
  segmentRequirements(where: FilterSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirement]
  segmentRequirementsConnection(where: FilterSegmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementConnection
  segmentRequirement(where: FindSegmentRequirementInput): SegmentRequirement
  segmentRequirementDescendants(where: FilterSegmentRequirementDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementDescendant]
  segmentRequirementDescendantsConnection(where: FilterSegmentRequirementDescendantInput, first: Int, after: String, orderBy: [String]): SegmentRequirementDescendantConnection
  segmentRequirementDescendant(where: FindSegmentRequirementDescendantInput): SegmentRequirementDescendant
  segmentRequirementProperties(where: FilterSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementProperty]
  segmentRequirementPropertiesConnection(where: FilterSegmentRequirementPropertyInput, first: Int, after: String, orderBy: [String]): SegmentRequirementPropertyConnection
  segmentRequirementProperty(where: FindSegmentRequirementPropertyInput): SegmentRequirementProperty
  materialLots(where: FilterMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLot]
  materialLotsConnection(where: FilterMaterialLotInput, first: Int, after: String, orderBy: [String]): MaterialLotConnection
  materialLot(where: FindMaterialLotInput): MaterialLot
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirement]
  segmentRequirementMaterialRequirementsConnection(where: FilterSegmentRequirementMaterialRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementMaterialRequirementConnection
  segmentRequirementMaterialRequirement(where: FindSegmentRequirementMaterialRequirementInput): SegmentRequirementMaterialRequirement
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementPersonnelRequirement]
  segmentRequirementPersonnelRequirementsConnection(where: FilterSegmentRequirementPersonnelRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementPersonnelRequirementConnection
  segmentRequirementPersonnelRequirement(where: FindSegmentRequirementPersonnelRequirementInput): SegmentRequirementPersonnelRequirement
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementEquipmentRequirement]
  segmentRequirementEquipmentRequirementsConnection(where: FilterSegmentRequirementEquipmentRequirementInput, first: Int, after: String, orderBy: [String]): SegmentRequirementEquipmentRequirementConnection
  segmentRequirementEquipmentRequirement(where: FindSegmentRequirementEquipmentRequirementInput): SegmentRequirementEquipmentRequirement
  openPurchaseOrders(where: FilterOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [OpenPurchaseOrder]
  openPurchaseOrdersConnection(where: FilterOpenPurchaseOrderInput, first: Int, after: String, orderBy: [String]): OpenPurchaseOrderConnection
  openPurchaseOrder(where: FindOpenPurchaseOrderInput): OpenPurchaseOrder
  materialProperties(where: FilterMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialProperty]
  materialPropertiesConnection(where: FilterMaterialPropertyInput, first: Int, after: String, orderBy: [String]): MaterialPropertyConnection
  materialProperty(where: FindMaterialPropertyInput): MaterialProperty
  configurableApplicationParameters(where: FilterConfigurableApplicationParameterInput, limit: Int, offset: Int, orderBy: [String]): [ConfigurableApplicationParameter]
  configurableApplicationParametersConnection(where: FilterConfigurableApplicationParameterInput, first: Int, after: String, orderBy: [String]): ConfigurableApplicationParameterConnection
  configurableApplicationParameter(where: FindConfigurableApplicationParameterInput): ConfigurableApplicationParameter
  colourSchemes(where: FilterColourSchemeInput, limit: Int, offset: Int, orderBy: [String]): [ColourScheme]
  colourSchemesConnection(where: FilterColourSchemeInput, first: Int, after: String, orderBy: [String]): ColourSchemeConnection
  colourScheme(where: FindColourSchemeInput): ColourScheme
  colourSchemeItems(where: FilterColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeItem]
  colourSchemeItemsConnection(where: FilterColourSchemeItemInput, first: Int, after: String, orderBy: [String]): ColourSchemeItemConnection
  colourSchemeItem(where: FindColourSchemeItemInput): ColourSchemeItem
  downtimePeriods(where: FilterDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriod]
  downtimePeriodsConnection(where: FilterDowntimePeriodInput, first: Int, after: String, orderBy: [String]): DowntimePeriodConnection
  downtimePeriod(where: FindDowntimePeriodInput): DowntimePeriod
  equipmentDowntimePeriods(where: FilterEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentDowntimePeriod]
  equipmentDowntimePeriodsConnection(where: FilterEquipmentDowntimePeriodInput, first: Int, after: String, orderBy: [String]): EquipmentDowntimePeriodConnection
  equipmentDowntimePeriod(where: FindEquipmentDowntimePeriodInput): EquipmentDowntimePeriod
  personDowntimePeriods(where: FilterPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonDowntimePeriod]
  personDowntimePeriodsConnection(where: FilterPersonDowntimePeriodInput, first: Int, after: String, orderBy: [String]): PersonDowntimePeriodConnection
  personDowntimePeriod(where: FindPersonDowntimePeriodInput): PersonDowntimePeriod
  optimisationHierarchies(where: FilterOptimisationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchy]
  optimisationHierarchiesConnection(where: FilterOptimisationHierarchyInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyConnection
  optimisationHierarchy(where: FindOptimisationHierarchyInput): OptimisationHierarchy
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyAttribute]
  optimisationHierarchyAttributesConnection(where: FilterOptimisationHierarchyAttributeInput, first: Int, after: String, orderBy: [String]): OptimisationHierarchyAttributeConnection
  optimisationHierarchyAttribute(where: FindOptimisationHierarchyAttributeInput): OptimisationHierarchyAttribute
  scenarioAttributes(where: FilterScenarioAttributeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioAttribute]
  scenarioAttributesConnection(where: FilterScenarioAttributeInput, first: Int, after: String, orderBy: [String]): ScenarioAttributeConnection
  scenarioAttribute(where: FindScenarioAttributeInput): ScenarioAttribute
  optimisationPreferredSequences(where: FilterOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequence]
  optimisationPreferredSequencesConnection(where: FilterOptimisationPreferredSequenceInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceConnection
  optimisationPreferredSequence(where: FindOptimisationPreferredSequenceInput): OptimisationPreferredSequence
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceItem]
  optimisationPreferredSequenceItemsConnection(where: FilterOptimisationPreferredSequenceItemInput, first: Int, after: String, orderBy: [String]): OptimisationPreferredSequenceItemConnection
  optimisationPreferredSequenceItem(where: FindOptimisationPreferredSequenceItemInput): OptimisationPreferredSequenceItem
  orderProperties(where: FilterOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderProperty]
  orderPropertiesConnection(where: FilterOrderPropertyInput, first: Int, after: String, orderBy: [String]): OrderPropertyConnection
  orderProperty(where: FindOrderPropertyInput): OrderProperty
}

type Scenario {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes(where: FilterScenarioHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioHierarchyScope]
  optimisationProperties(where: FilterScenarioOptimisationPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationProperty]
  optimisationPropertyValues(where: FilterScenarioOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationPropertyValue]
  changeoverSets(where: FilterScenarioChangeoverSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioChangeoverSet]
  changeoverSetItems(where: FilterScenarioChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioChangeoverSetItem]
  availabilityTemplates(where: FilterScenarioAvailabilityTemplateInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioAvailabilityTemplate]
  availabilityTemplateItems(where: FilterScenarioAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioAvailabilityTemplateItem]
  calendarisedAvailabilityTemplateSets(where: FilterScenarioCalendarisedAvailabilityTemplateSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedAvailabilityTemplateSet]
  calendarisedAvailabilityTemplateSetItems(where: FilterScenarioCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedAvailabilityTemplateSetItem]
  optimizationHierarchies(where: FilterScenarioOptimizationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimizationHierarchy]
  equipments(where: FilterScenarioEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipment]
  hierarchyScopeDescendants(where: FilterScenarioHierarchyScopeDescendantInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioHierarchyScopeDescendant]
  equipmentChildren(where: FilterScenarioEquipmentChildInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentChild]
  equipmentDescendants(where: FilterScenarioEquipmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentDescendant]
  equipmentProperties(where: FilterScenarioEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentProperty]
  equipmentClasses(where: FilterScenarioEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentClass]
  equipmentClassEquipmentMembers(where: FilterScenarioEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentClassEquipmentMember]
  materialDefinitions(where: FilterScenarioMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioMaterialDefinition]
  personnelClasses(where: FilterScenarioPersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelClass]
  personnelClassProperties(where: FilterScenarioPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelClassProperty]
  personnelPositions(where: FilterScenarioPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelPosition]
  persons(where: FilterScenarioPersonInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPerson]
  personProperties(where: FilterScenarioPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonProperty]
  personnelClassPersonMembers(where: FilterScenarioPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelClassPersonMember]
  personnelPositionPersonMembers(where: FilterScenarioPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelPositionPersonMember]
  personnelPositionProperties(where: FilterScenarioPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelPositionProperty]
  operationsDefinitionClasses(where: FilterScenarioOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsDefinitionClass]
  operationsDefinitions(where: FilterScenarioOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsDefinition]
  operationsSegments(where: FilterScenarioOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegment]
  equipmentCapabilities(where: FilterScenarioEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentCapability]
  personnelCapabilities(where: FilterScenarioPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonnelCapability]
  operationsSegmentDescendants(where: FilterScenarioOperationsSegmentDescendantInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentDescendant]
  operationsSegmentProperties(where: FilterScenarioOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentProperty]
  operationsSegmentDependencies(where: FilterScenarioOperationsSegmentDependencyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentDependency]
  operationalLocations(where: FilterScenarioOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationalLocation]
  calendarisedThroughputSets(where: FilterScenarioCalendarisedThroughputSetInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedThroughputSet]
  calendarisedThroughputSetItems(where: FilterScenarioCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioCalendarisedThroughputSetItem]
  operationsSegmentMaterialSpecifications(where: FilterScenarioOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterScenarioOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterScenarioOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsSegmentEquipmentSpecification]
  timePeriods(where: FilterScenarioTimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioTimePeriod]
  orderStatuses(where: FilterScenarioOrderStatusInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrderStatus]
  orders(where: FilterScenarioOrderInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrder]
  orderItems(where: FilterScenarioOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrderItem]
  operationsRequests(where: FilterScenarioOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsRequest]
  operationsRequestPersonnels(where: FilterScenarioOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsRequestPersonnel]
  operationsRequestEquipments(where: FilterScenarioOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsRequestEquipment]
  operationsRequestProfiles(where: FilterScenarioOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOperationsRequestProfile]
  segmentRequirements(where: FilterScenarioSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirement]
  segmentRequirementDescendants(where: FilterScenarioSegmentRequirementDescendantInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirementDescendant]
  segmentRequirementProperties(where: FilterScenarioSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirementProperty]
  materialLots(where: FilterScenarioMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterScenarioSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterScenarioSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterScenarioSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioSegmentRequirementEquipmentRequirement]
  openPurchaseOrders(where: FilterScenarioOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOpenPurchaseOrder]
  materialProperties(where: FilterScenarioMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioMaterialProperty]
  configurableApplicationParameters(where: FilterScenarioConfigurableApplicationParameterInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioConfigurableApplicationParameter]
  colourSchemes(where: FilterScenarioColourSchemeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioColourScheme]
  colourSchemeItems(where: FilterScenarioColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioColourSchemeItem]
  downtimePeriods(where: FilterScenarioDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioDowntimePeriod]
  equipmentDowntimePeriods(where: FilterScenarioEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioEquipmentDowntimePeriod]
  personDowntimePeriods(where: FilterScenarioPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioPersonDowntimePeriod]
  optimisationHierarchies(where: FilterScenarioOptimisationHierarchyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationHierarchy]
  optimisationHierarchyAttributes(where: FilterScenarioOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationHierarchyAttribute]
  scenarioAttribute(where: FilterScenarioScenarioAttributeInput, limit: Int, offset: Int, orderBy: [String]): ScenarioScenarioAttribute
  optimisationPreferredSequences(where: FilterScenarioOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationPreferredSequence]
  optimisationPreferredSequenceItems(where: FilterScenarioOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOptimisationPreferredSequenceItem]
  orderProperties(where: FilterScenarioOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [ScenarioOrderProperty]
}

type ScenarioAttribute {
  id: Int
  scenario: Scenario
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

type ScenarioAttributeConnection {
  pageInfo: PageInfo
  edges: [ScenarioAttributeEdge]
}

type ScenarioAttributeEdge {
  node: ScenarioAttribute
  cursor: String
}

type ScenarioAvailabilityTemplate {
  id: Int
  name: String
  description: String
  availabilityTemplateItems(where: FilterAvailabilityTemplateAvailabilityTemplateItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateAvailabilityTemplateItem]
  calendarisedAvailabilityTemplateSetItems(where: FilterAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [AvailabilityTemplateCalendarisedAvailabilityTemplateSetItem]
}

type ScenarioAvailabilityTemplateItem {
  id: Int
  availabilityTemplate: AvailabilityTemplate
  dayOfTheWeek: Int
  startTime: String
  endTime: String
}

type ScenarioCalendarisedAvailabilityTemplateSet {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems(where: FilterCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItem]
  equipments(where: FilterCalendarisedAvailabilityTemplateSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetEquipment]
  persons(where: FilterCalendarisedAvailabilityTemplateSetPersonInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedAvailabilityTemplateSetPerson]
}

type ScenarioCalendarisedAvailabilityTemplateSetItem {
  id: Int
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  startTime: String
  endTime: String
  availabilityTemplate: AvailabilityTemplate
}

type ScenarioCalendarisedThroughputSet {
  id: Int
  name: String
  calendarisedThroughputSetItems(where: FilterCalendarisedThroughputSetCalendarisedThroughputSetItemInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetCalendarisedThroughputSetItem]
  operationsSegmentMaterialSpecifications(where: FilterCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [CalendarisedThroughputSetOperationsSegmentMaterialSpecification]
}

type ScenarioCalendarisedThroughputSetItem {
  id: Int
  calendarisedThroughputSet: CalendarisedThroughputSet
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
}

type ScenarioChangeoverSet {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems(where: FilterChangeoverSetChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetChangeoverSetItem]
  equipments(where: FilterChangeoverSetEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [ChangeoverSetEquipment]
}

type ScenarioChangeoverSetItem {
  id: Int
  changeoverSet: ChangeoverSet
  fromValue: OptimisationPropertyValue
  toValue: OptimisationPropertyValue
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: OperationsSegment
}

type ScenarioColourScheme {
  id: Int
  name: String
  colourSchemeItems(where: FilterColourSchemeColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [ColourSchemeColourSchemeItem]
}

type ScenarioColourSchemeItem {
  id: Int
  colourScheme: ColourScheme
  propertyValue: OptimisationPropertyValue
  red: Int
  green: Int
  blue: Int
}

type ScenarioConfigurableApplicationParameter {
  id: Int
  name: String
  dataType: String
  valueAsString: String
}

type ScenarioConnection {
  pageInfo: PageInfo
  edges: [ScenarioEdge]
}

type ScenarioDowntimePeriod {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipmentDowntimePeriods(where: FilterDowntimePeriodEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriodEquipmentDowntimePeriod]
  personDowntimePeriods(where: FilterDowntimePeriodPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [DowntimePeriodPersonDowntimePeriod]
}

type ScenarioEdge {
  node: Scenario
  cursor: String
}

type ScenarioEquipment {
  id: Int
  externalId: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  description: String
  changeoverSet: ChangeoverSet
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  optimisationHierarchy: OptimisationHierarchy
  optimisationPreferredSequence: OptimisationPreferredSequence
  hierarchyScopes(where: FilterEquipmentHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentHierarchyScope]
  equipmentChildrenParent(where: FilterEquipmentEquipmentChildParentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildParent]
  equipmentChildrenChild(where: FilterEquipmentEquipmentChildChildInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentChildChild]
  equipmentDescendantsAscendant(where: FilterEquipmentEquipmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantAscendant]
  equipmentDescendantsDescendant(where: FilterEquipmentEquipmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDescendantDescendant]
  equipmentProperties(where: FilterEquipmentEquipmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentProperty]
  equipmentClassEquipmentMembers(where: FilterEquipmentEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentClassEquipmentMember]
  equipmentCapabilities(where: FilterEquipmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentCapability]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsSegmentEquipmentSpecification]
  operationsRequestEquipments(where: FilterEquipmentOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentOperationsRequestEquipment]
  segmentRequirementEquipmentRequirements(where: FilterEquipmentSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentSegmentRequirementEquipmentRequirement]
  equipmentDowntimePeriods(where: FilterEquipmentEquipmentDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentEquipmentDowntimePeriod]
}

type ScenarioEquipmentCapability {
  id: Int
  equipment: Equipment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type ScenarioEquipmentChild {
  id: Int
  parent: Equipment
  child: Equipment
}

type ScenarioEquipmentClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  equipmentLevel: String
  equipmentClassEquipmentMembers(where: FilterEquipmentClassEquipmentClassEquipmentMemberInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassEquipmentClassEquipmentMember]
  operationsSegmentEquipmentSpecifications(where: FilterEquipmentClassOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [EquipmentClassOperationsSegmentEquipmentSpecification]
}

type ScenarioEquipmentClassEquipmentMember {
  id: Int
  equipmentClass: EquipmentClass
  equipment: Equipment
}

type ScenarioEquipmentDescendant {
  id: Int
  ascendant: Equipment
  descendant: Equipment
}

type ScenarioEquipmentDowntimePeriod {
  id: Int
  equipment: Equipment
  downtimePeriod: DowntimePeriod
}

type ScenarioEquipmentProperty {
  id: Int
  equipment: Equipment
  externalId: String
  value: String
  dataType: String
}

type ScenarioHierarchyScope {
  id: Int
  externalId: String
  equipment: Equipment
  parent: HierarchyScope
  hierarchyScopes(where: FilterHierarchyScopeHierarchyScopeInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScope]
  equipments(where: FilterHierarchyScopeEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipment]
  hierarchyScopeDescendantsAscendant(where: FilterHierarchyScopeHierarchyScopeDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantAscendant]
  hierarchyScopeDescendantsDescendant(where: FilterHierarchyScopeHierarchyScopeDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeHierarchyScopeDescendantDescendant]
  equipmentClasses(where: FilterHierarchyScopeEquipmentClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentClass]
  materialDefinitions(where: FilterHierarchyScopeMaterialDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialDefinition]
  personnelClasses(where: FilterHierarchyScopePersonnelClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelClass]
  personnelPositions(where: FilterHierarchyScopePersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelPosition]
  persons(where: FilterHierarchyScopePersonInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePerson]
  operationsDefinitionClasses(where: FilterHierarchyScopeOperationsDefinitionClassInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinitionClass]
  operationsDefinitions(where: FilterHierarchyScopeOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsDefinition]
  operationsSegments(where: FilterHierarchyScopeOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegment]
  equipmentCapabilities(where: FilterHierarchyScopeEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeEquipmentCapability]
  personnelCapabilities(where: FilterHierarchyScopePersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopePersonnelCapability]
  operationalLocations(where: FilterHierarchyScopeOperationalLocationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationalLocation]
  operationsSegmentMaterialSpecifications(where: FilterHierarchyScopeOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterHierarchyScopeOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterHierarchyScopeOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterHierarchyScopeOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOperationsRequest]
  segmentRequirements(where: FilterHierarchyScopeSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirement]
  materialLots(where: FilterHierarchyScopeMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterHierarchyScopeSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterHierarchyScopeSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterHierarchyScopeSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeSegmentRequirementEquipmentRequirement]
  openPurchaseOrders(where: FilterHierarchyScopeOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [HierarchyScopeOpenPurchaseOrder]
}

type ScenarioHierarchyScopeDescendant {
  id: Int
  ascendant: HierarchyScope
  descendant: HierarchyScope
}

type ScenarioMaterialDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsSegmentMaterialSpecifications(where: FilterMaterialDefinitionOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOperationsSegmentMaterialSpecification]
  materialLots(where: FilterMaterialDefinitionMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterMaterialDefinitionSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionSegmentRequirementMaterialRequirement]
  openPurchaseOrders(where: FilterMaterialDefinitionOpenPurchaseOrderInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionOpenPurchaseOrder]
  materialProperties(where: FilterMaterialDefinitionMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [MaterialDefinitionMaterialProperty]
}

type ScenarioMaterialLot {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  materialDefinition: MaterialDefinition
  operationalLocation: OperationalLocation
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements(where: FilterMaterialLotSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [MaterialLotSegmentRequirementMaterialRequirement]
}

type ScenarioMaterialProperty {
  id: Int
  materialDefinition: MaterialDefinition
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: OptimisationPropertyValue
}

type ScenarioOpenPurchaseOrder {
  id: Int
  externalId: String
  materialDefinition: MaterialDefinition
  hierarchyScope: HierarchyScope
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

type ScenarioOperationalLocation {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications(where: FilterOperationalLocationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationalLocationOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationalLocationOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationOperationsSegmentEquipmentSpecification]
  materialLots(where: FilterOperationalLocationMaterialLotInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationMaterialLot]
  segmentRequirementMaterialRequirements(where: FilterOperationalLocationSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterOperationalLocationSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterOperationalLocationSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationalLocationSegmentRequirementEquipmentRequirement]
}

type ScenarioOperationsDefinition {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: OperationsDefinitionClass
  operationsSegments(where: FilterOperationsDefinitionOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionOperationsSegment]
}

type ScenarioOperationsDefinitionClass {
  id: Int
  externalId: String
  description: String
  hierarchyScope: HierarchyScope
  operationsType: String
  operationsDefinitions(where: FilterOperationsDefinitionClassOperationsDefinitionInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOperationsDefinition]
  orderItems(where: FilterOperationsDefinitionClassOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsDefinitionClassOrderItem]
}

type ScenarioOperationsRequest {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels(where: FilterOperationsRequestOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestPersonnel]
  operationsRequestEquipments(where: FilterOperationsRequestOperationsRequestEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestEquipment]
  operationsRequestProfiles(where: FilterOperationsRequestOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestOperationsRequestProfile]
  segmentRequirements(where: FilterOperationsRequestSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsRequestSegmentRequirement]
}

type ScenarioOperationsRequestEquipment {
  id: Int
  operationsRequest: OperationsRequest
  equipment: Equipment
}

type ScenarioOperationsRequestPersonnel {
  id: Int
  operationsRequest: OperationsRequest
  person: Person
}

type ScenarioOperationsRequestProfile {
  id: Int
  operationsRequest: OperationsRequest
  orderItem: OrderItem
  startupCost: Float
  quantity: Float
}

type ScenarioOperationsSegment {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: OperationsSegment
  operationsDefinition: OperationsDefinition
  changeoverSetItems(where: FilterOperationsSegmentChangeoverSetItemInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentChangeoverSetItem]
  operationsSegments(where: FilterOperationsSegmentOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegment]
  equipmentCapabilities(where: FilterOperationsSegmentEquipmentCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentEquipmentCapability]
  personnelCapabilities(where: FilterOperationsSegmentPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentPersonnelCapability]
  operationsSegmentDescendantsAscendant(where: FilterOperationsSegmentOperationsSegmentDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantAscendant]
  operationsSegmentDescendantsDescendant(where: FilterOperationsSegmentOperationsSegmentDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDescendantDescendant]
  operationsSegmentProperties(where: FilterOperationsSegmentOperationsSegmentPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentProperty]
  operationsSegmentDependenciesFromOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyFromOperationsSegment]
  operationsSegmentDependenciesToOperationsSegment(where: FilterOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentDependencyToOperationsSegment]
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentMaterialSpecification]
  operationsSegmentPersonnelSpecifications(where: FilterOperationsSegmentOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentPersonnelSpecification]
  operationsSegmentEquipmentSpecifications(where: FilterOperationsSegmentOperationsSegmentEquipmentSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsSegmentEquipmentSpecification]
  operationsRequests(where: FilterOperationsSegmentOperationsRequestInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentOperationsRequest]
  segmentRequirements(where: FilterOperationsSegmentSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentSegmentRequirement]
}

type ScenarioOperationsSegmentDependency {
  id: Int
  fromOperationsSegment: OperationsSegment
  toOperationsSegment: OperationsSegment
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

type ScenarioOperationsSegmentDescendant {
  id: Int
  ascendant: OperationsSegment
  descendant: OperationsSegment
}

type ScenarioOperationsSegmentEquipmentSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  equipmentClass: EquipmentClass
  equipment: Equipment
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
}

type ScenarioOperationsSegmentMaterialSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
  parent: OperationsSegmentMaterialSpecification
  calendarisedThroughputSet: CalendarisedThroughputSet
  operationsSegmentMaterialSpecifications(where: FilterOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [OperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecification]
}

type ScenarioOperationsSegmentPersonnelSpecification {
  id: Int
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: OperationalLocation
}

type ScenarioOperationsSegmentProperty {
  id: Int
  operationsSegment: OperationsSegment
  externalId: String
  value: String
  dataType: String
}

type ScenarioOptimisationHierarchy {
  id: Int
  externalId: String
  description: String
  equipments(where: FilterOptimisationHierarchyEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyEquipment]
  optimisationHierarchyAttributes(where: FilterOptimisationHierarchyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationHierarchyOptimisationHierarchyAttribute]
}

type ScenarioOptimisationHierarchyAttribute {
  id: Int
  optimisationHierarchy: OptimisationHierarchy
  optimisationProperty: OptimisationProperty
  description: String
  priority: Int
}

type ScenarioOptimisationPreferredSequence {
  id: Int
  externalId: String
  description: String
  optimisationProperty: OptimisationProperty
  equipments(where: FilterOptimisationPreferredSequenceEquipmentInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceEquipment]
  optimisationPreferredSequenceItems(where: FilterOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPreferredSequenceOptimisationPreferredSequenceItem]
}

type ScenarioOptimisationPreferredSequenceItem {
  id: Int
  optimisationPreferredSequence: OptimisationPreferredSequence
  optimisationPropertyValue: OptimisationPropertyValue
  priority: Int
}

type ScenarioOptimisationProperty {
  id: Int
  name: String
  optimisationPropertyValues(where: FilterOptimisationPropertyOptimisationPropertyValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPropertyValue]
  optimisationHierarchyAttributes(where: FilterOptimisationPropertyOptimisationHierarchyAttributeInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationHierarchyAttribute]
  optimisationPreferredSequences(where: FilterOptimisationPropertyOptimisationPreferredSequenceInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyOptimisationPreferredSequence]
}

type ScenarioOptimisationPropertyValue {
  id: Int
  optimisationProperty: OptimisationProperty
  value: String
  dataType: String
  changeoverSetItemsFromValue(where: FilterOptimisationPropertyValueChangeoverSetItemFromValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemFromValue]
  changeoverSetItemsToValue(where: FilterOptimisationPropertyValueChangeoverSetItemToValueInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueChangeoverSetItemToValue]
  materialProperties(where: FilterOptimisationPropertyValueMaterialPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueMaterialProperty]
  colourSchemeItems(where: FilterOptimisationPropertyValueColourSchemeItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueColourSchemeItem]
  optimisationPreferredSequenceItems(where: FilterOptimisationPropertyValueOptimisationPreferredSequenceItemInput, limit: Int, offset: Int, orderBy: [String]): [OptimisationPropertyValueOptimisationPreferredSequenceItem]
}

type ScenarioOptimizationHierarchy {
  id: Int
  externalId: String
  description: String
}

type ScenarioOrder {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: OrderStatus
  priority: Int
  orderItems(where: FilterOrderOrderItemInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderItem]
  orderProperties(where: FilterOrderOrderPropertyInput, limit: Int, offset: Int, orderBy: [String]): [OrderOrderProperty]
}

type ScenarioOrderItem {
  id: Int
  order: Order
  operationsDefinitionClass: OperationsDefinitionClass
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles(where: FilterOrderItemOperationsRequestProfileInput, limit: Int, offset: Int, orderBy: [String]): [OrderItemOperationsRequestProfile]
}

type ScenarioOrderProperty {
  id: Int
  order: Order
  externalId: String
  value: String
  dataType: String
}

type ScenarioOrderStatus {
  id: Int
  status: String
  orders(where: FilterOrderStatusOrderInput, limit: Int, offset: Int, orderBy: [String]): [OrderStatusOrder]
}

type ScenarioPerson {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: CalendarisedAvailabilityTemplateSet
  personProperties(where: FilterPersonPersonPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonProperty]
  personnelClassPersonMembers(where: FilterPersonPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelClassPersonMember]
  personnelPositionPersonMembers(where: FilterPersonPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonnelPositionPersonMember]
  operationsSegmentPersonnelSpecifications(where: FilterPersonOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsSegmentPersonnelSpecification]
  operationsRequestPersonnels(where: FilterPersonOperationsRequestPersonnelInput, limit: Int, offset: Int, orderBy: [String]): [PersonOperationsRequestPersonnel]
  segmentRequirementPersonnelRequirements(where: FilterPersonSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonSegmentRequirementPersonnelRequirement]
  personDowntimePeriods(where: FilterPersonPersonDowntimePeriodInput, limit: Int, offset: Int, orderBy: [String]): [PersonPersonDowntimePeriod]
}

type ScenarioPersonDowntimePeriod {
  id: Int
  person: Person
  downtimePeriod: DowntimePeriod
}

type ScenarioPersonnelCapability {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: OperationsSegment
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

type ScenarioPersonnelClass {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  personnelClassProperties(where: FilterPersonnelClassPersonnelClassPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassProperty]
  personnelPositions(where: FilterPersonnelClassPersonnelPositionInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelPosition]
  personnelClassPersonMembers(where: FilterPersonnelClassPersonnelClassPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelClassPersonMember]
  personnelCapabilities(where: FilterPersonnelClassPersonnelCapabilityInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassPersonnelCapability]
  operationsSegmentPersonnelSpecifications(where: FilterPersonnelClassOperationsSegmentPersonnelSpecificationInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassOperationsSegmentPersonnelSpecification]
  segmentRequirementPersonnelRequirements(where: FilterPersonnelClassSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelClassSegmentRequirementPersonnelRequirement]
}

type ScenarioPersonnelClassPersonMember {
  id: Int
  personnelClass: PersonnelClass
  person: Person
}

type ScenarioPersonnelClassProperty {
  id: Int
  personnelClass: PersonnelClass
  externalId: String
  value: String
  dataType: String
}

type ScenarioPersonnelPosition {
  id: Int
  personnelClass: PersonnelClass
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  personnelPositionPersonMembers(where: FilterPersonnelPositionPersonnelPositionPersonMemberInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionPersonMember]
  personnelPositionProperties(where: FilterPersonnelPositionPersonnelPositionPropertyInput, limit: Int, offset: Int, orderBy: [String]): [PersonnelPositionPersonnelPositionProperty]
}

type ScenarioPersonnelPositionPersonMember {
  id: Int
  personnelPosition: PersonnelPosition
  person: Person
}

type ScenarioPersonnelPositionProperty {
  id: Int
  personnelPosition: PersonnelPosition
  externalId: String
  value: String
  dataType: String
}

type ScenarioPersonProperty {
  id: Int
  person: Person
  externalId: String
  value: String
  dataType: String
}

type ScenarioScenarioAttribute {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

type ScenarioSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type ScenarioSegmentRequirementDescendant {
  id: Int
  ascendant: SegmentRequirement
  descendant: SegmentRequirement
}

type ScenarioSegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
}

type ScenarioSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type ScenarioSegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
}

type ScenarioSegmentRequirementProperty {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  value: String
  dataType: String
}

type ScenarioTimePeriod {
  id: Int
  startTime: String
  endTime: String
}

type SegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  parentSegmentRequirement: SegmentRequirement
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: Scenario
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type SegmentRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementEdge]
}

type SegmentRequirementDescendant {
  id: Int
  ascendant: SegmentRequirement
  descendant: SegmentRequirement
  scenario: Scenario
}

type SegmentRequirementDescendantConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementDescendantEdge]
}

type SegmentRequirementDescendantEdge {
  node: SegmentRequirementDescendant
  cursor: String
}

type SegmentRequirementEdge {
  node: SegmentRequirement
  cursor: String
}

type SegmentRequirementEquipmentRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type SegmentRequirementEquipmentRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementEquipmentRequirementEdge]
}

type SegmentRequirementEquipmentRequirementEdge {
  node: SegmentRequirementEquipmentRequirement
  cursor: String
}

type SegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type SegmentRequirementMaterialRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementMaterialRequirementEdge]
}

type SegmentRequirementMaterialRequirementEdge {
  node: SegmentRequirementMaterialRequirement
  cursor: String
}

type SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type SegmentRequirementPersonnelRequirement {
  id: Int
  segmentRequirement: SegmentRequirement
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
  scenario: Scenario
}

type SegmentRequirementPersonnelRequirementConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementPersonnelRequirementEdge]
}

type SegmentRequirementPersonnelRequirementEdge {
  node: SegmentRequirementPersonnelRequirement
  cursor: String
}

type SegmentRequirementProperty {
  id: Int
  segmentRequirement: SegmentRequirement
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type SegmentRequirementPropertyConnection {
  pageInfo: PageInfo
  edges: [SegmentRequirementPropertyEdge]
}

type SegmentRequirementPropertyEdge {
  node: SegmentRequirementProperty
  cursor: String
}

type SegmentRequirementSegmentRequirement {
  id: Int
  operationsRequest: OperationsRequest
  operationsSegment: OperationsSegment
  hierarchyScope: HierarchyScope
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: Scenario
  segmentRequirements(where: FilterSegmentRequirementSegmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirement]
  segmentRequirementDescendantsAscendant(where: FilterSegmentRequirementSegmentRequirementDescendantAscendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantAscendant]
  segmentRequirementDescendantsDescendant(where: FilterSegmentRequirementSegmentRequirementDescendantDescendantInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementDescendantDescendant]
  segmentRequirementProperties(where: FilterSegmentRequirementSegmentRequirementPropertyInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementProperty]
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementMaterialRequirement]
  segmentRequirementPersonnelRequirements(where: FilterSegmentRequirementSegmentRequirementPersonnelRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementPersonnelRequirement]
  segmentRequirementEquipmentRequirements(where: FilterSegmentRequirementSegmentRequirementEquipmentRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementSegmentRequirementEquipmentRequirement]
}

type SegmentRequirementSegmentRequirementDescendantAscendant {
  id: Int
  descendant: SegmentRequirement
  scenario: Scenario
}

type SegmentRequirementSegmentRequirementDescendantDescendant {
  id: Int
  ascendant: SegmentRequirement
  scenario: Scenario
}

type SegmentRequirementSegmentRequirementEquipmentRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  equipment: Equipment
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  scenario: Scenario
}

type SegmentRequirementSegmentRequirementMaterialRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  materialDefinition: MaterialDefinition
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  materialLot: MaterialLot
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: SegmentRequirementMaterialRequirement
  scenario: Scenario
  segmentRequirementMaterialRequirements(where: FilterSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput, limit: Int, offset: Int, orderBy: [String]): [SegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirement]
}

type SegmentRequirementSegmentRequirementPersonnelRequirement {
  id: Int
  hierarchyScope: HierarchyScope
  externalId: String
  person: Person
  personnelClass: PersonnelClass
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: OperationalLocation
  personnelUse: String
  scenario: Scenario
}

type SegmentRequirementSegmentRequirementProperty {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: Scenario
}

type TimePeriod {
  id: Int
  startTime: String
  endTime: String
  scenario: Scenario
}

type TimePeriodConnection {
  pageInfo: PageInfo
  edges: [TimePeriodEdge]
}

type TimePeriodEdge {
  node: TimePeriod
  cursor: String
}

input UpdateAvailabilityTemplateAvailabilityTemplateItemInput {
  data: UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields
  where: ConnectAvailabilityTemplateAvailabilityTemplateItemInput
}

input UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields {
  id: Int
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: UpsertScenarioParentInput
}

input UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  data: UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields
  where: FindCalendarisedAvailabilityTemplateSetItemInput
}

input UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields {
  id: Int
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  scenario: UpsertScenarioParentInput
}

input UpdateAvailabilityTemplateInput {
  id: Int
  name: String
  description: String
  scenario: UpsertScenarioParentInput
  availabilityTemplateItems: UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input UpdateAvailabilityTemplateItemInput {
  id: Int
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: String
  endTime: String
  scenario: UpsertScenarioParentInput
}

input UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  data: UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields
  where: ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
}

input UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields {
  id: Int
  startTime: String
  endTime: String
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateCalendarisedAvailabilityTemplateSetEquipmentInput {
  data: UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateCalendarisedAvailabilityTemplateSetInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input UpdateCalendarisedAvailabilityTemplateSetItemInput {
  id: Int
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateCalendarisedAvailabilityTemplateSetPersonInput {
  data: UpdateCalendarisedAvailabilityTemplateSetPersonInputFields
  where: FindPersonInput
}

input UpdateCalendarisedAvailabilityTemplateSetPersonInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: UpdateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: UpdateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: UpdateManyPersonPersonDowntimePeriodsInput
}

input UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  data: UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields
  where: ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput
}

input UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields {
  id: Int
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: UpsertScenarioParentInput
}

input UpdateCalendarisedThroughputSetInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  calendarisedThroughputSetItems: UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput
}

input UpdateCalendarisedThroughputSetItemInput {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
  scenario: UpsertScenarioParentInput
}

input UpdateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput {
  data: UpdateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateChangeoverSetChangeoverSetItemInput {
  data: UpdateChangeoverSetChangeoverSetItemInputFields
  where: ConnectChangeoverSetChangeoverSetItemInput
}

input UpdateChangeoverSetChangeoverSetItemInputFields {
  id: Int
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: UpsertScenarioParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateChangeoverSetEquipmentInput {
  data: UpdateChangeoverSetEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateChangeoverSetEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateChangeoverSetInput {
  id: Int
  name: String
  description: String
  defaultTime: Float
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyChangeoverSetChangeoverSetItemsInput
  equipments: UpdateManyChangeoverSetEquipmentsInput
}

input UpdateChangeoverSetItemInput {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: UpsertScenarioParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateColourSchemeColourSchemeItemInput {
  data: UpdateColourSchemeColourSchemeItemInputFields
  where: ConnectColourSchemeColourSchemeItemInput
}

input UpdateColourSchemeColourSchemeItemInputFields {
  id: Int
  propertyValue: UpsertOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
  scenario: UpsertScenarioParentInput
}

input UpdateColourSchemeInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  colourSchemeItems: UpdateManyColourSchemeColourSchemeItemsInput
}

input UpdateColourSchemeItemInput {
  id: Int
  colourScheme: UpsertColourSchemeParentInput
  propertyValue: UpsertOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
  scenario: UpsertScenarioParentInput
}

input UpdateConfigurableApplicationParameterInput {
  id: Int
  name: String
  dataType: String
  valueAsString: String
  scenario: UpsertScenarioParentInput
}

input UpdateDowntimePeriodEquipmentDowntimePeriodInput {
  data: UpdateDowntimePeriodEquipmentDowntimePeriodInputFields
  where: ConnectDowntimePeriodEquipmentDowntimePeriodInput
}

input UpdateDowntimePeriodEquipmentDowntimePeriodInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateDowntimePeriodInput {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  scenario: UpsertScenarioParentInput
  equipmentDowntimePeriods: UpdateManyDowntimePeriodEquipmentDowntimePeriodsInput
  personDowntimePeriods: UpdateManyDowntimePeriodPersonDowntimePeriodsInput
}

input UpdateDowntimePeriodPersonDowntimePeriodInput {
  data: UpdateDowntimePeriodPersonDowntimePeriodInputFields
  where: ConnectDowntimePeriodPersonDowntimePeriodInput
}

input UpdateDowntimePeriodPersonDowntimePeriodInputFields {
  id: Int
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentCapabilityInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentChildInput {
  id: Int
  parent: UpsertEquipmentParentInput
  child: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentClassEquipmentClassEquipmentMemberInput {
  data: UpdateEquipmentClassEquipmentClassEquipmentMemberInputFields
  where: ConnectEquipmentClassEquipmentClassEquipmentMemberInput
}

input UpdateEquipmentClassEquipmentClassEquipmentMemberInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentClassEquipmentMemberInput {
  id: Int
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  scenario: UpsertScenarioParentInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  data: UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields
  where: ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput
}

input UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentDescendantInput {
  id: Int
  ascendant: UpsertEquipmentParentInput
  descendant: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentDowntimePeriodInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentCapabilityInput {
  data: UpdateEquipmentEquipmentCapabilityInputFields
  where: FindEquipmentCapabilityInput
}

input UpdateEquipmentEquipmentCapabilityInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentChildChildInput {
  data: UpdateEquipmentEquipmentChildChildInputFields
  where: ConnectEquipmentEquipmentChildChildInput
}

input UpdateEquipmentEquipmentChildChildInputFields {
  id: Int
  parent: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentChildParentInput {
  data: UpdateEquipmentEquipmentChildParentInputFields
  where: ConnectEquipmentEquipmentChildParentInput
}

input UpdateEquipmentEquipmentChildParentInputFields {
  id: Int
  child: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentClassEquipmentMemberInput {
  data: UpdateEquipmentEquipmentClassEquipmentMemberInputFields
  where: ConnectEquipmentEquipmentClassEquipmentMemberInput
}

input UpdateEquipmentEquipmentClassEquipmentMemberInputFields {
  id: Int
  equipmentClass: UpsertEquipmentClassParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentDescendantAscendantInput {
  data: UpdateEquipmentEquipmentDescendantAscendantInputFields
  where: ConnectEquipmentEquipmentDescendantAscendantInput
}

input UpdateEquipmentEquipmentDescendantAscendantInputFields {
  id: Int
  descendant: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentDescendantDescendantInput {
  data: UpdateEquipmentEquipmentDescendantDescendantInputFields
  where: ConnectEquipmentEquipmentDescendantDescendantInput
}

input UpdateEquipmentEquipmentDescendantDescendantInputFields {
  id: Int
  ascendant: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentDowntimePeriodInput {
  data: UpdateEquipmentEquipmentDowntimePeriodInputFields
  where: ConnectEquipmentEquipmentDowntimePeriodInput
}

input UpdateEquipmentEquipmentDowntimePeriodInputFields {
  id: Int
  downtimePeriod: UpsertDowntimePeriodParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentEquipmentPropertyInput {
  data: UpdateEquipmentEquipmentPropertyInputFields
  where: ConnectEquipmentEquipmentPropertyInput
}

input UpdateEquipmentEquipmentPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentHierarchyScopeInput {
  data: UpdateEquipmentHierarchyScopeInputFields
  where: FindHierarchyScopeInput
}

input UpdateEquipmentHierarchyScopeInputFields {
  id: Int
  externalId: String
  parent: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: UpdateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: UpdateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateEquipmentInput {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateEquipmentOperationsRequestEquipmentInput {
  data: UpdateEquipmentOperationsRequestEquipmentInputFields
  where: ConnectEquipmentOperationsRequestEquipmentInput
}

input UpdateEquipmentOperationsRequestEquipmentInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentOperationsSegmentEquipmentSpecificationInput {
  data: UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields
  where: ConnectEquipmentOperationsSegmentEquipmentSpecificationInput
}

input UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentPropertyInput {
  id: Int
  equipment: UpsertEquipmentParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateEquipmentSegmentRequirementEquipmentRequirementInput {
  data: UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeDescendantInput {
  id: Int
  ascendant: UpsertHierarchyScopeParentInput
  descendant: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeEquipmentCapabilityInput {
  data: UpdateHierarchyScopeEquipmentCapabilityInputFields
  where: ConnectHierarchyScopeEquipmentCapabilityInput
}

input UpdateHierarchyScopeEquipmentCapabilityInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeEquipmentClassInput {
  data: UpdateHierarchyScopeEquipmentClassInputFields
  where: ConnectHierarchyScopeEquipmentClassInput
}

input UpdateHierarchyScopeEquipmentClassInputFields {
  id: Int
  externalId: String
  description: String
  equipmentLevel: String
  scenario: UpsertScenarioParentInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateHierarchyScopeEquipmentInput {
  data: UpdateHierarchyScopeEquipmentInputFields
  where: ConnectHierarchyScopeEquipmentInput
}

input UpdateHierarchyScopeEquipmentInputFields {
  id: Int
  externalId: String
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateHierarchyScopeHierarchyScopeDescendantAscendantInput {
  data: UpdateHierarchyScopeHierarchyScopeDescendantAscendantInputFields
  where: ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput
}

input UpdateHierarchyScopeHierarchyScopeDescendantAscendantInputFields {
  id: Int
  descendant: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeHierarchyScopeDescendantDescendantInput {
  data: UpdateHierarchyScopeHierarchyScopeDescendantDescendantInputFields
  where: ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput
}

input UpdateHierarchyScopeHierarchyScopeDescendantDescendantInputFields {
  id: Int
  ascendant: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeHierarchyScopeInput {
  data: UpdateHierarchyScopeHierarchyScopeInputFields
  where: ConnectHierarchyScopeHierarchyScopeInput
}

input UpdateHierarchyScopeHierarchyScopeInputFields {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: UpdateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: UpdateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateHierarchyScopeInput {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  parent: UpsertHierarchyScopeParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: UpdateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: UpdateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateHierarchyScopeMaterialDefinitionInput {
  data: UpdateHierarchyScopeMaterialDefinitionInputFields
  where: ConnectHierarchyScopeMaterialDefinitionInput
}

input UpdateHierarchyScopeMaterialDefinitionInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateHierarchyScopeMaterialLotInput {
  data: UpdateHierarchyScopeMaterialLotInputFields
  where: ConnectHierarchyScopeMaterialLotInput
}

input UpdateHierarchyScopeMaterialLotInputFields {
  id: Int
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateHierarchyScopeOpenPurchaseOrderInput {
  data: UpdateHierarchyScopeOpenPurchaseOrderInputFields
  where: ConnectHierarchyScopeOpenPurchaseOrderInput
}

input UpdateHierarchyScopeOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeOperationalLocationInput {
  data: UpdateHierarchyScopeOperationalLocationInputFields
  where: FindOperationalLocationInput
}

input UpdateHierarchyScopeOperationalLocationInputFields {
  id: Int
  externalId: String
  description: String
  availabileForUse: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateHierarchyScopeOperationsDefinitionClassInput {
  data: UpdateHierarchyScopeOperationsDefinitionClassInputFields
  where: ConnectHierarchyScopeOperationsDefinitionClassInput
}

input UpdateHierarchyScopeOperationsDefinitionClassInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  scenario: UpsertScenarioParentInput
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateHierarchyScopeOperationsDefinitionInput {
  data: UpdateHierarchyScopeOperationsDefinitionInputFields
  where: ConnectHierarchyScopeOperationsDefinitionInput
}

input UpdateHierarchyScopeOperationsDefinitionInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: UpsertScenarioParentInput
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateHierarchyScopeOperationsRequestInput {
  data: UpdateHierarchyScopeOperationsRequestInputFields
  where: FindOperationsRequestInput
}

input UpdateHierarchyScopeOperationsRequestInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: UpdateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeOperationsSegmentInput {
  data: UpdateHierarchyScopeOperationsSegmentInputFields
  where: ConnectHierarchyScopeOperationsSegmentInput
}

input UpdateHierarchyScopeOperationsSegmentInputFields {
  id: Int
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  data: UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopePersonInput {
  data: UpdateHierarchyScopePersonInputFields
  where: ConnectHierarchyScopePersonInput
}

input UpdateHierarchyScopePersonInputFields {
  id: Int
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: UpdateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: UpdateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: UpdateManyPersonPersonDowntimePeriodsInput
}

input UpdateHierarchyScopePersonnelCapabilityInput {
  data: UpdateHierarchyScopePersonnelCapabilityInputFields
  where: ConnectHierarchyScopePersonnelCapabilityInput
}

input UpdateHierarchyScopePersonnelCapabilityInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopePersonnelClassInput {
  data: UpdateHierarchyScopePersonnelClassInputFields
  where: ConnectHierarchyScopePersonnelClassInput
}

input UpdateHierarchyScopePersonnelClassInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: UpdateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdateHierarchyScopePersonnelPositionInput {
  data: UpdateHierarchyScopePersonnelPositionInputFields
  where: ConnectHierarchyScopePersonnelPositionInput
}

input UpdateHierarchyScopePersonnelPositionInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelPositionPersonMembers: UpdateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields
  where: ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateHierarchyScopeSegmentRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: UpsertScenarioParentInput
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateHierarchyScopeSegmentRequirementMaterialRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields
  where: ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  data: UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields
  where: ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput
}

input UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput {
  connect: [ConnectAvailabilityTemplateAvailabilityTemplateItemInput]
  create: [CreateAvailabilityTemplateAvailabilityTemplateItemInput]
  upsert: [UpsertAvailabilityTemplateAvailabilityTemplateItemInput]
  update: [UpdateAvailabilityTemplateAvailabilityTemplateItemInput]
  delete: [ConnectAvailabilityTemplateAvailabilityTemplateItemInput]
  disconnect: [ConnectAvailabilityTemplateAvailabilityTemplateItemInput]
}

input UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [FindCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  update: [UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput]
  delete: [FindCalendarisedAvailabilityTemplateSetItemInput]
  disconnect: [FindCalendarisedAvailabilityTemplateSetItemInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  delete: [ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
  disconnect: [ConnectCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateCalendarisedAvailabilityTemplateSetEquipmentInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetEquipmentInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetEquipmentInput]
  delete: [FindEquipmentInput]
  disconnect: [FindEquipmentInput]
}

input UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput {
  connect: [FindPersonInput]
  create: [CreateCalendarisedAvailabilityTemplateSetPersonInput]
  upsert: [UpsertCalendarisedAvailabilityTemplateSetPersonInput]
  update: [UpdateCalendarisedAvailabilityTemplateSetPersonInput]
  delete: [FindPersonInput]
  disconnect: [FindPersonInput]
}

input UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput {
  connect: [ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  create: [CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  upsert: [UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  update: [UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  delete: [ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
  disconnect: [ConnectCalendarisedThroughputSetCalendarisedThroughputSetItemInput]
}

input UpdateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  update: [UpdateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput]
  delete: [FindOperationsSegmentMaterialSpecificationInput]
  disconnect: [FindOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyChangeoverSetChangeoverSetItemsInput {
  connect: [ConnectChangeoverSetChangeoverSetItemInput]
  create: [CreateChangeoverSetChangeoverSetItemInput]
  upsert: [UpsertChangeoverSetChangeoverSetItemInput]
  update: [UpdateChangeoverSetChangeoverSetItemInput]
  delete: [ConnectChangeoverSetChangeoverSetItemInput]
  disconnect: [ConnectChangeoverSetChangeoverSetItemInput]
}

input UpdateManyChangeoverSetEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateChangeoverSetEquipmentInput]
  upsert: [UpsertChangeoverSetEquipmentInput]
  update: [UpdateChangeoverSetEquipmentInput]
  delete: [FindEquipmentInput]
  disconnect: [FindEquipmentInput]
}

input UpdateManyColourSchemeColourSchemeItemsInput {
  connect: [ConnectColourSchemeColourSchemeItemInput]
  create: [CreateColourSchemeColourSchemeItemInput]
  upsert: [UpsertColourSchemeColourSchemeItemInput]
  update: [UpdateColourSchemeColourSchemeItemInput]
  delete: [ConnectColourSchemeColourSchemeItemInput]
  disconnect: [ConnectColourSchemeColourSchemeItemInput]
}

input UpdateManyDowntimePeriodEquipmentDowntimePeriodsInput {
  connect: [ConnectDowntimePeriodEquipmentDowntimePeriodInput]
  create: [CreateDowntimePeriodEquipmentDowntimePeriodInput]
  upsert: [UpsertDowntimePeriodEquipmentDowntimePeriodInput]
  update: [UpdateDowntimePeriodEquipmentDowntimePeriodInput]
  delete: [ConnectDowntimePeriodEquipmentDowntimePeriodInput]
  disconnect: [ConnectDowntimePeriodEquipmentDowntimePeriodInput]
}

input UpdateManyDowntimePeriodPersonDowntimePeriodsInput {
  connect: [ConnectDowntimePeriodPersonDowntimePeriodInput]
  create: [CreateDowntimePeriodPersonDowntimePeriodInput]
  upsert: [UpsertDowntimePeriodPersonDowntimePeriodInput]
  update: [UpdateDowntimePeriodPersonDowntimePeriodInput]
  delete: [ConnectDowntimePeriodPersonDowntimePeriodInput]
  disconnect: [ConnectDowntimePeriodPersonDowntimePeriodInput]
}

input UpdateManyEquipmentClassEquipmentClassEquipmentMembersInput {
  connect: [ConnectEquipmentClassEquipmentClassEquipmentMemberInput]
  create: [CreateEquipmentClassEquipmentClassEquipmentMemberInput]
  upsert: [UpsertEquipmentClassEquipmentClassEquipmentMemberInput]
  update: [UpdateEquipmentClassEquipmentClassEquipmentMemberInput]
  delete: [ConnectEquipmentClassEquipmentClassEquipmentMemberInput]
  disconnect: [ConnectEquipmentClassEquipmentClassEquipmentMemberInput]
}

input UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  delete: [ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput]
  disconnect: [ConnectEquipmentClassOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyEquipmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateEquipmentEquipmentCapabilityInput]
  upsert: [UpsertEquipmentEquipmentCapabilityInput]
  update: [UpdateEquipmentEquipmentCapabilityInput]
  delete: [FindEquipmentCapabilityInput]
  disconnect: [FindEquipmentCapabilityInput]
}

input UpdateManyEquipmentEquipmentChildChildrenInput {
  connect: [ConnectEquipmentEquipmentChildChildInput]
  create: [CreateEquipmentEquipmentChildChildInput]
  upsert: [UpsertEquipmentEquipmentChildChildInput]
  update: [UpdateEquipmentEquipmentChildChildInput]
  delete: [ConnectEquipmentEquipmentChildChildInput]
  disconnect: [ConnectEquipmentEquipmentChildChildInput]
}

input UpdateManyEquipmentEquipmentChildParentsInput {
  connect: [ConnectEquipmentEquipmentChildParentInput]
  create: [CreateEquipmentEquipmentChildParentInput]
  upsert: [UpsertEquipmentEquipmentChildParentInput]
  update: [UpdateEquipmentEquipmentChildParentInput]
  delete: [ConnectEquipmentEquipmentChildParentInput]
  disconnect: [ConnectEquipmentEquipmentChildParentInput]
}

input UpdateManyEquipmentEquipmentClassEquipmentMembersInput {
  connect: [ConnectEquipmentEquipmentClassEquipmentMemberInput]
  create: [CreateEquipmentEquipmentClassEquipmentMemberInput]
  upsert: [UpsertEquipmentEquipmentClassEquipmentMemberInput]
  update: [UpdateEquipmentEquipmentClassEquipmentMemberInput]
  delete: [ConnectEquipmentEquipmentClassEquipmentMemberInput]
  disconnect: [ConnectEquipmentEquipmentClassEquipmentMemberInput]
}

input UpdateManyEquipmentEquipmentDescendantAscendantsInput {
  connect: [ConnectEquipmentEquipmentDescendantAscendantInput]
  create: [CreateEquipmentEquipmentDescendantAscendantInput]
  upsert: [UpsertEquipmentEquipmentDescendantAscendantInput]
  update: [UpdateEquipmentEquipmentDescendantAscendantInput]
  delete: [ConnectEquipmentEquipmentDescendantAscendantInput]
  disconnect: [ConnectEquipmentEquipmentDescendantAscendantInput]
}

input UpdateManyEquipmentEquipmentDescendantDescendantsInput {
  connect: [ConnectEquipmentEquipmentDescendantDescendantInput]
  create: [CreateEquipmentEquipmentDescendantDescendantInput]
  upsert: [UpsertEquipmentEquipmentDescendantDescendantInput]
  update: [UpdateEquipmentEquipmentDescendantDescendantInput]
  delete: [ConnectEquipmentEquipmentDescendantDescendantInput]
  disconnect: [ConnectEquipmentEquipmentDescendantDescendantInput]
}

input UpdateManyEquipmentEquipmentDowntimePeriodsInput {
  connect: [ConnectEquipmentEquipmentDowntimePeriodInput]
  create: [CreateEquipmentEquipmentDowntimePeriodInput]
  upsert: [UpsertEquipmentEquipmentDowntimePeriodInput]
  update: [UpdateEquipmentEquipmentDowntimePeriodInput]
  delete: [ConnectEquipmentEquipmentDowntimePeriodInput]
  disconnect: [ConnectEquipmentEquipmentDowntimePeriodInput]
}

input UpdateManyEquipmentEquipmentPropertiesInput {
  connect: [ConnectEquipmentEquipmentPropertyInput]
  create: [CreateEquipmentEquipmentPropertyInput]
  upsert: [UpsertEquipmentEquipmentPropertyInput]
  update: [UpdateEquipmentEquipmentPropertyInput]
  delete: [ConnectEquipmentEquipmentPropertyInput]
  disconnect: [ConnectEquipmentEquipmentPropertyInput]
}

input UpdateManyEquipmentHierarchyScopesInput {
  connect: [FindHierarchyScopeInput]
  create: [CreateEquipmentHierarchyScopeInput]
  upsert: [UpsertEquipmentHierarchyScopeInput]
  update: [UpdateEquipmentHierarchyScopeInput]
  delete: [FindHierarchyScopeInput]
  disconnect: [FindHierarchyScopeInput]
}

input UpdateManyEquipmentOperationsRequestEquipmentsInput {
  connect: [ConnectEquipmentOperationsRequestEquipmentInput]
  create: [CreateEquipmentOperationsRequestEquipmentInput]
  upsert: [UpsertEquipmentOperationsRequestEquipmentInput]
  update: [UpdateEquipmentOperationsRequestEquipmentInput]
  delete: [ConnectEquipmentOperationsRequestEquipmentInput]
  disconnect: [ConnectEquipmentOperationsRequestEquipmentInput]
}

input UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectEquipmentOperationsSegmentEquipmentSpecificationInput]
  create: [CreateEquipmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertEquipmentOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateEquipmentOperationsSegmentEquipmentSpecificationInput]
  delete: [ConnectEquipmentOperationsSegmentEquipmentSpecificationInput]
  disconnect: [ConnectEquipmentOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateEquipmentSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertEquipmentSegmentRequirementEquipmentRequirementInput]
  update: [UpdateEquipmentSegmentRequirementEquipmentRequirementInput]
  delete: [FindSegmentRequirementEquipmentRequirementInput]
  disconnect: [FindSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyHierarchyScopeEquipmentCapabilitiesInput {
  connect: [ConnectHierarchyScopeEquipmentCapabilityInput]
  create: [CreateHierarchyScopeEquipmentCapabilityInput]
  upsert: [UpsertHierarchyScopeEquipmentCapabilityInput]
  update: [UpdateHierarchyScopeEquipmentCapabilityInput]
  delete: [ConnectHierarchyScopeEquipmentCapabilityInput]
  disconnect: [ConnectHierarchyScopeEquipmentCapabilityInput]
}

input UpdateManyHierarchyScopeEquipmentClassesInput {
  connect: [ConnectHierarchyScopeEquipmentClassInput]
  create: [CreateHierarchyScopeEquipmentClassInput]
  upsert: [UpsertHierarchyScopeEquipmentClassInput]
  update: [UpdateHierarchyScopeEquipmentClassInput]
  delete: [ConnectHierarchyScopeEquipmentClassInput]
  disconnect: [ConnectHierarchyScopeEquipmentClassInput]
}

input UpdateManyHierarchyScopeEquipmentsInput {
  connect: [ConnectHierarchyScopeEquipmentInput]
  create: [CreateHierarchyScopeEquipmentInput]
  upsert: [UpsertHierarchyScopeEquipmentInput]
  update: [UpdateHierarchyScopeEquipmentInput]
  delete: [ConnectHierarchyScopeEquipmentInput]
  disconnect: [ConnectHierarchyScopeEquipmentInput]
}

input UpdateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput {
  connect: [ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput]
  create: [CreateHierarchyScopeHierarchyScopeDescendantAscendantInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeDescendantAscendantInput]
  update: [UpdateHierarchyScopeHierarchyScopeDescendantAscendantInput]
  delete: [ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput]
  disconnect: [ConnectHierarchyScopeHierarchyScopeDescendantAscendantInput]
}

input UpdateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput {
  connect: [ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput]
  create: [CreateHierarchyScopeHierarchyScopeDescendantDescendantInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeDescendantDescendantInput]
  update: [UpdateHierarchyScopeHierarchyScopeDescendantDescendantInput]
  delete: [ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput]
  disconnect: [ConnectHierarchyScopeHierarchyScopeDescendantDescendantInput]
}

input UpdateManyHierarchyScopeHierarchyScopesInput {
  connect: [ConnectHierarchyScopeHierarchyScopeInput]
  create: [CreateHierarchyScopeHierarchyScopeInput]
  upsert: [UpsertHierarchyScopeHierarchyScopeInput]
  update: [UpdateHierarchyScopeHierarchyScopeInput]
  delete: [ConnectHierarchyScopeHierarchyScopeInput]
  disconnect: [ConnectHierarchyScopeHierarchyScopeInput]
}

input UpdateManyHierarchyScopeMaterialDefinitionsInput {
  connect: [ConnectHierarchyScopeMaterialDefinitionInput]
  create: [CreateHierarchyScopeMaterialDefinitionInput]
  upsert: [UpsertHierarchyScopeMaterialDefinitionInput]
  update: [UpdateHierarchyScopeMaterialDefinitionInput]
  delete: [ConnectHierarchyScopeMaterialDefinitionInput]
  disconnect: [ConnectHierarchyScopeMaterialDefinitionInput]
}

input UpdateManyHierarchyScopeMaterialLotsInput {
  connect: [ConnectHierarchyScopeMaterialLotInput]
  create: [CreateHierarchyScopeMaterialLotInput]
  upsert: [UpsertHierarchyScopeMaterialLotInput]
  update: [UpdateHierarchyScopeMaterialLotInput]
  delete: [ConnectHierarchyScopeMaterialLotInput]
  disconnect: [ConnectHierarchyScopeMaterialLotInput]
}

input UpdateManyHierarchyScopeOpenPurchaseOrdersInput {
  connect: [ConnectHierarchyScopeOpenPurchaseOrderInput]
  create: [CreateHierarchyScopeOpenPurchaseOrderInput]
  upsert: [UpsertHierarchyScopeOpenPurchaseOrderInput]
  update: [UpdateHierarchyScopeOpenPurchaseOrderInput]
  delete: [ConnectHierarchyScopeOpenPurchaseOrderInput]
  disconnect: [ConnectHierarchyScopeOpenPurchaseOrderInput]
}

input UpdateManyHierarchyScopeOperationalLocationsInput {
  connect: [FindOperationalLocationInput]
  create: [CreateHierarchyScopeOperationalLocationInput]
  upsert: [UpsertHierarchyScopeOperationalLocationInput]
  update: [UpdateHierarchyScopeOperationalLocationInput]
  delete: [FindOperationalLocationInput]
  disconnect: [FindOperationalLocationInput]
}

input UpdateManyHierarchyScopeOperationsDefinitionClassesInput {
  connect: [ConnectHierarchyScopeOperationsDefinitionClassInput]
  create: [CreateHierarchyScopeOperationsDefinitionClassInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionClassInput]
  update: [UpdateHierarchyScopeOperationsDefinitionClassInput]
  delete: [ConnectHierarchyScopeOperationsDefinitionClassInput]
  disconnect: [ConnectHierarchyScopeOperationsDefinitionClassInput]
}

input UpdateManyHierarchyScopeOperationsDefinitionsInput {
  connect: [ConnectHierarchyScopeOperationsDefinitionInput]
  create: [CreateHierarchyScopeOperationsDefinitionInput]
  upsert: [UpsertHierarchyScopeOperationsDefinitionInput]
  update: [UpdateHierarchyScopeOperationsDefinitionInput]
  delete: [ConnectHierarchyScopeOperationsDefinitionInput]
  disconnect: [ConnectHierarchyScopeOperationsDefinitionInput]
}

input UpdateManyHierarchyScopeOperationsRequestsInput {
  connect: [FindOperationsRequestInput]
  create: [CreateHierarchyScopeOperationsRequestInput]
  upsert: [UpsertHierarchyScopeOperationsRequestInput]
  update: [UpdateHierarchyScopeOperationsRequestInput]
  delete: [FindOperationsRequestInput]
  disconnect: [FindOperationsRequestInput]
}

input UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInput]
  delete: [FindOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FindOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInput]
  delete: [FindOperationsSegmentMaterialSpecificationInput]
  disconnect: [FindOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInput]
  delete: [FindOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FindOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyHierarchyScopeOperationsSegmentsInput {
  connect: [ConnectHierarchyScopeOperationsSegmentInput]
  create: [CreateHierarchyScopeOperationsSegmentInput]
  upsert: [UpsertHierarchyScopeOperationsSegmentInput]
  update: [UpdateHierarchyScopeOperationsSegmentInput]
  delete: [ConnectHierarchyScopeOperationsSegmentInput]
  disconnect: [ConnectHierarchyScopeOperationsSegmentInput]
}

input UpdateManyHierarchyScopePersonnelCapabilitiesInput {
  connect: [ConnectHierarchyScopePersonnelCapabilityInput]
  create: [CreateHierarchyScopePersonnelCapabilityInput]
  upsert: [UpsertHierarchyScopePersonnelCapabilityInput]
  update: [UpdateHierarchyScopePersonnelCapabilityInput]
  delete: [ConnectHierarchyScopePersonnelCapabilityInput]
  disconnect: [ConnectHierarchyScopePersonnelCapabilityInput]
}

input UpdateManyHierarchyScopePersonnelClassesInput {
  connect: [ConnectHierarchyScopePersonnelClassInput]
  create: [CreateHierarchyScopePersonnelClassInput]
  upsert: [UpsertHierarchyScopePersonnelClassInput]
  update: [UpdateHierarchyScopePersonnelClassInput]
  delete: [ConnectHierarchyScopePersonnelClassInput]
  disconnect: [ConnectHierarchyScopePersonnelClassInput]
}

input UpdateManyHierarchyScopePersonnelPositionsInput {
  connect: [ConnectHierarchyScopePersonnelPositionInput]
  create: [CreateHierarchyScopePersonnelPositionInput]
  upsert: [UpsertHierarchyScopePersonnelPositionInput]
  update: [UpdateHierarchyScopePersonnelPositionInput]
  delete: [ConnectHierarchyScopePersonnelPositionInput]
  disconnect: [ConnectHierarchyScopePersonnelPositionInput]
}

input UpdateManyHierarchyScopePersonsInput {
  connect: [ConnectHierarchyScopePersonInput]
  create: [CreateHierarchyScopePersonInput]
  upsert: [UpsertHierarchyScopePersonInput]
  update: [UpdateHierarchyScopePersonInput]
  delete: [ConnectHierarchyScopePersonInput]
  disconnect: [ConnectHierarchyScopePersonInput]
}

input UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  delete: [ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput]
  disconnect: [ConnectHierarchyScopeSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementMaterialRequirementInput]
  delete: [ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput]
  disconnect: [ConnectHierarchyScopeSegmentRequirementMaterialRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput {
  connect: [ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  delete: [ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput]
  disconnect: [ConnectHierarchyScopeSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyHierarchyScopeSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateHierarchyScopeSegmentRequirementInput]
  upsert: [UpsertHierarchyScopeSegmentRequirementInput]
  update: [UpdateHierarchyScopeSegmentRequirementInput]
  delete: [FindSegmentRequirementInput]
  disconnect: [FindSegmentRequirementInput]
}

input UpdateManyMaterialDefinitionMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateMaterialDefinitionMaterialLotInput]
  upsert: [UpsertMaterialDefinitionMaterialLotInput]
  update: [UpdateMaterialDefinitionMaterialLotInput]
  delete: [FindMaterialLotInput]
  disconnect: [FindMaterialLotInput]
}

input UpdateManyMaterialDefinitionMaterialPropertiesInput {
  connect: [ConnectMaterialDefinitionMaterialPropertyInput]
  create: [CreateMaterialDefinitionMaterialPropertyInput]
  upsert: [UpsertMaterialDefinitionMaterialPropertyInput]
  update: [UpdateMaterialDefinitionMaterialPropertyInput]
  delete: [ConnectMaterialDefinitionMaterialPropertyInput]
  disconnect: [ConnectMaterialDefinitionMaterialPropertyInput]
}

input UpdateManyMaterialDefinitionOpenPurchaseOrdersInput {
  connect: [FindOpenPurchaseOrderInput]
  create: [CreateMaterialDefinitionOpenPurchaseOrderInput]
  upsert: [UpsertMaterialDefinitionOpenPurchaseOrderInput]
  update: [UpdateMaterialDefinitionOpenPurchaseOrderInput]
  delete: [FindOpenPurchaseOrderInput]
  disconnect: [FindOpenPurchaseOrderInput]
}

input UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  create: [CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  update: [UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  delete: [ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
  disconnect: [ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  update: [UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInput]
  delete: [FindSegmentRequirementMaterialRequirementInput]
  disconnect: [FindSegmentRequirementMaterialRequirementInput]
}

input UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateMaterialLotSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertMaterialLotSegmentRequirementMaterialRequirementInput]
  update: [UpdateMaterialLotSegmentRequirementMaterialRequirementInput]
  delete: [FindSegmentRequirementMaterialRequirementInput]
  disconnect: [FindSegmentRequirementMaterialRequirementInput]
}

input UpdateManyOperationalLocationMaterialLotsInput {
  connect: [FindMaterialLotInput]
  create: [CreateOperationalLocationMaterialLotInput]
  upsert: [UpsertOperationalLocationMaterialLotInput]
  update: [UpdateOperationalLocationMaterialLotInput]
  delete: [FindMaterialLotInput]
  disconnect: [FindMaterialLotInput]
}

input UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput {
  connect: [FindOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInput]
  delete: [FindOperationsSegmentEquipmentSpecificationInput]
  disconnect: [FindOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentMaterialSpecificationInput]
  delete: [FindOperationsSegmentMaterialSpecificationInput]
  disconnect: [FindOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput {
  connect: [FindOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInput]
  delete: [FindOperationsSegmentPersonnelSpecificationInput]
  disconnect: [FindOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementEquipmentRequirementInput]
  delete: [FindSegmentRequirementEquipmentRequirementInput]
  disconnect: [FindSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementMaterialRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementMaterialRequirementInput]
  delete: [FindSegmentRequirementMaterialRequirementInput]
  disconnect: [FindSegmentRequirementMaterialRequirementInput]
}

input UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput]
  update: [UpdateOperationalLocationSegmentRequirementPersonnelRequirementInput]
  delete: [FindSegmentRequirementPersonnelRequirementInput]
  disconnect: [FindSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyOperationsDefinitionClassOperationsDefinitionsInput {
  connect: [ConnectOperationsDefinitionClassOperationsDefinitionInput]
  create: [CreateOperationsDefinitionClassOperationsDefinitionInput]
  upsert: [UpsertOperationsDefinitionClassOperationsDefinitionInput]
  update: [UpdateOperationsDefinitionClassOperationsDefinitionInput]
  delete: [ConnectOperationsDefinitionClassOperationsDefinitionInput]
  disconnect: [ConnectOperationsDefinitionClassOperationsDefinitionInput]
}

input UpdateManyOperationsDefinitionClassOrderItemsInput {
  connect: [ConnectOperationsDefinitionClassOrderItemInput]
  create: [CreateOperationsDefinitionClassOrderItemInput]
  upsert: [UpsertOperationsDefinitionClassOrderItemInput]
  update: [UpdateOperationsDefinitionClassOrderItemInput]
  delete: [ConnectOperationsDefinitionClassOrderItemInput]
  disconnect: [ConnectOperationsDefinitionClassOrderItemInput]
}

input UpdateManyOperationsDefinitionOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsDefinitionOperationsSegmentInput]
  upsert: [UpsertOperationsDefinitionOperationsSegmentInput]
  update: [UpdateOperationsDefinitionOperationsSegmentInput]
  delete: [FindOperationsSegmentInput]
  disconnect: [FindOperationsSegmentInput]
}

input UpdateManyOperationsRequestOperationsRequestEquipmentsInput {
  connect: [ConnectOperationsRequestOperationsRequestEquipmentInput]
  create: [CreateOperationsRequestOperationsRequestEquipmentInput]
  upsert: [UpsertOperationsRequestOperationsRequestEquipmentInput]
  update: [UpdateOperationsRequestOperationsRequestEquipmentInput]
  delete: [ConnectOperationsRequestOperationsRequestEquipmentInput]
  disconnect: [ConnectOperationsRequestOperationsRequestEquipmentInput]
}

input UpdateManyOperationsRequestOperationsRequestPersonnelsInput {
  connect: [ConnectOperationsRequestOperationsRequestPersonnelInput]
  create: [CreateOperationsRequestOperationsRequestPersonnelInput]
  upsert: [UpsertOperationsRequestOperationsRequestPersonnelInput]
  update: [UpdateOperationsRequestOperationsRequestPersonnelInput]
  delete: [ConnectOperationsRequestOperationsRequestPersonnelInput]
  disconnect: [ConnectOperationsRequestOperationsRequestPersonnelInput]
}

input UpdateManyOperationsRequestOperationsRequestProfilesInput {
  connect: [ConnectOperationsRequestOperationsRequestProfileInput]
  create: [CreateOperationsRequestOperationsRequestProfileInput]
  upsert: [UpsertOperationsRequestOperationsRequestProfileInput]
  update: [UpdateOperationsRequestOperationsRequestProfileInput]
  delete: [ConnectOperationsRequestOperationsRequestProfileInput]
  disconnect: [ConnectOperationsRequestOperationsRequestProfileInput]
}

input UpdateManyOperationsRequestSegmentRequirementsInput {
  connect: [ConnectOperationsRequestSegmentRequirementInput]
  create: [CreateOperationsRequestSegmentRequirementInput]
  upsert: [UpsertOperationsRequestSegmentRequirementInput]
  update: [UpdateOperationsRequestSegmentRequirementInput]
  delete: [ConnectOperationsRequestSegmentRequirementInput]
  disconnect: [ConnectOperationsRequestSegmentRequirementInput]
}

input UpdateManyOperationsSegmentChangeoverSetItemsInput {
  connect: [FindChangeoverSetItemInput]
  create: [CreateOperationsSegmentChangeoverSetItemInput]
  upsert: [UpsertOperationsSegmentChangeoverSetItemInput]
  update: [UpdateOperationsSegmentChangeoverSetItemInput]
  delete: [FindChangeoverSetItemInput]
  disconnect: [FindChangeoverSetItemInput]
}

input UpdateManyOperationsSegmentEquipmentCapabilitiesInput {
  connect: [FindEquipmentCapabilityInput]
  create: [CreateOperationsSegmentEquipmentCapabilityInput]
  upsert: [UpsertOperationsSegmentEquipmentCapabilityInput]
  update: [UpdateOperationsSegmentEquipmentCapabilityInput]
  delete: [FindEquipmentCapabilityInput]
  disconnect: [FindEquipmentCapabilityInput]
}

input UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput {
  connect: [FindOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput]
  delete: [FindOperationsSegmentMaterialSpecificationInput]
  disconnect: [FindOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsRequestsInput {
  connect: [ConnectOperationsSegmentOperationsRequestInput]
  create: [CreateOperationsSegmentOperationsRequestInput]
  upsert: [UpsertOperationsSegmentOperationsRequestInput]
  update: [UpdateOperationsSegmentOperationsRequestInput]
  delete: [ConnectOperationsSegmentOperationsRequestInput]
  disconnect: [ConnectOperationsSegmentOperationsRequestInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  delete: [ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  delete: [ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput]
  create: [CreateOperationsSegmentOperationsSegmentDescendantAscendantInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDescendantAscendantInput]
  update: [UpdateOperationsSegmentOperationsSegmentDescendantAscendantInput]
  delete: [ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput]
}

input UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput]
  create: [CreateOperationsSegmentOperationsSegmentDescendantDescendantInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentDescendantDescendantInput]
  update: [UpdateOperationsSegmentOperationsSegmentDescendantDescendantInput]
  delete: [ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput]
}

input UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  delete: [ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  delete: [ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  create: [CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  delete: [ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyOperationsSegmentOperationsSegmentPropertiesInput {
  connect: [ConnectOperationsSegmentOperationsSegmentPropertyInput]
  create: [CreateOperationsSegmentOperationsSegmentPropertyInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentPropertyInput]
  update: [UpdateOperationsSegmentOperationsSegmentPropertyInput]
  delete: [ConnectOperationsSegmentOperationsSegmentPropertyInput]
  disconnect: [ConnectOperationsSegmentOperationsSegmentPropertyInput]
}

input UpdateManyOperationsSegmentOperationsSegmentsInput {
  connect: [FindOperationsSegmentInput]
  create: [CreateOperationsSegmentOperationsSegmentInput]
  upsert: [UpsertOperationsSegmentOperationsSegmentInput]
  update: [UpdateOperationsSegmentOperationsSegmentInput]
  delete: [FindOperationsSegmentInput]
  disconnect: [FindOperationsSegmentInput]
}

input UpdateManyOperationsSegmentPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreateOperationsSegmentPersonnelCapabilityInput]
  upsert: [UpsertOperationsSegmentPersonnelCapabilityInput]
  update: [UpdateOperationsSegmentPersonnelCapabilityInput]
  delete: [FindPersonnelCapabilityInput]
  disconnect: [FindPersonnelCapabilityInput]
}

input UpdateManyOperationsSegmentSegmentRequirementsInput {
  connect: [FindSegmentRequirementInput]
  create: [CreateOperationsSegmentSegmentRequirementInput]
  upsert: [UpsertOperationsSegmentSegmentRequirementInput]
  update: [UpdateOperationsSegmentSegmentRequirementInput]
  delete: [FindSegmentRequirementInput]
  disconnect: [FindSegmentRequirementInput]
}

input UpdateManyOptimisationHierarchyEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationHierarchyEquipmentInput]
  upsert: [UpsertOptimisationHierarchyEquipmentInput]
  update: [UpdateOptimisationHierarchyEquipmentInput]
  delete: [FindEquipmentInput]
  disconnect: [FindEquipmentInput]
}

input UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput {
  connect: [ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput]
  update: [UpdateOptimisationHierarchyOptimisationHierarchyAttributeInput]
  delete: [ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput]
  disconnect: [ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput]
}

input UpdateManyOptimisationPreferredSequenceEquipmentsInput {
  connect: [FindEquipmentInput]
  create: [CreateOptimisationPreferredSequenceEquipmentInput]
  upsert: [UpsertOptimisationPreferredSequenceEquipmentInput]
  update: [UpdateOptimisationPreferredSequenceEquipmentInput]
  delete: [FindEquipmentInput]
  disconnect: [FindEquipmentInput]
}

input UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput {
  connect: [ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  update: [UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  delete: [ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
  disconnect: [ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput]
}

input UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput {
  connect: [ConnectOptimisationPropertyOptimisationHierarchyAttributeInput]
  create: [CreateOptimisationPropertyOptimisationHierarchyAttributeInput]
  upsert: [UpsertOptimisationPropertyOptimisationHierarchyAttributeInput]
  update: [UpdateOptimisationPropertyOptimisationHierarchyAttributeInput]
  delete: [ConnectOptimisationPropertyOptimisationHierarchyAttributeInput]
  disconnect: [ConnectOptimisationPropertyOptimisationHierarchyAttributeInput]
}

input UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput {
  connect: [ConnectOptimisationPropertyOptimisationPreferredSequenceInput]
  create: [CreateOptimisationPropertyOptimisationPreferredSequenceInput]
  upsert: [UpsertOptimisationPropertyOptimisationPreferredSequenceInput]
  update: [UpdateOptimisationPropertyOptimisationPreferredSequenceInput]
  delete: [ConnectOptimisationPropertyOptimisationPreferredSequenceInput]
  disconnect: [ConnectOptimisationPropertyOptimisationPreferredSequenceInput]
}

input UpdateManyOptimisationPropertyOptimisationPropertyValuesInput {
  connect: [ConnectOptimisationPropertyOptimisationPropertyValueInput]
  create: [CreateOptimisationPropertyOptimisationPropertyValueInput]
  upsert: [UpsertOptimisationPropertyOptimisationPropertyValueInput]
  update: [UpdateOptimisationPropertyOptimisationPropertyValueInput]
  delete: [ConnectOptimisationPropertyOptimisationPropertyValueInput]
  disconnect: [ConnectOptimisationPropertyOptimisationPropertyValueInput]
}

input UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput {
  connect: [ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput]
  update: [UpdateOptimisationPropertyValueChangeoverSetItemFromValueInput]
  delete: [ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput]
  disconnect: [ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput]
}

input UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput {
  connect: [ConnectOptimisationPropertyValueChangeoverSetItemToValueInput]
  create: [CreateOptimisationPropertyValueChangeoverSetItemToValueInput]
  upsert: [UpsertOptimisationPropertyValueChangeoverSetItemToValueInput]
  update: [UpdateOptimisationPropertyValueChangeoverSetItemToValueInput]
  delete: [ConnectOptimisationPropertyValueChangeoverSetItemToValueInput]
  disconnect: [ConnectOptimisationPropertyValueChangeoverSetItemToValueInput]
}

input UpdateManyOptimisationPropertyValueColourSchemeItemsInput {
  connect: [ConnectOptimisationPropertyValueColourSchemeItemInput]
  create: [CreateOptimisationPropertyValueColourSchemeItemInput]
  upsert: [UpsertOptimisationPropertyValueColourSchemeItemInput]
  update: [UpdateOptimisationPropertyValueColourSchemeItemInput]
  delete: [ConnectOptimisationPropertyValueColourSchemeItemInput]
  disconnect: [ConnectOptimisationPropertyValueColourSchemeItemInput]
}

input UpdateManyOptimisationPropertyValueMaterialPropertiesInput {
  connect: [FindMaterialPropertyInput]
  create: [CreateOptimisationPropertyValueMaterialPropertyInput]
  upsert: [UpsertOptimisationPropertyValueMaterialPropertyInput]
  update: [UpdateOptimisationPropertyValueMaterialPropertyInput]
  delete: [FindMaterialPropertyInput]
  disconnect: [FindMaterialPropertyInput]
}

input UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput {
  connect: [ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  create: [CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  upsert: [UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  update: [UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  delete: [ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
  disconnect: [ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput]
}

input UpdateManyOrderItemOperationsRequestProfilesInput {
  connect: [ConnectOrderItemOperationsRequestProfileInput]
  create: [CreateOrderItemOperationsRequestProfileInput]
  upsert: [UpsertOrderItemOperationsRequestProfileInput]
  update: [UpdateOrderItemOperationsRequestProfileInput]
  delete: [ConnectOrderItemOperationsRequestProfileInput]
  disconnect: [ConnectOrderItemOperationsRequestProfileInput]
}

input UpdateManyOrderOrderItemsInput {
  connect: [ConnectOrderOrderItemInput]
  create: [CreateOrderOrderItemInput]
  upsert: [UpsertOrderOrderItemInput]
  update: [UpdateOrderOrderItemInput]
  delete: [ConnectOrderOrderItemInput]
  disconnect: [ConnectOrderOrderItemInput]
}

input UpdateManyOrderOrderPropertiesInput {
  connect: [ConnectOrderOrderPropertyInput]
  create: [CreateOrderOrderPropertyInput]
  upsert: [UpsertOrderOrderPropertyInput]
  update: [UpdateOrderOrderPropertyInput]
  delete: [ConnectOrderOrderPropertyInput]
  disconnect: [ConnectOrderOrderPropertyInput]
}

input UpdateManyOrderStatusOrdersInput {
  connect: [FindOrderInput]
  create: [CreateOrderStatusOrderInput]
  upsert: [UpsertOrderStatusOrderInput]
  update: [UpdateOrderStatusOrderInput]
  delete: [FindOrderInput]
  disconnect: [FindOrderInput]
}

input UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  update: [UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInput]
  delete: [ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput]
  disconnect: [ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyPersonnelClassPersonnelCapabilitiesInput {
  connect: [FindPersonnelCapabilityInput]
  create: [CreatePersonnelClassPersonnelCapabilityInput]
  upsert: [UpsertPersonnelClassPersonnelCapabilityInput]
  update: [UpdatePersonnelClassPersonnelCapabilityInput]
  delete: [FindPersonnelCapabilityInput]
  disconnect: [FindPersonnelCapabilityInput]
}

input UpdateManyPersonnelClassPersonnelClassPersonMembersInput {
  connect: [ConnectPersonnelClassPersonnelClassPersonMemberInput]
  create: [CreatePersonnelClassPersonnelClassPersonMemberInput]
  upsert: [UpsertPersonnelClassPersonnelClassPersonMemberInput]
  update: [UpdatePersonnelClassPersonnelClassPersonMemberInput]
  delete: [ConnectPersonnelClassPersonnelClassPersonMemberInput]
  disconnect: [ConnectPersonnelClassPersonnelClassPersonMemberInput]
}

input UpdateManyPersonnelClassPersonnelClassPropertiesInput {
  connect: [ConnectPersonnelClassPersonnelClassPropertyInput]
  create: [CreatePersonnelClassPersonnelClassPropertyInput]
  upsert: [UpsertPersonnelClassPersonnelClassPropertyInput]
  update: [UpdatePersonnelClassPersonnelClassPropertyInput]
  delete: [ConnectPersonnelClassPersonnelClassPropertyInput]
  disconnect: [ConnectPersonnelClassPersonnelClassPropertyInput]
}

input UpdateManyPersonnelClassPersonnelPositionsInput {
  connect: [FindPersonnelPositionInput]
  create: [CreatePersonnelClassPersonnelPositionInput]
  upsert: [UpsertPersonnelClassPersonnelPositionInput]
  update: [UpdatePersonnelClassPersonnelPositionInput]
  delete: [FindPersonnelPositionInput]
  disconnect: [FindPersonnelPositionInput]
}

input UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput]
  update: [UpdatePersonnelClassSegmentRequirementPersonnelRequirementInput]
  delete: [FindSegmentRequirementPersonnelRequirementInput]
  disconnect: [FindSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyPersonnelPositionPersonnelPositionPersonMembersInput {
  connect: [ConnectPersonnelPositionPersonnelPositionPersonMemberInput]
  create: [CreatePersonnelPositionPersonnelPositionPersonMemberInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPersonMemberInput]
  update: [UpdatePersonnelPositionPersonnelPositionPersonMemberInput]
  delete: [ConnectPersonnelPositionPersonnelPositionPersonMemberInput]
  disconnect: [ConnectPersonnelPositionPersonnelPositionPersonMemberInput]
}

input UpdateManyPersonnelPositionPersonnelPositionPropertiesInput {
  connect: [ConnectPersonnelPositionPersonnelPositionPropertyInput]
  create: [CreatePersonnelPositionPersonnelPositionPropertyInput]
  upsert: [UpsertPersonnelPositionPersonnelPositionPropertyInput]
  update: [UpdatePersonnelPositionPersonnelPositionPropertyInput]
  delete: [ConnectPersonnelPositionPersonnelPositionPropertyInput]
  disconnect: [ConnectPersonnelPositionPersonnelPositionPropertyInput]
}

input UpdateManyPersonOperationsRequestPersonnelsInput {
  connect: [ConnectPersonOperationsRequestPersonnelInput]
  create: [CreatePersonOperationsRequestPersonnelInput]
  upsert: [UpsertPersonOperationsRequestPersonnelInput]
  update: [UpdatePersonOperationsRequestPersonnelInput]
  delete: [ConnectPersonOperationsRequestPersonnelInput]
  disconnect: [ConnectPersonOperationsRequestPersonnelInput]
}

input UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectPersonOperationsSegmentPersonnelSpecificationInput]
  create: [CreatePersonOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertPersonOperationsSegmentPersonnelSpecificationInput]
  update: [UpdatePersonOperationsSegmentPersonnelSpecificationInput]
  delete: [ConnectPersonOperationsSegmentPersonnelSpecificationInput]
  disconnect: [ConnectPersonOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyPersonPersonDowntimePeriodsInput {
  connect: [ConnectPersonPersonDowntimePeriodInput]
  create: [CreatePersonPersonDowntimePeriodInput]
  upsert: [UpsertPersonPersonDowntimePeriodInput]
  update: [UpdatePersonPersonDowntimePeriodInput]
  delete: [ConnectPersonPersonDowntimePeriodInput]
  disconnect: [ConnectPersonPersonDowntimePeriodInput]
}

input UpdateManyPersonPersonnelClassPersonMembersInput {
  connect: [ConnectPersonPersonnelClassPersonMemberInput]
  create: [CreatePersonPersonnelClassPersonMemberInput]
  upsert: [UpsertPersonPersonnelClassPersonMemberInput]
  update: [UpdatePersonPersonnelClassPersonMemberInput]
  delete: [ConnectPersonPersonnelClassPersonMemberInput]
  disconnect: [ConnectPersonPersonnelClassPersonMemberInput]
}

input UpdateManyPersonPersonnelPositionPersonMembersInput {
  connect: [ConnectPersonPersonnelPositionPersonMemberInput]
  create: [CreatePersonPersonnelPositionPersonMemberInput]
  upsert: [UpsertPersonPersonnelPositionPersonMemberInput]
  update: [UpdatePersonPersonnelPositionPersonMemberInput]
  delete: [ConnectPersonPersonnelPositionPersonMemberInput]
  disconnect: [ConnectPersonPersonnelPositionPersonMemberInput]
}

input UpdateManyPersonPersonPropertiesInput {
  connect: [ConnectPersonPersonPropertyInput]
  create: [CreatePersonPersonPropertyInput]
  upsert: [UpsertPersonPersonPropertyInput]
  update: [UpdatePersonPersonPropertyInput]
  delete: [ConnectPersonPersonPropertyInput]
  disconnect: [ConnectPersonPersonPropertyInput]
}

input UpdateManyPersonSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreatePersonSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertPersonSegmentRequirementPersonnelRequirementInput]
  update: [UpdatePersonSegmentRequirementPersonnelRequirementInput]
  delete: [FindSegmentRequirementPersonnelRequirementInput]
  disconnect: [FindSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyScenarioAvailabilityTemplateItemsInput {
  connect: [ConnectScenarioAvailabilityTemplateItemInput]
  create: [CreateScenarioAvailabilityTemplateItemInput]
  upsert: [UpsertScenarioAvailabilityTemplateItemInput]
  update: [UpdateScenarioAvailabilityTemplateItemInput]
  delete: [ConnectScenarioAvailabilityTemplateItemInput]
  disconnect: [ConnectScenarioAvailabilityTemplateItemInput]
}

input UpdateManyScenarioAvailabilityTemplatesInput {
  connect: [ConnectScenarioAvailabilityTemplateInput]
  create: [CreateScenarioAvailabilityTemplateInput]
  upsert: [UpsertScenarioAvailabilityTemplateInput]
  update: [UpdateScenarioAvailabilityTemplateInput]
  delete: [ConnectScenarioAvailabilityTemplateInput]
  disconnect: [ConnectScenarioAvailabilityTemplateInput]
}

input UpdateManyScenarioCalendarisedAvailabilityTemplateSetItemsInput {
  connect: [ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetItemInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetItemInput]
  update: [UpdateScenarioCalendarisedAvailabilityTemplateSetItemInput]
  delete: [ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput]
  disconnect: [ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput]
}

input UpdateManyScenarioCalendarisedAvailabilityTemplateSetsInput {
  connect: [ConnectScenarioCalendarisedAvailabilityTemplateSetInput]
  create: [CreateScenarioCalendarisedAvailabilityTemplateSetInput]
  upsert: [UpsertScenarioCalendarisedAvailabilityTemplateSetInput]
  update: [UpdateScenarioCalendarisedAvailabilityTemplateSetInput]
  delete: [ConnectScenarioCalendarisedAvailabilityTemplateSetInput]
  disconnect: [ConnectScenarioCalendarisedAvailabilityTemplateSetInput]
}

input UpdateManyScenarioCalendarisedThroughputSetItemsInput {
  connect: [ConnectScenarioCalendarisedThroughputSetItemInput]
  create: [CreateScenarioCalendarisedThroughputSetItemInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetItemInput]
  update: [UpdateScenarioCalendarisedThroughputSetItemInput]
  delete: [ConnectScenarioCalendarisedThroughputSetItemInput]
  disconnect: [ConnectScenarioCalendarisedThroughputSetItemInput]
}

input UpdateManyScenarioCalendarisedThroughputSetsInput {
  connect: [ConnectScenarioCalendarisedThroughputSetInput]
  create: [CreateScenarioCalendarisedThroughputSetInput]
  upsert: [UpsertScenarioCalendarisedThroughputSetInput]
  update: [UpdateScenarioCalendarisedThroughputSetInput]
  delete: [ConnectScenarioCalendarisedThroughputSetInput]
  disconnect: [ConnectScenarioCalendarisedThroughputSetInput]
}

input UpdateManyScenarioChangeoverSetItemsInput {
  connect: [ConnectScenarioChangeoverSetItemInput]
  create: [CreateScenarioChangeoverSetItemInput]
  upsert: [UpsertScenarioChangeoverSetItemInput]
  update: [UpdateScenarioChangeoverSetItemInput]
  delete: [ConnectScenarioChangeoverSetItemInput]
  disconnect: [ConnectScenarioChangeoverSetItemInput]
}

input UpdateManyScenarioChangeoverSetsInput {
  connect: [ConnectScenarioChangeoverSetInput]
  create: [CreateScenarioChangeoverSetInput]
  upsert: [UpsertScenarioChangeoverSetInput]
  update: [UpdateScenarioChangeoverSetInput]
  delete: [ConnectScenarioChangeoverSetInput]
  disconnect: [ConnectScenarioChangeoverSetInput]
}

input UpdateManyScenarioColourSchemeItemsInput {
  connect: [ConnectScenarioColourSchemeItemInput]
  create: [CreateScenarioColourSchemeItemInput]
  upsert: [UpsertScenarioColourSchemeItemInput]
  update: [UpdateScenarioColourSchemeItemInput]
  delete: [ConnectScenarioColourSchemeItemInput]
  disconnect: [ConnectScenarioColourSchemeItemInput]
}

input UpdateManyScenarioColourSchemesInput {
  connect: [ConnectScenarioColourSchemeInput]
  create: [CreateScenarioColourSchemeInput]
  upsert: [UpsertScenarioColourSchemeInput]
  update: [UpdateScenarioColourSchemeInput]
  delete: [ConnectScenarioColourSchemeInput]
  disconnect: [ConnectScenarioColourSchemeInput]
}

input UpdateManyScenarioConfigurableApplicationParametersInput {
  connect: [ConnectScenarioConfigurableApplicationParameterInput]
  create: [CreateScenarioConfigurableApplicationParameterInput]
  upsert: [UpsertScenarioConfigurableApplicationParameterInput]
  update: [UpdateScenarioConfigurableApplicationParameterInput]
  delete: [ConnectScenarioConfigurableApplicationParameterInput]
  disconnect: [ConnectScenarioConfigurableApplicationParameterInput]
}

input UpdateManyScenarioDowntimePeriodsInput {
  connect: [ConnectScenarioDowntimePeriodInput]
  create: [CreateScenarioDowntimePeriodInput]
  upsert: [UpsertScenarioDowntimePeriodInput]
  update: [UpdateScenarioDowntimePeriodInput]
  delete: [ConnectScenarioDowntimePeriodInput]
  disconnect: [ConnectScenarioDowntimePeriodInput]
}

input UpdateManyScenarioEquipmentCapabilitiesInput {
  connect: [ConnectScenarioEquipmentCapabilityInput]
  create: [CreateScenarioEquipmentCapabilityInput]
  upsert: [UpsertScenarioEquipmentCapabilityInput]
  update: [UpdateScenarioEquipmentCapabilityInput]
  delete: [ConnectScenarioEquipmentCapabilityInput]
  disconnect: [ConnectScenarioEquipmentCapabilityInput]
}

input UpdateManyScenarioEquipmentChildrenInput {
  connect: [ConnectScenarioEquipmentChildInput]
  create: [CreateScenarioEquipmentChildInput]
  upsert: [UpsertScenarioEquipmentChildInput]
  update: [UpdateScenarioEquipmentChildInput]
  delete: [ConnectScenarioEquipmentChildInput]
  disconnect: [ConnectScenarioEquipmentChildInput]
}

input UpdateManyScenarioEquipmentClassEquipmentMembersInput {
  connect: [ConnectScenarioEquipmentClassEquipmentMemberInput]
  create: [CreateScenarioEquipmentClassEquipmentMemberInput]
  upsert: [UpsertScenarioEquipmentClassEquipmentMemberInput]
  update: [UpdateScenarioEquipmentClassEquipmentMemberInput]
  delete: [ConnectScenarioEquipmentClassEquipmentMemberInput]
  disconnect: [ConnectScenarioEquipmentClassEquipmentMemberInput]
}

input UpdateManyScenarioEquipmentClassesInput {
  connect: [ConnectScenarioEquipmentClassInput]
  create: [CreateScenarioEquipmentClassInput]
  upsert: [UpsertScenarioEquipmentClassInput]
  update: [UpdateScenarioEquipmentClassInput]
  delete: [ConnectScenarioEquipmentClassInput]
  disconnect: [ConnectScenarioEquipmentClassInput]
}

input UpdateManyScenarioEquipmentDescendantsInput {
  connect: [ConnectScenarioEquipmentDescendantInput]
  create: [CreateScenarioEquipmentDescendantInput]
  upsert: [UpsertScenarioEquipmentDescendantInput]
  update: [UpdateScenarioEquipmentDescendantInput]
  delete: [ConnectScenarioEquipmentDescendantInput]
  disconnect: [ConnectScenarioEquipmentDescendantInput]
}

input UpdateManyScenarioEquipmentDowntimePeriodsInput {
  connect: [ConnectScenarioEquipmentDowntimePeriodInput]
  create: [CreateScenarioEquipmentDowntimePeriodInput]
  upsert: [UpsertScenarioEquipmentDowntimePeriodInput]
  update: [UpdateScenarioEquipmentDowntimePeriodInput]
  delete: [ConnectScenarioEquipmentDowntimePeriodInput]
  disconnect: [ConnectScenarioEquipmentDowntimePeriodInput]
}

input UpdateManyScenarioEquipmentPropertiesInput {
  connect: [ConnectScenarioEquipmentPropertyInput]
  create: [CreateScenarioEquipmentPropertyInput]
  upsert: [UpsertScenarioEquipmentPropertyInput]
  update: [UpdateScenarioEquipmentPropertyInput]
  delete: [ConnectScenarioEquipmentPropertyInput]
  disconnect: [ConnectScenarioEquipmentPropertyInput]
}

input UpdateManyScenarioEquipmentsInput {
  connect: [ConnectScenarioEquipmentInput]
  create: [CreateScenarioEquipmentInput]
  upsert: [UpsertScenarioEquipmentInput]
  update: [UpdateScenarioEquipmentInput]
  delete: [ConnectScenarioEquipmentInput]
  disconnect: [ConnectScenarioEquipmentInput]
}

input UpdateManyScenarioHierarchyScopeDescendantsInput {
  connect: [ConnectScenarioHierarchyScopeDescendantInput]
  create: [CreateScenarioHierarchyScopeDescendantInput]
  upsert: [UpsertScenarioHierarchyScopeDescendantInput]
  update: [UpdateScenarioHierarchyScopeDescendantInput]
  delete: [ConnectScenarioHierarchyScopeDescendantInput]
  disconnect: [ConnectScenarioHierarchyScopeDescendantInput]
}

input UpdateManyScenarioHierarchyScopesInput {
  connect: [ConnectScenarioHierarchyScopeInput]
  create: [CreateScenarioHierarchyScopeInput]
  upsert: [UpsertScenarioHierarchyScopeInput]
  update: [UpdateScenarioHierarchyScopeInput]
  delete: [ConnectScenarioHierarchyScopeInput]
  disconnect: [ConnectScenarioHierarchyScopeInput]
}

input UpdateManyScenarioMaterialDefinitionsInput {
  connect: [ConnectScenarioMaterialDefinitionInput]
  create: [CreateScenarioMaterialDefinitionInput]
  upsert: [UpsertScenarioMaterialDefinitionInput]
  update: [UpdateScenarioMaterialDefinitionInput]
  delete: [ConnectScenarioMaterialDefinitionInput]
  disconnect: [ConnectScenarioMaterialDefinitionInput]
}

input UpdateManyScenarioMaterialLotsInput {
  connect: [ConnectScenarioMaterialLotInput]
  create: [CreateScenarioMaterialLotInput]
  upsert: [UpsertScenarioMaterialLotInput]
  update: [UpdateScenarioMaterialLotInput]
  delete: [ConnectScenarioMaterialLotInput]
  disconnect: [ConnectScenarioMaterialLotInput]
}

input UpdateManyScenarioMaterialPropertiesInput {
  connect: [ConnectScenarioMaterialPropertyInput]
  create: [CreateScenarioMaterialPropertyInput]
  upsert: [UpsertScenarioMaterialPropertyInput]
  update: [UpdateScenarioMaterialPropertyInput]
  delete: [ConnectScenarioMaterialPropertyInput]
  disconnect: [ConnectScenarioMaterialPropertyInput]
}

input UpdateManyScenarioOpenPurchaseOrdersInput {
  connect: [ConnectScenarioOpenPurchaseOrderInput]
  create: [CreateScenarioOpenPurchaseOrderInput]
  upsert: [UpsertScenarioOpenPurchaseOrderInput]
  update: [UpdateScenarioOpenPurchaseOrderInput]
  delete: [ConnectScenarioOpenPurchaseOrderInput]
  disconnect: [ConnectScenarioOpenPurchaseOrderInput]
}

input UpdateManyScenarioOperationalLocationsInput {
  connect: [ConnectScenarioOperationalLocationInput]
  create: [CreateScenarioOperationalLocationInput]
  upsert: [UpsertScenarioOperationalLocationInput]
  update: [UpdateScenarioOperationalLocationInput]
  delete: [ConnectScenarioOperationalLocationInput]
  disconnect: [ConnectScenarioOperationalLocationInput]
}

input UpdateManyScenarioOperationsDefinitionClassesInput {
  connect: [ConnectScenarioOperationsDefinitionClassInput]
  create: [CreateScenarioOperationsDefinitionClassInput]
  upsert: [UpsertScenarioOperationsDefinitionClassInput]
  update: [UpdateScenarioOperationsDefinitionClassInput]
  delete: [ConnectScenarioOperationsDefinitionClassInput]
  disconnect: [ConnectScenarioOperationsDefinitionClassInput]
}

input UpdateManyScenarioOperationsDefinitionsInput {
  connect: [ConnectScenarioOperationsDefinitionInput]
  create: [CreateScenarioOperationsDefinitionInput]
  upsert: [UpsertScenarioOperationsDefinitionInput]
  update: [UpdateScenarioOperationsDefinitionInput]
  delete: [ConnectScenarioOperationsDefinitionInput]
  disconnect: [ConnectScenarioOperationsDefinitionInput]
}

input UpdateManyScenarioOperationsRequestEquipmentsInput {
  connect: [ConnectScenarioOperationsRequestEquipmentInput]
  create: [CreateScenarioOperationsRequestEquipmentInput]
  upsert: [UpsertScenarioOperationsRequestEquipmentInput]
  update: [UpdateScenarioOperationsRequestEquipmentInput]
  delete: [ConnectScenarioOperationsRequestEquipmentInput]
  disconnect: [ConnectScenarioOperationsRequestEquipmentInput]
}

input UpdateManyScenarioOperationsRequestPersonnelsInput {
  connect: [ConnectScenarioOperationsRequestPersonnelInput]
  create: [CreateScenarioOperationsRequestPersonnelInput]
  upsert: [UpsertScenarioOperationsRequestPersonnelInput]
  update: [UpdateScenarioOperationsRequestPersonnelInput]
  delete: [ConnectScenarioOperationsRequestPersonnelInput]
  disconnect: [ConnectScenarioOperationsRequestPersonnelInput]
}

input UpdateManyScenarioOperationsRequestProfilesInput {
  connect: [ConnectScenarioOperationsRequestProfileInput]
  create: [CreateScenarioOperationsRequestProfileInput]
  upsert: [UpsertScenarioOperationsRequestProfileInput]
  update: [UpdateScenarioOperationsRequestProfileInput]
  delete: [ConnectScenarioOperationsRequestProfileInput]
  disconnect: [ConnectScenarioOperationsRequestProfileInput]
}

input UpdateManyScenarioOperationsRequestsInput {
  connect: [ConnectScenarioOperationsRequestInput]
  create: [CreateScenarioOperationsRequestInput]
  upsert: [UpsertScenarioOperationsRequestInput]
  update: [UpdateScenarioOperationsRequestInput]
  delete: [ConnectScenarioOperationsRequestInput]
  disconnect: [ConnectScenarioOperationsRequestInput]
}

input UpdateManyScenarioOperationsSegmentDependenciesInput {
  connect: [ConnectScenarioOperationsSegmentDependencyInput]
  create: [CreateScenarioOperationsSegmentDependencyInput]
  upsert: [UpsertScenarioOperationsSegmentDependencyInput]
  update: [UpdateScenarioOperationsSegmentDependencyInput]
  delete: [ConnectScenarioOperationsSegmentDependencyInput]
  disconnect: [ConnectScenarioOperationsSegmentDependencyInput]
}

input UpdateManyScenarioOperationsSegmentDescendantsInput {
  connect: [ConnectScenarioOperationsSegmentDescendantInput]
  create: [CreateScenarioOperationsSegmentDescendantInput]
  upsert: [UpsertScenarioOperationsSegmentDescendantInput]
  update: [UpdateScenarioOperationsSegmentDescendantInput]
  delete: [ConnectScenarioOperationsSegmentDescendantInput]
  disconnect: [ConnectScenarioOperationsSegmentDescendantInput]
}

input UpdateManyScenarioOperationsSegmentEquipmentSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentEquipmentSpecificationInput]
  create: [CreateScenarioOperationsSegmentEquipmentSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentEquipmentSpecificationInput]
  update: [UpdateScenarioOperationsSegmentEquipmentSpecificationInput]
  delete: [ConnectScenarioOperationsSegmentEquipmentSpecificationInput]
  disconnect: [ConnectScenarioOperationsSegmentEquipmentSpecificationInput]
}

input UpdateManyScenarioOperationsSegmentMaterialSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentMaterialSpecificationInput]
  create: [CreateScenarioOperationsSegmentMaterialSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentMaterialSpecificationInput]
  update: [UpdateScenarioOperationsSegmentMaterialSpecificationInput]
  delete: [ConnectScenarioOperationsSegmentMaterialSpecificationInput]
  disconnect: [ConnectScenarioOperationsSegmentMaterialSpecificationInput]
}

input UpdateManyScenarioOperationsSegmentPersonnelSpecificationsInput {
  connect: [ConnectScenarioOperationsSegmentPersonnelSpecificationInput]
  create: [CreateScenarioOperationsSegmentPersonnelSpecificationInput]
  upsert: [UpsertScenarioOperationsSegmentPersonnelSpecificationInput]
  update: [UpdateScenarioOperationsSegmentPersonnelSpecificationInput]
  delete: [ConnectScenarioOperationsSegmentPersonnelSpecificationInput]
  disconnect: [ConnectScenarioOperationsSegmentPersonnelSpecificationInput]
}

input UpdateManyScenarioOperationsSegmentPropertiesInput {
  connect: [ConnectScenarioOperationsSegmentPropertyInput]
  create: [CreateScenarioOperationsSegmentPropertyInput]
  upsert: [UpsertScenarioOperationsSegmentPropertyInput]
  update: [UpdateScenarioOperationsSegmentPropertyInput]
  delete: [ConnectScenarioOperationsSegmentPropertyInput]
  disconnect: [ConnectScenarioOperationsSegmentPropertyInput]
}

input UpdateManyScenarioOperationsSegmentsInput {
  connect: [ConnectScenarioOperationsSegmentInput]
  create: [CreateScenarioOperationsSegmentInput]
  upsert: [UpsertScenarioOperationsSegmentInput]
  update: [UpdateScenarioOperationsSegmentInput]
  delete: [ConnectScenarioOperationsSegmentInput]
  disconnect: [ConnectScenarioOperationsSegmentInput]
}

input UpdateManyScenarioOptimisationHierarchiesInput {
  connect: [ConnectScenarioOptimisationHierarchyInput]
  create: [CreateScenarioOptimisationHierarchyInput]
  upsert: [UpsertScenarioOptimisationHierarchyInput]
  update: [UpdateScenarioOptimisationHierarchyInput]
  delete: [ConnectScenarioOptimisationHierarchyInput]
  disconnect: [ConnectScenarioOptimisationHierarchyInput]
}

input UpdateManyScenarioOptimisationHierarchyAttributesInput {
  connect: [ConnectScenarioOptimisationHierarchyAttributeInput]
  create: [CreateScenarioOptimisationHierarchyAttributeInput]
  upsert: [UpsertScenarioOptimisationHierarchyAttributeInput]
  update: [UpdateScenarioOptimisationHierarchyAttributeInput]
  delete: [ConnectScenarioOptimisationHierarchyAttributeInput]
  disconnect: [ConnectScenarioOptimisationHierarchyAttributeInput]
}

input UpdateManyScenarioOptimisationPreferredSequenceItemsInput {
  connect: [ConnectScenarioOptimisationPreferredSequenceItemInput]
  create: [CreateScenarioOptimisationPreferredSequenceItemInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceItemInput]
  update: [UpdateScenarioOptimisationPreferredSequenceItemInput]
  delete: [ConnectScenarioOptimisationPreferredSequenceItemInput]
  disconnect: [ConnectScenarioOptimisationPreferredSequenceItemInput]
}

input UpdateManyScenarioOptimisationPreferredSequencesInput {
  connect: [ConnectScenarioOptimisationPreferredSequenceInput]
  create: [CreateScenarioOptimisationPreferredSequenceInput]
  upsert: [UpsertScenarioOptimisationPreferredSequenceInput]
  update: [UpdateScenarioOptimisationPreferredSequenceInput]
  delete: [ConnectScenarioOptimisationPreferredSequenceInput]
  disconnect: [ConnectScenarioOptimisationPreferredSequenceInput]
}

input UpdateManyScenarioOptimisationPropertiesInput {
  connect: [ConnectScenarioOptimisationPropertyInput]
  create: [CreateScenarioOptimisationPropertyInput]
  upsert: [UpsertScenarioOptimisationPropertyInput]
  update: [UpdateScenarioOptimisationPropertyInput]
  delete: [ConnectScenarioOptimisationPropertyInput]
  disconnect: [ConnectScenarioOptimisationPropertyInput]
}

input UpdateManyScenarioOptimisationPropertyValuesInput {
  connect: [ConnectScenarioOptimisationPropertyValueInput]
  create: [CreateScenarioOptimisationPropertyValueInput]
  upsert: [UpsertScenarioOptimisationPropertyValueInput]
  update: [UpdateScenarioOptimisationPropertyValueInput]
  delete: [ConnectScenarioOptimisationPropertyValueInput]
  disconnect: [ConnectScenarioOptimisationPropertyValueInput]
}

input UpdateManyScenarioOptimizationHierarchiesInput {
  connect: [ConnectScenarioOptimizationHierarchyInput]
  create: [CreateScenarioOptimizationHierarchyInput]
  upsert: [UpsertScenarioOptimizationHierarchyInput]
  update: [UpdateScenarioOptimizationHierarchyInput]
  delete: [ConnectScenarioOptimizationHierarchyInput]
  disconnect: [ConnectScenarioOptimizationHierarchyInput]
}

input UpdateManyScenarioOrderItemsInput {
  connect: [ConnectScenarioOrderItemInput]
  create: [CreateScenarioOrderItemInput]
  upsert: [UpsertScenarioOrderItemInput]
  update: [UpdateScenarioOrderItemInput]
  delete: [ConnectScenarioOrderItemInput]
  disconnect: [ConnectScenarioOrderItemInput]
}

input UpdateManyScenarioOrderPropertiesInput {
  connect: [ConnectScenarioOrderPropertyInput]
  create: [CreateScenarioOrderPropertyInput]
  upsert: [UpsertScenarioOrderPropertyInput]
  update: [UpdateScenarioOrderPropertyInput]
  delete: [ConnectScenarioOrderPropertyInput]
  disconnect: [ConnectScenarioOrderPropertyInput]
}

input UpdateManyScenarioOrdersInput {
  connect: [ConnectScenarioOrderInput]
  create: [CreateScenarioOrderInput]
  upsert: [UpsertScenarioOrderInput]
  update: [UpdateScenarioOrderInput]
  delete: [ConnectScenarioOrderInput]
  disconnect: [ConnectScenarioOrderInput]
}

input UpdateManyScenarioOrderStatusesInput {
  connect: [ConnectScenarioOrderStatusInput]
  create: [CreateScenarioOrderStatusInput]
  upsert: [UpsertScenarioOrderStatusInput]
  update: [UpdateScenarioOrderStatusInput]
  delete: [ConnectScenarioOrderStatusInput]
  disconnect: [ConnectScenarioOrderStatusInput]
}

input UpdateManyScenarioPersonDowntimePeriodsInput {
  connect: [ConnectScenarioPersonDowntimePeriodInput]
  create: [CreateScenarioPersonDowntimePeriodInput]
  upsert: [UpsertScenarioPersonDowntimePeriodInput]
  update: [UpdateScenarioPersonDowntimePeriodInput]
  delete: [ConnectScenarioPersonDowntimePeriodInput]
  disconnect: [ConnectScenarioPersonDowntimePeriodInput]
}

input UpdateManyScenarioPersonnelCapabilitiesInput {
  connect: [ConnectScenarioPersonnelCapabilityInput]
  create: [CreateScenarioPersonnelCapabilityInput]
  upsert: [UpsertScenarioPersonnelCapabilityInput]
  update: [UpdateScenarioPersonnelCapabilityInput]
  delete: [ConnectScenarioPersonnelCapabilityInput]
  disconnect: [ConnectScenarioPersonnelCapabilityInput]
}

input UpdateManyScenarioPersonnelClassesInput {
  connect: [ConnectScenarioPersonnelClassInput]
  create: [CreateScenarioPersonnelClassInput]
  upsert: [UpsertScenarioPersonnelClassInput]
  update: [UpdateScenarioPersonnelClassInput]
  delete: [ConnectScenarioPersonnelClassInput]
  disconnect: [ConnectScenarioPersonnelClassInput]
}

input UpdateManyScenarioPersonnelClassPersonMembersInput {
  connect: [ConnectScenarioPersonnelClassPersonMemberInput]
  create: [CreateScenarioPersonnelClassPersonMemberInput]
  upsert: [UpsertScenarioPersonnelClassPersonMemberInput]
  update: [UpdateScenarioPersonnelClassPersonMemberInput]
  delete: [ConnectScenarioPersonnelClassPersonMemberInput]
  disconnect: [ConnectScenarioPersonnelClassPersonMemberInput]
}

input UpdateManyScenarioPersonnelClassPropertiesInput {
  connect: [ConnectScenarioPersonnelClassPropertyInput]
  create: [CreateScenarioPersonnelClassPropertyInput]
  upsert: [UpsertScenarioPersonnelClassPropertyInput]
  update: [UpdateScenarioPersonnelClassPropertyInput]
  delete: [ConnectScenarioPersonnelClassPropertyInput]
  disconnect: [ConnectScenarioPersonnelClassPropertyInput]
}

input UpdateManyScenarioPersonnelPositionPersonMembersInput {
  connect: [ConnectScenarioPersonnelPositionPersonMemberInput]
  create: [CreateScenarioPersonnelPositionPersonMemberInput]
  upsert: [UpsertScenarioPersonnelPositionPersonMemberInput]
  update: [UpdateScenarioPersonnelPositionPersonMemberInput]
  delete: [ConnectScenarioPersonnelPositionPersonMemberInput]
  disconnect: [ConnectScenarioPersonnelPositionPersonMemberInput]
}

input UpdateManyScenarioPersonnelPositionPropertiesInput {
  connect: [ConnectScenarioPersonnelPositionPropertyInput]
  create: [CreateScenarioPersonnelPositionPropertyInput]
  upsert: [UpsertScenarioPersonnelPositionPropertyInput]
  update: [UpdateScenarioPersonnelPositionPropertyInput]
  delete: [ConnectScenarioPersonnelPositionPropertyInput]
  disconnect: [ConnectScenarioPersonnelPositionPropertyInput]
}

input UpdateManyScenarioPersonnelPositionsInput {
  connect: [ConnectScenarioPersonnelPositionInput]
  create: [CreateScenarioPersonnelPositionInput]
  upsert: [UpsertScenarioPersonnelPositionInput]
  update: [UpdateScenarioPersonnelPositionInput]
  delete: [ConnectScenarioPersonnelPositionInput]
  disconnect: [ConnectScenarioPersonnelPositionInput]
}

input UpdateManyScenarioPersonPropertiesInput {
  connect: [ConnectScenarioPersonPropertyInput]
  create: [CreateScenarioPersonPropertyInput]
  upsert: [UpsertScenarioPersonPropertyInput]
  update: [UpdateScenarioPersonPropertyInput]
  delete: [ConnectScenarioPersonPropertyInput]
  disconnect: [ConnectScenarioPersonPropertyInput]
}

input UpdateManyScenarioPersonsInput {
  connect: [ConnectScenarioPersonInput]
  create: [CreateScenarioPersonInput]
  upsert: [UpsertScenarioPersonInput]
  update: [UpdateScenarioPersonInput]
  delete: [ConnectScenarioPersonInput]
  disconnect: [ConnectScenarioPersonInput]
}

input UpdateManyScenarioSegmentRequirementDescendantsInput {
  connect: [ConnectScenarioSegmentRequirementDescendantInput]
  create: [CreateScenarioSegmentRequirementDescendantInput]
  upsert: [UpsertScenarioSegmentRequirementDescendantInput]
  update: [UpdateScenarioSegmentRequirementDescendantInput]
  delete: [ConnectScenarioSegmentRequirementDescendantInput]
  disconnect: [ConnectScenarioSegmentRequirementDescendantInput]
}

input UpdateManyScenarioSegmentRequirementEquipmentRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementEquipmentRequirementInput]
  create: [CreateScenarioSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementEquipmentRequirementInput]
  update: [UpdateScenarioSegmentRequirementEquipmentRequirementInput]
  delete: [ConnectScenarioSegmentRequirementEquipmentRequirementInput]
  disconnect: [ConnectScenarioSegmentRequirementEquipmentRequirementInput]
}

input UpdateManyScenarioSegmentRequirementMaterialRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementMaterialRequirementInput]
  create: [CreateScenarioSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementMaterialRequirementInput]
  update: [UpdateScenarioSegmentRequirementMaterialRequirementInput]
  delete: [ConnectScenarioSegmentRequirementMaterialRequirementInput]
  disconnect: [ConnectScenarioSegmentRequirementMaterialRequirementInput]
}

input UpdateManyScenarioSegmentRequirementPersonnelRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementPersonnelRequirementInput]
  create: [CreateScenarioSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementPersonnelRequirementInput]
  update: [UpdateScenarioSegmentRequirementPersonnelRequirementInput]
  delete: [ConnectScenarioSegmentRequirementPersonnelRequirementInput]
  disconnect: [ConnectScenarioSegmentRequirementPersonnelRequirementInput]
}

input UpdateManyScenarioSegmentRequirementPropertiesInput {
  connect: [ConnectScenarioSegmentRequirementPropertyInput]
  create: [CreateScenarioSegmentRequirementPropertyInput]
  upsert: [UpsertScenarioSegmentRequirementPropertyInput]
  update: [UpdateScenarioSegmentRequirementPropertyInput]
  delete: [ConnectScenarioSegmentRequirementPropertyInput]
  disconnect: [ConnectScenarioSegmentRequirementPropertyInput]
}

input UpdateManyScenarioSegmentRequirementsInput {
  connect: [ConnectScenarioSegmentRequirementInput]
  create: [CreateScenarioSegmentRequirementInput]
  upsert: [UpsertScenarioSegmentRequirementInput]
  update: [UpdateScenarioSegmentRequirementInput]
  delete: [ConnectScenarioSegmentRequirementInput]
  disconnect: [ConnectScenarioSegmentRequirementInput]
}

input UpdateManyScenarioTimePeriodsInput {
  connect: [ConnectScenarioTimePeriodInput]
  create: [CreateScenarioTimePeriodInput]
  upsert: [UpsertScenarioTimePeriodInput]
  update: [UpdateScenarioTimePeriodInput]
  delete: [ConnectScenarioTimePeriodInput]
  disconnect: [ConnectScenarioTimePeriodInput]
}

input UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  update: [UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput]
  delete: [FindSegmentRequirementMaterialRequirementInput]
  disconnect: [FindSegmentRequirementMaterialRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput]
  create: [CreateSegmentRequirementSegmentRequirementDescendantAscendantInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementDescendantAscendantInput]
  update: [UpdateSegmentRequirementSegmentRequirementDescendantAscendantInput]
  delete: [ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput]
  disconnect: [ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput]
}

input UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput]
  create: [CreateSegmentRequirementSegmentRequirementDescendantDescendantInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementDescendantDescendantInput]
  update: [UpdateSegmentRequirementSegmentRequirementDescendantDescendantInput]
  delete: [ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput]
  disconnect: [ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput]
}

input UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput {
  connect: [FindSegmentRequirementEquipmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInput]
  delete: [FindSegmentRequirementEquipmentRequirementInput]
  disconnect: [FindSegmentRequirementEquipmentRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput {
  connect: [FindSegmentRequirementMaterialRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementMaterialRequirementInput]
  delete: [FindSegmentRequirementMaterialRequirementInput]
  disconnect: [FindSegmentRequirementMaterialRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput {
  connect: [FindSegmentRequirementPersonnelRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInput]
  delete: [FindSegmentRequirementPersonnelRequirementInput]
  disconnect: [FindSegmentRequirementPersonnelRequirementInput]
}

input UpdateManySegmentRequirementSegmentRequirementPropertiesInput {
  connect: [ConnectSegmentRequirementSegmentRequirementPropertyInput]
  create: [CreateSegmentRequirementSegmentRequirementPropertyInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementPropertyInput]
  update: [UpdateSegmentRequirementSegmentRequirementPropertyInput]
  delete: [ConnectSegmentRequirementSegmentRequirementPropertyInput]
  disconnect: [ConnectSegmentRequirementSegmentRequirementPropertyInput]
}

input UpdateManySegmentRequirementSegmentRequirementsInput {
  connect: [ConnectSegmentRequirementSegmentRequirementInput]
  create: [CreateSegmentRequirementSegmentRequirementInput]
  upsert: [UpsertSegmentRequirementSegmentRequirementInput]
  update: [UpdateSegmentRequirementSegmentRequirementInput]
  delete: [ConnectSegmentRequirementSegmentRequirementInput]
  disconnect: [ConnectSegmentRequirementSegmentRequirementInput]
}

input UpdateMaterialDefinitionInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateMaterialDefinitionMaterialLotInput {
  data: UpdateMaterialDefinitionMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateMaterialDefinitionMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialDefinitionMaterialPropertyInput {
  data: UpdateMaterialDefinitionMaterialPropertyInputFields
  where: ConnectMaterialDefinitionMaterialPropertyInput
}

input UpdateMaterialDefinitionMaterialPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateMaterialDefinitionOpenPurchaseOrderInput {
  data: UpdateMaterialDefinitionOpenPurchaseOrderInputFields
  where: FindOpenPurchaseOrderInput
}

input UpdateMaterialDefinitionOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  data: UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields
  where: ConnectMaterialDefinitionOperationsSegmentMaterialSpecificationInput
}

input UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  data: UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialLotInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialLotSegmentRequirementMaterialRequirementInput {
  data: UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateMaterialPropertyInput {
  id: Int
  materialDefinition: UpsertMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOneScenarioScenarioAttributeInput {
  connect: ConnectScenarioScenarioAttributeInput
  create: CreateScenarioScenarioAttributeInput
  upsert: UpsertScenarioScenarioAttributeInput
  update: UpdateScenarioScenarioAttributeInput
}

input UpdateOpenPurchaseOrderInput {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationalLocationInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateOperationalLocationMaterialLotInput {
  data: UpdateOperationalLocationMaterialLotInputFields
  where: FindMaterialLotInput
}

input UpdateOperationalLocationMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields
  where: FindOperationsSegmentEquipmentSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationalLocationOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  data: UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields
  where: FindOperationsSegmentPersonnelSpecificationInput
}

input UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationalLocationSegmentRequirementEquipmentRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationalLocationSegmentRequirementMaterialRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateOperationalLocationSegmentRequirementPersonnelRequirementInput {
  data: UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsDefinitionClassInput {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  operationsType: String
  scenario: UpsertScenarioParentInput
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateOperationsDefinitionClassOperationsDefinitionInput {
  data: UpdateOperationsDefinitionClassOperationsDefinitionInputFields
  where: ConnectOperationsDefinitionClassOperationsDefinitionInput
}

input UpdateOperationsDefinitionClassOperationsDefinitionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: UpsertScenarioParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateOperationsDefinitionClassOrderItemInput {
  data: UpdateOperationsDefinitionClassOrderItemInputFields
  where: ConnectOperationsDefinitionClassOrderItemInput
}

input UpdateOperationsDefinitionClassOrderItemInputFields {
  id: Int
  order: UpsertOrderParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOperationsDefinitionInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  scenario: UpsertScenarioParentInput
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateOperationsDefinitionOperationsSegmentInput {
  data: UpdateOperationsDefinitionOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateOperationsDefinitionOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsRequestEquipmentInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: UpdateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateOperationsRequestOperationsRequestEquipmentInput {
  data: UpdateOperationsRequestOperationsRequestEquipmentInputFields
  where: ConnectOperationsRequestOperationsRequestEquipmentInput
}

input UpdateOperationsRequestOperationsRequestEquipmentInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestOperationsRequestPersonnelInput {
  data: UpdateOperationsRequestOperationsRequestPersonnelInputFields
  where: ConnectOperationsRequestOperationsRequestPersonnelInput
}

input UpdateOperationsRequestOperationsRequestPersonnelInputFields {
  id: Int
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestOperationsRequestProfileInput {
  data: UpdateOperationsRequestOperationsRequestProfileInputFields
  where: ConnectOperationsRequestOperationsRequestProfileInput
}

input UpdateOperationsRequestOperationsRequestProfileInputFields {
  id: Int
  orderItem: UpsertOrderItemParentInput
  startupCost: Float
  quantity: Float
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestPersonnelInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestProfileInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  orderItem: UpsertOrderItemParentInput
  startupCost: Float
  quantity: Float
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsRequestSegmentRequirementInput {
  data: UpdateOperationsRequestSegmentRequirementInputFields
  where: ConnectOperationsRequestSegmentRequirementInput
}

input UpdateOperationsRequestSegmentRequirementInputFields {
  id: Int
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: UpsertScenarioParentInput
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateOperationsSegmentChangeoverSetItemInput {
  data: UpdateOperationsSegmentChangeoverSetItemInputFields
  where: FindChangeoverSetItemInput
}

input UpdateOperationsSegmentChangeoverSetItemInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentDependencyInput {
  id: Int
  fromOperationsSegment: UpsertOperationsSegmentParentInput
  toOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentDescendantInput {
  id: Int
  ascendant: UpsertOperationsSegmentParentInput
  descendant: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentEquipmentCapabilityInput {
  data: UpdateOperationsSegmentEquipmentCapabilityInputFields
  where: FindEquipmentCapabilityInput
}

input UpdateOperationsSegmentEquipmentCapabilityInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentEquipmentSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsSegmentMaterialSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields
  where: FindOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentOperationsRequestInput {
  data: UpdateOperationsSegmentOperationsRequestInputFields
  where: ConnectOperationsSegmentOperationsRequestInput
}

input UpdateOperationsSegmentOperationsRequestInputFields {
  id: Int
  scenario: UpsertScenarioParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: UpdateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields
  where: ConnectOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields {
  id: Int
  toOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields
  where: ConnectOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
}

input UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields {
  id: Int
  fromOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentDescendantAscendantInput {
  data: UpdateOperationsSegmentOperationsSegmentDescendantAscendantInputFields
  where: ConnectOperationsSegmentOperationsSegmentDescendantAscendantInput
}

input UpdateOperationsSegmentOperationsSegmentDescendantAscendantInputFields {
  id: Int
  descendant: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentDescendantDescendantInput {
  data: UpdateOperationsSegmentOperationsSegmentDescendantDescendantInputFields
  where: ConnectOperationsSegmentOperationsSegmentDescendantDescendantInput
}

input UpdateOperationsSegmentOperationsSegmentDescendantDescendantInputFields {
  id: Int
  ascendant: UpsertOperationsSegmentParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields
  where: ConnectOperationsSegmentOperationsSegmentEquipmentSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentInput {
  data: UpdateOperationsSegmentOperationsSegmentInputFields
  where: FindOperationsSegmentInput
}

input UpdateOperationsSegmentOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  operationsDefinition: UpsertOperationsDefinitionParentInput
  scenario: UpsertScenarioParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields
  where: ConnectOperationsSegmentOperationsSegmentMaterialSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  scenario: UpsertScenarioParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  data: UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields
  where: ConnectOperationsSegmentOperationsSegmentPersonnelSpecificationInput
}

input UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentOperationsSegmentPropertyInput {
  data: UpdateOperationsSegmentOperationsSegmentPropertyInputFields
  where: ConnectOperationsSegmentOperationsSegmentPropertyInput
}

input UpdateOperationsSegmentOperationsSegmentPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentPersonnelCapabilityInput {
  data: UpdateOperationsSegmentPersonnelCapabilityInputFields
  where: FindPersonnelCapabilityInput
}

input UpdateOperationsSegmentPersonnelCapabilityInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentPersonnelSpecificationInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentPropertyInput {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateOperationsSegmentSegmentRequirementInput {
  data: UpdateOperationsSegmentSegmentRequirementInputFields
  where: FindSegmentRequirementInput
}

input UpdateOperationsSegmentSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: UpsertScenarioParentInput
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateOptimisationHierarchyAttributeInput {
  id: Int
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationProperty: UpsertOptimisationPropertyParentInput
  description: String
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationHierarchyEquipmentInput {
  data: UpdateOptimisationHierarchyEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateOptimisationHierarchyEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateOptimisationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input UpdateOptimisationHierarchyOptimisationHierarchyAttributeInput {
  data: UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields
  where: ConnectOptimisationHierarchyOptimisationHierarchyAttributeInput
}

input UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields {
  id: Int
  optimisationProperty: UpsertOptimisationPropertyParentInput
  description: String
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPreferredSequenceEquipmentInput {
  data: UpdateOptimisationPreferredSequenceEquipmentInputFields
  where: FindEquipmentInput
}

input UpdateOptimisationPreferredSequenceEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  scenario: UpsertScenarioParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateOptimisationPreferredSequenceInput {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  optimisationProperty: UpsertOptimisationPropertyParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPreferredSequenceItemInput {
  id: Int
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  data: UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields
  where: ConnectOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
}

input UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields {
  id: Int
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPropertyInput {
  id: Int
  name: String
  scenario: UpsertScenarioParentInput
  optimisationPropertyValues: UpdateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input UpdateOptimisationPropertyOptimisationHierarchyAttributeInput {
  data: UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields
  where: ConnectOptimisationPropertyOptimisationHierarchyAttributeInput
}

input UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields {
  id: Int
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  description: String
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPropertyOptimisationPreferredSequenceInput {
  data: UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields
  where: ConnectOptimisationPropertyOptimisationPreferredSequenceInput
}

input UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyOptimisationPropertyValueInput {
  data: UpdateOptimisationPropertyOptimisationPropertyValueInputFields
  where: ConnectOptimisationPropertyOptimisationPropertyValueInput
}

input UpdateOptimisationPropertyOptimisationPropertyValueInputFields {
  id: Int
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
  changeoverSetItemsFromValue: UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: UpdateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: UpdateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemFromValueInput {
  data: UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields
  where: ConnectOptimisationPropertyValueChangeoverSetItemFromValueInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: UpsertScenarioParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemToValueInput {
  data: UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields
  where: ConnectOptimisationPropertyValueChangeoverSetItemToValueInput
}

input UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  scenario: UpsertScenarioParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateOptimisationPropertyValueColourSchemeItemInput {
  data: UpdateOptimisationPropertyValueColourSchemeItemInputFields
  where: ConnectOptimisationPropertyValueColourSchemeItemInput
}

input UpdateOptimisationPropertyValueColourSchemeItemInputFields {
  id: Int
  colourScheme: UpsertColourSchemeParentInput
  red: Int
  green: Int
  blue: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPropertyValueInput {
  id: Int
  optimisationProperty: UpsertOptimisationPropertyParentInput
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
  changeoverSetItemsFromValue: UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: UpdateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: UpdateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input UpdateOptimisationPropertyValueMaterialPropertyInput {
  data: UpdateOptimisationPropertyValueMaterialPropertyInputFields
  where: FindMaterialPropertyInput
}

input UpdateOptimisationPropertyValueMaterialPropertyInputFields {
  id: Int
  materialDefinition: UpsertMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  data: UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields
  where: ConnectOptimisationPropertyValueOptimisationPreferredSequenceItemInput
}

input UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields {
  id: Int
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  priority: Int
  scenario: UpsertScenarioParentInput
}

input UpdateOptimizationHierarchyInput {
  id: Int
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
}

input UpdateOrderInput {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: UpsertOrderStatusParentInput
  priority: Int
  scenario: UpsertScenarioParentInput
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdateOrderItemInput {
  id: Int
  order: UpsertOrderParentInput
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOrderItemOperationsRequestProfileInput {
  data: UpdateOrderItemOperationsRequestProfileInputFields
  where: ConnectOrderItemOperationsRequestProfileInput
}

input UpdateOrderItemOperationsRequestProfileInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  startupCost: Float
  quantity: Float
  scenario: UpsertScenarioParentInput
}

input UpdateOrderOrderItemInput {
  data: UpdateOrderOrderItemInputFields
  where: ConnectOrderOrderItemInput
}

input UpdateOrderOrderItemInputFields {
  id: Int
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateOrderOrderPropertyInput {
  data: UpdateOrderOrderPropertyInputFields
  where: ConnectOrderOrderPropertyInput
}

input UpdateOrderOrderPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateOrderPropertyInput {
  id: Int
  order: UpsertOrderParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateOrderStatusInput {
  id: Int
  status: String
  scenario: UpsertScenarioParentInput
  orders: UpdateManyOrderStatusOrdersInput
}

input UpdateOrderStatusOrderInput {
  data: UpdateOrderStatusOrderInputFields
  where: FindOrderInput
}

input UpdateOrderStatusOrderInputFields {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  priority: Int
  scenario: UpsertScenarioParentInput
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdatePersonDowntimePeriodInput {
  id: Int
  person: UpsertPersonParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  scenario: UpsertScenarioParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: UpdateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: UpdateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: UpdateManyPersonPersonDowntimePeriodsInput
}

input UpdatePersonnelCapabilityInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassInput {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: UpdateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInput {
  data: UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields
  where: ConnectPersonnelClassOperationsSegmentPersonnelSpecificationInput
}

input UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassPersonMemberInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassPersonnelCapabilityInput {
  data: UpdatePersonnelClassPersonnelCapabilityInputFields
  where: FindPersonnelCapabilityInput
}

input UpdatePersonnelClassPersonnelCapabilityInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassPersonnelClassPersonMemberInput {
  data: UpdatePersonnelClassPersonnelClassPersonMemberInputFields
  where: ConnectPersonnelClassPersonnelClassPersonMemberInput
}

input UpdatePersonnelClassPersonnelClassPersonMemberInputFields {
  id: Int
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassPersonnelClassPropertyInput {
  data: UpdatePersonnelClassPersonnelClassPropertyInputFields
  where: ConnectPersonnelClassPersonnelClassPropertyInput
}

input UpdatePersonnelClassPersonnelClassPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassPersonnelPositionInput {
  data: UpdatePersonnelClassPersonnelPositionInputFields
  where: FindPersonnelPositionInput
}

input UpdatePersonnelClassPersonnelPositionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelPositionPersonMembers: UpdateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdatePersonnelClassPropertyInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelClassSegmentRequirementPersonnelRequirementInput {
  data: UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelPositionInput {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  scenario: UpsertScenarioParentInput
  personnelPositionPersonMembers: UpdateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdatePersonnelPositionPersonMemberInput {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelPositionPersonnelPositionPersonMemberInput {
  data: UpdatePersonnelPositionPersonnelPositionPersonMemberInputFields
  where: ConnectPersonnelPositionPersonnelPositionPersonMemberInput
}

input UpdatePersonnelPositionPersonnelPositionPersonMemberInputFields {
  id: Int
  person: UpsertPersonParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelPositionPersonnelPositionPropertyInput {
  data: UpdatePersonnelPositionPersonnelPositionPropertyInputFields
  where: ConnectPersonnelPositionPersonnelPositionPropertyInput
}

input UpdatePersonnelPositionPersonnelPositionPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonnelPositionPropertyInput {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonOperationsRequestPersonnelInput {
  data: UpdatePersonOperationsRequestPersonnelInputFields
  where: ConnectPersonOperationsRequestPersonnelInput
}

input UpdatePersonOperationsRequestPersonnelInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonOperationsSegmentPersonnelSpecificationInput {
  data: UpdatePersonOperationsSegmentPersonnelSpecificationInputFields
  where: ConnectPersonOperationsSegmentPersonnelSpecificationInput
}

input UpdatePersonOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonPersonDowntimePeriodInput {
  data: UpdatePersonPersonDowntimePeriodInputFields
  where: ConnectPersonPersonDowntimePeriodInput
}

input UpdatePersonPersonDowntimePeriodInputFields {
  id: Int
  downtimePeriod: UpsertDowntimePeriodParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonPersonnelClassPersonMemberInput {
  data: UpdatePersonPersonnelClassPersonMemberInputFields
  where: ConnectPersonPersonnelClassPersonMemberInput
}

input UpdatePersonPersonnelClassPersonMemberInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonPersonnelPositionPersonMemberInput {
  data: UpdatePersonPersonnelPositionPersonMemberInputFields
  where: ConnectPersonPersonnelPositionPersonMemberInput
}

input UpdatePersonPersonnelPositionPersonMemberInputFields {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  scenario: UpsertScenarioParentInput
}

input UpdatePersonPersonPropertyInput {
  data: UpdatePersonPersonPropertyInputFields
  where: ConnectPersonPersonPropertyInput
}

input UpdatePersonPersonPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonPropertyInput {
  id: Int
  person: UpsertPersonParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdatePersonSegmentRequirementPersonnelRequirementInput {
  data: UpdatePersonSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdatePersonSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdateScenarioAttributeInput {
  id: Int
  scenario: UpsertScenarioParentInput
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioAvailabilityTemplateInput {
  data: UpdateScenarioAvailabilityTemplateInputFields
  where: ConnectScenarioAvailabilityTemplateInput
}

input UpdateScenarioAvailabilityTemplateInputFields {
  id: Int
  name: String
  description: String
  availabilityTemplateItems: UpdateManyAvailabilityTemplateAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemsInput
}

input UpdateScenarioAvailabilityTemplateItemInput {
  data: UpdateScenarioAvailabilityTemplateItemInputFields
  where: ConnectScenarioAvailabilityTemplateItemInput
}

input UpdateScenarioAvailabilityTemplateItemInputFields {
  id: Int
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
  dayOfTheWeek: Int
  startTime: String
  endTime: String
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetInput {
  data: UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields
  where: ConnectScenarioCalendarisedAvailabilityTemplateSetInput
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields {
  id: Int
  name: String
  calendarisedAvailabilityTemplateSetItems: UpdateManyCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemsInput
  equipments: UpdateManyCalendarisedAvailabilityTemplateSetEquipmentsInput
  persons: UpdateManyCalendarisedAvailabilityTemplateSetPersonsInput
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetItemInput {
  data: UpdateScenarioCalendarisedAvailabilityTemplateSetItemInputFields
  where: ConnectScenarioCalendarisedAvailabilityTemplateSetItemInput
}

input UpdateScenarioCalendarisedAvailabilityTemplateSetItemInputFields {
  id: Int
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  startTime: String
  endTime: String
  availabilityTemplate: UpsertAvailabilityTemplateParentInput
}

input UpdateScenarioCalendarisedThroughputSetInput {
  data: UpdateScenarioCalendarisedThroughputSetInputFields
  where: ConnectScenarioCalendarisedThroughputSetInput
}

input UpdateScenarioCalendarisedThroughputSetInputFields {
  id: Int
  name: String
  calendarisedThroughputSetItems: UpdateManyCalendarisedThroughputSetCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyCalendarisedThroughputSetOperationsSegmentMaterialSpecificationsInput
}

input UpdateScenarioCalendarisedThroughputSetItemInput {
  data: UpdateScenarioCalendarisedThroughputSetItemInputFields
  where: ConnectScenarioCalendarisedThroughputSetItemInput
}

input UpdateScenarioCalendarisedThroughputSetItemInputFields {
  id: Int
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  unitOfTime: String
}

input UpdateScenarioChangeoverSetInput {
  data: UpdateScenarioChangeoverSetInputFields
  where: ConnectScenarioChangeoverSetInput
}

input UpdateScenarioChangeoverSetInputFields {
  id: Int
  name: String
  description: String
  defaultTime: Float
  changeoverSetItems: UpdateManyChangeoverSetChangeoverSetItemsInput
  equipments: UpdateManyChangeoverSetEquipmentsInput
}

input UpdateScenarioChangeoverSetItemInput {
  data: UpdateScenarioChangeoverSetItemInputFields
  where: ConnectScenarioChangeoverSetItemInput
}

input UpdateScenarioChangeoverSetItemInputFields {
  id: Int
  changeoverSet: UpsertChangeoverSetParentInput
  fromValue: UpsertOptimisationPropertyValueParentInput
  toValue: UpsertOptimisationPropertyValueParentInput
  fromValueString: String
  toValueString: String
  property: String
  time: Float
  operationsSegment: UpsertOperationsSegmentParentInput
}

input UpdateScenarioColourSchemeInput {
  data: UpdateScenarioColourSchemeInputFields
  where: ConnectScenarioColourSchemeInput
}

input UpdateScenarioColourSchemeInputFields {
  id: Int
  name: String
  colourSchemeItems: UpdateManyColourSchemeColourSchemeItemsInput
}

input UpdateScenarioColourSchemeItemInput {
  data: UpdateScenarioColourSchemeItemInputFields
  where: ConnectScenarioColourSchemeItemInput
}

input UpdateScenarioColourSchemeItemInputFields {
  id: Int
  colourScheme: UpsertColourSchemeParentInput
  propertyValue: UpsertOptimisationPropertyValueParentInput
  red: Int
  green: Int
  blue: Int
}

input UpdateScenarioConfigurableApplicationParameterInput {
  data: UpdateScenarioConfigurableApplicationParameterInputFields
  where: ConnectScenarioConfigurableApplicationParameterInput
}

input UpdateScenarioConfigurableApplicationParameterInputFields {
  id: Int
  name: String
  dataType: String
  valueAsString: String
}

input UpdateScenarioDowntimePeriodInput {
  data: UpdateScenarioDowntimePeriodInputFields
  where: ConnectScenarioDowntimePeriodInput
}

input UpdateScenarioDowntimePeriodInputFields {
  id: Int
  externalId: String
  description: String
  startTime: String
  endTime: String
  percentageAvailability: Float
  equipmentDowntimePeriods: UpdateManyDowntimePeriodEquipmentDowntimePeriodsInput
  personDowntimePeriods: UpdateManyDowntimePeriodPersonDowntimePeriodsInput
}

input UpdateScenarioEquipmentCapabilityInput {
  data: UpdateScenarioEquipmentCapabilityInputFields
  where: ConnectScenarioEquipmentCapabilityInput
}

input UpdateScenarioEquipmentCapabilityInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateScenarioEquipmentChildInput {
  data: UpdateScenarioEquipmentChildInputFields
  where: ConnectScenarioEquipmentChildInput
}

input UpdateScenarioEquipmentChildInputFields {
  id: Int
  parent: UpsertEquipmentParentInput
  child: UpsertEquipmentParentInput
}

input UpdateScenarioEquipmentClassEquipmentMemberInput {
  data: UpdateScenarioEquipmentClassEquipmentMemberInputFields
  where: ConnectScenarioEquipmentClassEquipmentMemberInput
}

input UpdateScenarioEquipmentClassEquipmentMemberInputFields {
  id: Int
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
}

input UpdateScenarioEquipmentClassInput {
  data: UpdateScenarioEquipmentClassInputFields
  where: ConnectScenarioEquipmentClassInput
}

input UpdateScenarioEquipmentClassInputFields {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  equipmentClassEquipmentMembers: UpdateManyEquipmentClassEquipmentClassEquipmentMembersInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentClassOperationsSegmentEquipmentSpecificationsInput
}

input UpdateScenarioEquipmentDescendantInput {
  data: UpdateScenarioEquipmentDescendantInputFields
  where: ConnectScenarioEquipmentDescendantInput
}

input UpdateScenarioEquipmentDescendantInputFields {
  id: Int
  ascendant: UpsertEquipmentParentInput
  descendant: UpsertEquipmentParentInput
}

input UpdateScenarioEquipmentDowntimePeriodInput {
  data: UpdateScenarioEquipmentDowntimePeriodInputFields
  where: ConnectScenarioEquipmentDowntimePeriodInput
}

input UpdateScenarioEquipmentDowntimePeriodInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
}

input UpdateScenarioEquipmentInput {
  data: UpdateScenarioEquipmentInputFields
  where: ConnectScenarioEquipmentInput
}

input UpdateScenarioEquipmentInputFields {
  id: Int
  externalId: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  equipmentLevel: String
  description: String
  changeoverSet: UpsertChangeoverSetParentInput
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  hierarchyScopes: UpdateManyEquipmentHierarchyScopesInput
  equipmentChildrenParent: UpdateManyEquipmentEquipmentChildParentsInput
  equipmentChildrenChild: UpdateManyEquipmentEquipmentChildChildrenInput
  equipmentDescendantsAscendant: UpdateManyEquipmentEquipmentDescendantAscendantsInput
  equipmentDescendantsDescendant: UpdateManyEquipmentEquipmentDescendantDescendantsInput
  equipmentProperties: UpdateManyEquipmentEquipmentPropertiesInput
  equipmentClassEquipmentMembers: UpdateManyEquipmentEquipmentClassEquipmentMembersInput
  equipmentCapabilities: UpdateManyEquipmentEquipmentCapabilitiesInput
  operationsSegmentEquipmentSpecifications: UpdateManyEquipmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequestEquipments: UpdateManyEquipmentOperationsRequestEquipmentsInput
  segmentRequirementEquipmentRequirements: UpdateManyEquipmentSegmentRequirementEquipmentRequirementsInput
  equipmentDowntimePeriods: UpdateManyEquipmentEquipmentDowntimePeriodsInput
}

input UpdateScenarioEquipmentPropertyInput {
  data: UpdateScenarioEquipmentPropertyInputFields
  where: ConnectScenarioEquipmentPropertyInput
}

input UpdateScenarioEquipmentPropertyInputFields {
  id: Int
  equipment: UpsertEquipmentParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioHierarchyScopeDescendantInput {
  data: UpdateScenarioHierarchyScopeDescendantInputFields
  where: ConnectScenarioHierarchyScopeDescendantInput
}

input UpdateScenarioHierarchyScopeDescendantInputFields {
  id: Int
  ascendant: UpsertHierarchyScopeParentInput
  descendant: UpsertHierarchyScopeParentInput
}

input UpdateScenarioHierarchyScopeInput {
  data: UpdateScenarioHierarchyScopeInputFields
  where: ConnectScenarioHierarchyScopeInput
}

input UpdateScenarioHierarchyScopeInputFields {
  id: Int
  externalId: String
  equipment: UpsertEquipmentParentInput
  parent: UpsertHierarchyScopeParentInput
  hierarchyScopes: UpdateManyHierarchyScopeHierarchyScopesInput
  equipments: UpdateManyHierarchyScopeEquipmentsInput
  hierarchyScopeDescendantsAscendant: UpdateManyHierarchyScopeHierarchyScopeDescendantAscendantsInput
  hierarchyScopeDescendantsDescendant: UpdateManyHierarchyScopeHierarchyScopeDescendantDescendantsInput
  equipmentClasses: UpdateManyHierarchyScopeEquipmentClassesInput
  materialDefinitions: UpdateManyHierarchyScopeMaterialDefinitionsInput
  personnelClasses: UpdateManyHierarchyScopePersonnelClassesInput
  personnelPositions: UpdateManyHierarchyScopePersonnelPositionsInput
  persons: UpdateManyHierarchyScopePersonsInput
  operationsDefinitionClasses: UpdateManyHierarchyScopeOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyHierarchyScopeOperationsDefinitionsInput
  operationsSegments: UpdateManyHierarchyScopeOperationsSegmentsInput
  equipmentCapabilities: UpdateManyHierarchyScopeEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyHierarchyScopePersonnelCapabilitiesInput
  operationalLocations: UpdateManyHierarchyScopeOperationalLocationsInput
  operationsSegmentMaterialSpecifications: UpdateManyHierarchyScopeOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyHierarchyScopeOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyHierarchyScopeOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyHierarchyScopeOperationsRequestsInput
  segmentRequirements: UpdateManyHierarchyScopeSegmentRequirementsInput
  materialLots: UpdateManyHierarchyScopeMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyHierarchyScopeSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyHierarchyScopeSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyHierarchyScopeSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyHierarchyScopeOpenPurchaseOrdersInput
}

input UpdateScenarioInput {
  id: Int
  name: String
  description: String
  startDate: String
  status: String
  updatedAt: String
  createdAt: String
  hierarchyScopes: UpdateManyScenarioHierarchyScopesInput
  optimisationProperties: UpdateManyScenarioOptimisationPropertiesInput
  optimisationPropertyValues: UpdateManyScenarioOptimisationPropertyValuesInput
  changeoverSets: UpdateManyScenarioChangeoverSetsInput
  changeoverSetItems: UpdateManyScenarioChangeoverSetItemsInput
  availabilityTemplates: UpdateManyScenarioAvailabilityTemplatesInput
  availabilityTemplateItems: UpdateManyScenarioAvailabilityTemplateItemsInput
  calendarisedAvailabilityTemplateSets: UpdateManyScenarioCalendarisedAvailabilityTemplateSetsInput
  calendarisedAvailabilityTemplateSetItems: UpdateManyScenarioCalendarisedAvailabilityTemplateSetItemsInput
  optimizationHierarchies: UpdateManyScenarioOptimizationHierarchiesInput
  equipments: UpdateManyScenarioEquipmentsInput
  hierarchyScopeDescendants: UpdateManyScenarioHierarchyScopeDescendantsInput
  equipmentChildren: UpdateManyScenarioEquipmentChildrenInput
  equipmentDescendants: UpdateManyScenarioEquipmentDescendantsInput
  equipmentProperties: UpdateManyScenarioEquipmentPropertiesInput
  equipmentClasses: UpdateManyScenarioEquipmentClassesInput
  equipmentClassEquipmentMembers: UpdateManyScenarioEquipmentClassEquipmentMembersInput
  materialDefinitions: UpdateManyScenarioMaterialDefinitionsInput
  personnelClasses: UpdateManyScenarioPersonnelClassesInput
  personnelClassProperties: UpdateManyScenarioPersonnelClassPropertiesInput
  personnelPositions: UpdateManyScenarioPersonnelPositionsInput
  persons: UpdateManyScenarioPersonsInput
  personProperties: UpdateManyScenarioPersonPropertiesInput
  personnelClassPersonMembers: UpdateManyScenarioPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: UpdateManyScenarioPersonnelPositionPersonMembersInput
  personnelPositionProperties: UpdateManyScenarioPersonnelPositionPropertiesInput
  operationsDefinitionClasses: UpdateManyScenarioOperationsDefinitionClassesInput
  operationsDefinitions: UpdateManyScenarioOperationsDefinitionsInput
  operationsSegments: UpdateManyScenarioOperationsSegmentsInput
  equipmentCapabilities: UpdateManyScenarioEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyScenarioPersonnelCapabilitiesInput
  operationsSegmentDescendants: UpdateManyScenarioOperationsSegmentDescendantsInput
  operationsSegmentProperties: UpdateManyScenarioOperationsSegmentPropertiesInput
  operationsSegmentDependencies: UpdateManyScenarioOperationsSegmentDependenciesInput
  operationalLocations: UpdateManyScenarioOperationalLocationsInput
  calendarisedThroughputSets: UpdateManyScenarioCalendarisedThroughputSetsInput
  calendarisedThroughputSetItems: UpdateManyScenarioCalendarisedThroughputSetItemsInput
  operationsSegmentMaterialSpecifications: UpdateManyScenarioOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyScenarioOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyScenarioOperationsSegmentEquipmentSpecificationsInput
  timePeriods: UpdateManyScenarioTimePeriodsInput
  orderStatuses: UpdateManyScenarioOrderStatusesInput
  orders: UpdateManyScenarioOrdersInput
  orderItems: UpdateManyScenarioOrderItemsInput
  operationsRequests: UpdateManyScenarioOperationsRequestsInput
  operationsRequestPersonnels: UpdateManyScenarioOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyScenarioOperationsRequestEquipmentsInput
  operationsRequestProfiles: UpdateManyScenarioOperationsRequestProfilesInput
  segmentRequirements: UpdateManyScenarioSegmentRequirementsInput
  segmentRequirementDescendants: UpdateManyScenarioSegmentRequirementDescendantsInput
  segmentRequirementProperties: UpdateManyScenarioSegmentRequirementPropertiesInput
  materialLots: UpdateManyScenarioMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyScenarioSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyScenarioSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyScenarioSegmentRequirementEquipmentRequirementsInput
  openPurchaseOrders: UpdateManyScenarioOpenPurchaseOrdersInput
  materialProperties: UpdateManyScenarioMaterialPropertiesInput
  configurableApplicationParameters: UpdateManyScenarioConfigurableApplicationParametersInput
  colourSchemes: UpdateManyScenarioColourSchemesInput
  colourSchemeItems: UpdateManyScenarioColourSchemeItemsInput
  downtimePeriods: UpdateManyScenarioDowntimePeriodsInput
  equipmentDowntimePeriods: UpdateManyScenarioEquipmentDowntimePeriodsInput
  personDowntimePeriods: UpdateManyScenarioPersonDowntimePeriodsInput
  optimisationHierarchies: UpdateManyScenarioOptimisationHierarchiesInput
  optimisationHierarchyAttributes: UpdateManyScenarioOptimisationHierarchyAttributesInput
  scenarioAttribute: UpdateOneScenarioScenarioAttributeInput
  optimisationPreferredSequences: UpdateManyScenarioOptimisationPreferredSequencesInput
  optimisationPreferredSequenceItems: UpdateManyScenarioOptimisationPreferredSequenceItemsInput
  orderProperties: UpdateManyScenarioOrderPropertiesInput
}

input UpdateScenarioMaterialDefinitionInput {
  data: UpdateScenarioMaterialDefinitionInputFields
  where: ConnectScenarioMaterialDefinitionInput
}

input UpdateScenarioMaterialDefinitionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsSegmentMaterialSpecifications: UpdateManyMaterialDefinitionOperationsSegmentMaterialSpecificationsInput
  materialLots: UpdateManyMaterialDefinitionMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyMaterialDefinitionSegmentRequirementMaterialRequirementsInput
  openPurchaseOrders: UpdateManyMaterialDefinitionOpenPurchaseOrdersInput
  materialProperties: UpdateManyMaterialDefinitionMaterialPropertiesInput
}

input UpdateScenarioMaterialLotInput {
  data: UpdateScenarioMaterialLotInputFields
  where: ConnectScenarioMaterialLotInput
}

input UpdateScenarioMaterialLotInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  operationalLocation: UpsertOperationalLocationParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  date: String
  segmentRequirementMaterialRequirements: UpdateManyMaterialLotSegmentRequirementMaterialRequirementsInput
}

input UpdateScenarioMaterialPropertyInput {
  data: UpdateScenarioMaterialPropertyInputFields
  where: ConnectScenarioMaterialPropertyInput
}

input UpdateScenarioMaterialPropertyInputFields {
  id: Int
  materialDefinition: UpsertMaterialDefinitionParentInput
  externalId: String
  value: String
  dataType: String
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
}

input UpdateScenarioOpenPurchaseOrderInput {
  data: UpdateScenarioOpenPurchaseOrderInputFields
  where: ConnectScenarioOpenPurchaseOrderInput
}

input UpdateScenarioOpenPurchaseOrderInputFields {
  id: Int
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  quantity: Int
  quantityUnitOfMeasure: String
  date: String
}

input UpdateScenarioOperationalLocationInput {
  data: UpdateScenarioOperationalLocationInputFields
  where: ConnectScenarioOperationalLocationInput
}

input UpdateScenarioOperationalLocationInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  availabileForUse: String
  operationsSegmentMaterialSpecifications: UpdateManyOperationalLocationOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationalLocationOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationalLocationOperationsSegmentEquipmentSpecificationsInput
  materialLots: UpdateManyOperationalLocationMaterialLotsInput
  segmentRequirementMaterialRequirements: UpdateManyOperationalLocationSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManyOperationalLocationSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManyOperationalLocationSegmentRequirementEquipmentRequirementsInput
}

input UpdateScenarioOperationsDefinitionClassInput {
  data: UpdateScenarioOperationsDefinitionClassInputFields
  where: ConnectScenarioOperationsDefinitionClassInput
}

input UpdateScenarioOperationsDefinitionClassInputFields {
  id: Int
  externalId: String
  description: String
  hierarchyScope: UpsertHierarchyScopeParentInput
  operationsType: String
  operationsDefinitions: UpdateManyOperationsDefinitionClassOperationsDefinitionsInput
  orderItems: UpdateManyOperationsDefinitionClassOrderItemsInput
}

input UpdateScenarioOperationsDefinitionInput {
  data: UpdateScenarioOperationsDefinitionInputFields
  where: ConnectScenarioOperationsDefinitionInput
}

input UpdateScenarioOperationsDefinitionInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  operationsSegments: UpdateManyOperationsDefinitionOperationsSegmentsInput
}

input UpdateScenarioOperationsRequestEquipmentInput {
  data: UpdateScenarioOperationsRequestEquipmentInputFields
  where: ConnectScenarioOperationsRequestEquipmentInput
}

input UpdateScenarioOperationsRequestEquipmentInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  equipment: UpsertEquipmentParentInput
}

input UpdateScenarioOperationsRequestInput {
  data: UpdateScenarioOperationsRequestInputFields
  where: ConnectScenarioOperationsRequestInput
}

input UpdateScenarioOperationsRequestInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  operationsType: String
  requestState: String
  priority: String
  operationsRequestPersonnels: UpdateManyOperationsRequestOperationsRequestPersonnelsInput
  operationsRequestEquipments: UpdateManyOperationsRequestOperationsRequestEquipmentsInput
  operationsRequestProfiles: UpdateManyOperationsRequestOperationsRequestProfilesInput
  segmentRequirements: UpdateManyOperationsRequestSegmentRequirementsInput
}

input UpdateScenarioOperationsRequestPersonnelInput {
  data: UpdateScenarioOperationsRequestPersonnelInputFields
  where: ConnectScenarioOperationsRequestPersonnelInput
}

input UpdateScenarioOperationsRequestPersonnelInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  person: UpsertPersonParentInput
}

input UpdateScenarioOperationsRequestProfileInput {
  data: UpdateScenarioOperationsRequestProfileInputFields
  where: ConnectScenarioOperationsRequestProfileInput
}

input UpdateScenarioOperationsRequestProfileInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  orderItem: UpsertOrderItemParentInput
  startupCost: Float
  quantity: Float
}

input UpdateScenarioOperationsSegmentDependencyInput {
  data: UpdateScenarioOperationsSegmentDependencyInputFields
  where: ConnectScenarioOperationsSegmentDependencyInput
}

input UpdateScenarioOperationsSegmentDependencyInputFields {
  id: Int
  fromOperationsSegment: UpsertOperationsSegmentParentInput
  toOperationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  dependencyType: String
  dependencyFactor: Float
  dependencyFactorUnitOfMeasure: String
}

input UpdateScenarioOperationsSegmentDescendantInput {
  data: UpdateScenarioOperationsSegmentDescendantInputFields
  where: ConnectScenarioOperationsSegmentDescendantInput
}

input UpdateScenarioOperationsSegmentDescendantInputFields {
  id: Int
  ascendant: UpsertOperationsSegmentParentInput
  descendant: UpsertOperationsSegmentParentInput
}

input UpdateScenarioOperationsSegmentEquipmentSpecificationInput {
  data: UpdateScenarioOperationsSegmentEquipmentSpecificationInputFields
  where: ConnectScenarioOperationsSegmentEquipmentSpecificationInput
}

input UpdateScenarioOperationsSegmentEquipmentSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipmentClass: UpsertEquipmentClassParentInput
  equipment: UpsertEquipmentParentInput
  description: String
  equipmentUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateScenarioOperationsSegmentInput {
  data: UpdateScenarioOperationsSegmentInputFields
  where: ConnectScenarioOperationsSegmentInput
}

input UpdateScenarioOperationsSegmentInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  operationsType: String
  version: String
  duration: Float
  durationUnitOfMeasure: String
  parentSegment: UpsertOperationsSegmentParentInput
  operationsDefinition: UpsertOperationsDefinitionParentInput
  changeoverSetItems: UpdateManyOperationsSegmentChangeoverSetItemsInput
  operationsSegments: UpdateManyOperationsSegmentOperationsSegmentsInput
  equipmentCapabilities: UpdateManyOperationsSegmentEquipmentCapabilitiesInput
  personnelCapabilities: UpdateManyOperationsSegmentPersonnelCapabilitiesInput
  operationsSegmentDescendantsAscendant: UpdateManyOperationsSegmentOperationsSegmentDescendantAscendantsInput
  operationsSegmentDescendantsDescendant: UpdateManyOperationsSegmentOperationsSegmentDescendantDescendantsInput
  operationsSegmentProperties: UpdateManyOperationsSegmentOperationsSegmentPropertiesInput
  operationsSegmentDependenciesFromOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentsInput
  operationsSegmentDependenciesToOperationsSegment: UpdateManyOperationsSegmentOperationsSegmentDependencyToOperationsSegmentsInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentOperationsSegmentMaterialSpecificationsInput
  operationsSegmentPersonnelSpecifications: UpdateManyOperationsSegmentOperationsSegmentPersonnelSpecificationsInput
  operationsSegmentEquipmentSpecifications: UpdateManyOperationsSegmentOperationsSegmentEquipmentSpecificationsInput
  operationsRequests: UpdateManyOperationsSegmentOperationsRequestsInput
  segmentRequirements: UpdateManyOperationsSegmentSegmentRequirementsInput
}

input UpdateScenarioOperationsSegmentMaterialSpecificationInput {
  data: UpdateScenarioOperationsSegmentMaterialSpecificationInputFields
  where: ConnectScenarioOperationsSegmentMaterialSpecificationInput
}

input UpdateScenarioOperationsSegmentMaterialSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  description: String
  materialUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
  parent: UpsertOperationsSegmentMaterialSpecificationParentInput
  calendarisedThroughputSet: UpsertCalendarisedThroughputSetParentInput
  operationsSegmentMaterialSpecifications: UpdateManyOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationsInput
}

input UpdateScenarioOperationsSegmentPersonnelSpecificationInput {
  data: UpdateScenarioOperationsSegmentPersonnelSpecificationInputFields
  where: ConnectScenarioOperationsSegmentPersonnelSpecificationInput
}

input UpdateScenarioOperationsSegmentPersonnelSpecificationInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  description: String
  personnelUse: String
  quantity: Float
  quantityUnitOfMeasure: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateScenarioOperationsSegmentPropertyInput {
  data: UpdateScenarioOperationsSegmentPropertyInputFields
  where: ConnectScenarioOperationsSegmentPropertyInput
}

input UpdateScenarioOperationsSegmentPropertyInputFields {
  id: Int
  operationsSegment: UpsertOperationsSegmentParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioOptimisationHierarchyAttributeInput {
  data: UpdateScenarioOptimisationHierarchyAttributeInputFields
  where: ConnectScenarioOptimisationHierarchyAttributeInput
}

input UpdateScenarioOptimisationHierarchyAttributeInputFields {
  id: Int
  optimisationHierarchy: UpsertOptimisationHierarchyParentInput
  optimisationProperty: UpsertOptimisationPropertyParentInput
  description: String
  priority: Int
}

input UpdateScenarioOptimisationHierarchyInput {
  data: UpdateScenarioOptimisationHierarchyInputFields
  where: ConnectScenarioOptimisationHierarchyInput
}

input UpdateScenarioOptimisationHierarchyInputFields {
  id: Int
  externalId: String
  description: String
  equipments: UpdateManyOptimisationHierarchyEquipmentsInput
  optimisationHierarchyAttributes: UpdateManyOptimisationHierarchyOptimisationHierarchyAttributesInput
}

input UpdateScenarioOptimisationPreferredSequenceInput {
  data: UpdateScenarioOptimisationPreferredSequenceInputFields
  where: ConnectScenarioOptimisationPreferredSequenceInput
}

input UpdateScenarioOptimisationPreferredSequenceInputFields {
  id: Int
  externalId: String
  description: String
  optimisationProperty: UpsertOptimisationPropertyParentInput
  equipments: UpdateManyOptimisationPreferredSequenceEquipmentsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPreferredSequenceOptimisationPreferredSequenceItemsInput
}

input UpdateScenarioOptimisationPreferredSequenceItemInput {
  data: UpdateScenarioOptimisationPreferredSequenceItemInputFields
  where: ConnectScenarioOptimisationPreferredSequenceItemInput
}

input UpdateScenarioOptimisationPreferredSequenceItemInputFields {
  id: Int
  optimisationPreferredSequence: UpsertOptimisationPreferredSequenceParentInput
  optimisationPropertyValue: UpsertOptimisationPropertyValueParentInput
  priority: Int
}

input UpdateScenarioOptimisationPropertyInput {
  data: UpdateScenarioOptimisationPropertyInputFields
  where: ConnectScenarioOptimisationPropertyInput
}

input UpdateScenarioOptimisationPropertyInputFields {
  id: Int
  name: String
  optimisationPropertyValues: UpdateManyOptimisationPropertyOptimisationPropertyValuesInput
  optimisationHierarchyAttributes: UpdateManyOptimisationPropertyOptimisationHierarchyAttributesInput
  optimisationPreferredSequences: UpdateManyOptimisationPropertyOptimisationPreferredSequencesInput
}

input UpdateScenarioOptimisationPropertyValueInput {
  data: UpdateScenarioOptimisationPropertyValueInputFields
  where: ConnectScenarioOptimisationPropertyValueInput
}

input UpdateScenarioOptimisationPropertyValueInputFields {
  id: Int
  optimisationProperty: UpsertOptimisationPropertyParentInput
  value: String
  dataType: String
  changeoverSetItemsFromValue: UpdateManyOptimisationPropertyValueChangeoverSetItemFromValuesInput
  changeoverSetItemsToValue: UpdateManyOptimisationPropertyValueChangeoverSetItemToValuesInput
  materialProperties: UpdateManyOptimisationPropertyValueMaterialPropertiesInput
  colourSchemeItems: UpdateManyOptimisationPropertyValueColourSchemeItemsInput
  optimisationPreferredSequenceItems: UpdateManyOptimisationPropertyValueOptimisationPreferredSequenceItemsInput
}

input UpdateScenarioOptimizationHierarchyInput {
  data: UpdateScenarioOptimizationHierarchyInputFields
  where: ConnectScenarioOptimizationHierarchyInput
}

input UpdateScenarioOptimizationHierarchyInputFields {
  id: Int
  externalId: String
  description: String
}

input UpdateScenarioOrderInput {
  data: UpdateScenarioOrderInputFields
  where: ConnectScenarioOrderInput
}

input UpdateScenarioOrderInputFields {
  id: Int
  date: String
  earliestStartDate: String
  externalId: String
  status: UpsertOrderStatusParentInput
  priority: Int
  orderItems: UpdateManyOrderOrderItemsInput
  orderProperties: UpdateManyOrderOrderPropertiesInput
}

input UpdateScenarioOrderItemInput {
  data: UpdateScenarioOrderItemInputFields
  where: ConnectScenarioOrderItemInput
}

input UpdateScenarioOrderItemInputFields {
  id: Int
  order: UpsertOrderParentInput
  operationsDefinitionClass: UpsertOperationsDefinitionClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  operationsRequestProfiles: UpdateManyOrderItemOperationsRequestProfilesInput
}

input UpdateScenarioOrderPropertyInput {
  data: UpdateScenarioOrderPropertyInputFields
  where: ConnectScenarioOrderPropertyInput
}

input UpdateScenarioOrderPropertyInputFields {
  id: Int
  order: UpsertOrderParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioOrderStatusInput {
  data: UpdateScenarioOrderStatusInputFields
  where: ConnectScenarioOrderStatusInput
}

input UpdateScenarioOrderStatusInputFields {
  id: Int
  status: String
  orders: UpdateManyOrderStatusOrdersInput
}

input UpdateScenarioPersonDowntimePeriodInput {
  data: UpdateScenarioPersonDowntimePeriodInputFields
  where: ConnectScenarioPersonDowntimePeriodInput
}

input UpdateScenarioPersonDowntimePeriodInputFields {
  id: Int
  person: UpsertPersonParentInput
  downtimePeriod: UpsertDowntimePeriodParentInput
}

input UpdateScenarioPersonInput {
  data: UpdateScenarioPersonInputFields
  where: ConnectScenarioPersonInput
}

input UpdateScenarioPersonInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  name: String
  description: String
  calendarisedAvailabilityTemplateSet: UpsertCalendarisedAvailabilityTemplateSetParentInput
  personProperties: UpdateManyPersonPersonPropertiesInput
  personnelClassPersonMembers: UpdateManyPersonPersonnelClassPersonMembersInput
  personnelPositionPersonMembers: UpdateManyPersonPersonnelPositionPersonMembersInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonOperationsSegmentPersonnelSpecificationsInput
  operationsRequestPersonnels: UpdateManyPersonOperationsRequestPersonnelsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonSegmentRequirementPersonnelRequirementsInput
  personDowntimePeriods: UpdateManyPersonPersonDowntimePeriodsInput
}

input UpdateScenarioPersonnelCapabilityInput {
  data: UpdateScenarioPersonnelCapabilityInputFields
  where: ConnectScenarioPersonnelCapabilityInput
}

input UpdateScenarioPersonnelCapabilityInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  capabilityType: String
  operationsSegment: UpsertOperationsSegmentParentInput
  startTime: String
  endTime: String
  quantity: Float
  quantityUnitOfMeasure: String
  reason: String
}

input UpdateScenarioPersonnelClassInput {
  data: UpdateScenarioPersonnelClassInputFields
  where: ConnectScenarioPersonnelClassInput
}

input UpdateScenarioPersonnelClassInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  personnelClassProperties: UpdateManyPersonnelClassPersonnelClassPropertiesInput
  personnelPositions: UpdateManyPersonnelClassPersonnelPositionsInput
  personnelClassPersonMembers: UpdateManyPersonnelClassPersonnelClassPersonMembersInput
  personnelCapabilities: UpdateManyPersonnelClassPersonnelCapabilitiesInput
  operationsSegmentPersonnelSpecifications: UpdateManyPersonnelClassOperationsSegmentPersonnelSpecificationsInput
  segmentRequirementPersonnelRequirements: UpdateManyPersonnelClassSegmentRequirementPersonnelRequirementsInput
}

input UpdateScenarioPersonnelClassPersonMemberInput {
  data: UpdateScenarioPersonnelClassPersonMemberInputFields
  where: ConnectScenarioPersonnelClassPersonMemberInput
}

input UpdateScenarioPersonnelClassPersonMemberInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  person: UpsertPersonParentInput
}

input UpdateScenarioPersonnelClassPropertyInput {
  data: UpdateScenarioPersonnelClassPropertyInputFields
  where: ConnectScenarioPersonnelClassPropertyInput
}

input UpdateScenarioPersonnelClassPropertyInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioPersonnelPositionInput {
  data: UpdateScenarioPersonnelPositionInputFields
  where: ConnectScenarioPersonnelPositionInput
}

input UpdateScenarioPersonnelPositionInputFields {
  id: Int
  personnelClass: UpsertPersonnelClassParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  personnelPositionPersonMembers: UpdateManyPersonnelPositionPersonnelPositionPersonMembersInput
  personnelPositionProperties: UpdateManyPersonnelPositionPersonnelPositionPropertiesInput
}

input UpdateScenarioPersonnelPositionPersonMemberInput {
  data: UpdateScenarioPersonnelPositionPersonMemberInputFields
  where: ConnectScenarioPersonnelPositionPersonMemberInput
}

input UpdateScenarioPersonnelPositionPersonMemberInputFields {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  person: UpsertPersonParentInput
}

input UpdateScenarioPersonnelPositionPropertyInput {
  data: UpdateScenarioPersonnelPositionPropertyInputFields
  where: ConnectScenarioPersonnelPositionPropertyInput
}

input UpdateScenarioPersonnelPositionPropertyInputFields {
  id: Int
  personnelPosition: UpsertPersonnelPositionParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioPersonPropertyInput {
  data: UpdateScenarioPersonPropertyInputFields
  where: ConnectScenarioPersonPropertyInput
}

input UpdateScenarioPersonPropertyInputFields {
  id: Int
  person: UpsertPersonParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioScenarioAttributeInput {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioScenarioAttributeInputFields {
  id: Int
  changeoverTime: Float
  changeoverCount: Int
  waitingTime: Float
  inventoryShortage: Float
  overdueCount: Int
  conflictCount: Int
}

input UpdateScenarioSegmentRequirementDescendantInput {
  data: UpdateScenarioSegmentRequirementDescendantInputFields
  where: ConnectScenarioSegmentRequirementDescendantInput
}

input UpdateScenarioSegmentRequirementDescendantInputFields {
  id: Int
  ascendant: UpsertSegmentRequirementParentInput
  descendant: UpsertSegmentRequirementParentInput
}

input UpdateScenarioSegmentRequirementEquipmentRequirementInput {
  data: UpdateScenarioSegmentRequirementEquipmentRequirementInputFields
  where: ConnectScenarioSegmentRequirementEquipmentRequirementInput
}

input UpdateScenarioSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
}

input UpdateScenarioSegmentRequirementInput {
  data: UpdateScenarioSegmentRequirementInputFields
  where: ConnectScenarioSegmentRequirementInput
}

input UpdateScenarioSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateScenarioSegmentRequirementMaterialRequirementInput {
  data: UpdateScenarioSegmentRequirementMaterialRequirementInputFields
  where: ConnectScenarioSegmentRequirementMaterialRequirementInput
}

input UpdateScenarioSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateScenarioSegmentRequirementPersonnelRequirementInput {
  data: UpdateScenarioSegmentRequirementPersonnelRequirementInputFields
  where: ConnectScenarioSegmentRequirementPersonnelRequirementInput
}

input UpdateScenarioSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
}

input UpdateScenarioSegmentRequirementPropertyInput {
  data: UpdateScenarioSegmentRequirementPropertyInputFields
  where: ConnectScenarioSegmentRequirementPropertyInput
}

input UpdateScenarioSegmentRequirementPropertyInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
}

input UpdateScenarioTimePeriodInput {
  data: UpdateScenarioTimePeriodInputFields
  where: ConnectScenarioTimePeriodInput
}

input UpdateScenarioTimePeriodInputFields {
  id: Int
  startTime: String
  endTime: String
}

input UpdateSegmentRequirementDescendantInput {
  id: Int
  ascendant: UpsertSegmentRequirementParentInput
  descendant: UpsertSegmentRequirementParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementEquipmentRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementInput {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  parentSegmentRequirement: UpsertSegmentRequirementParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: UpsertScenarioParentInput
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateSegmentRequirementMaterialRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  data: UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementPersonnelRequirementInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementPropertyInput {
  id: Int
  segmentRequirement: UpsertSegmentRequirementParentInput
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementSegmentRequirementDescendantAscendantInput {
  data: UpdateSegmentRequirementSegmentRequirementDescendantAscendantInputFields
  where: ConnectSegmentRequirementSegmentRequirementDescendantAscendantInput
}

input UpdateSegmentRequirementSegmentRequirementDescendantAscendantInputFields {
  id: Int
  descendant: UpsertSegmentRequirementParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementSegmentRequirementDescendantDescendantInput {
  data: UpdateSegmentRequirementSegmentRequirementDescendantDescendantInputFields
  where: ConnectSegmentRequirementSegmentRequirementDescendantDescendantInput
}

input UpdateSegmentRequirementSegmentRequirementDescendantDescendantInputFields {
  id: Int
  ascendant: UpsertSegmentRequirementParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields
  where: FindSegmentRequirementEquipmentRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  equipment: UpsertEquipmentParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementSegmentRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementInputFields
  where: ConnectSegmentRequirementSegmentRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementInputFields {
  id: Int
  operationsRequest: UpsertOperationsRequestParentInput
  operationsSegment: UpsertOperationsSegmentParentInput
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  description: String
  startTime: String
  endTime: String
  segmentState: String
  scenario: UpsertScenarioParentInput
  segmentRequirements: UpdateManySegmentRequirementSegmentRequirementsInput
  segmentRequirementDescendantsAscendant: UpdateManySegmentRequirementSegmentRequirementDescendantAscendantsInput
  segmentRequirementDescendantsDescendant: UpdateManySegmentRequirementSegmentRequirementDescendantDescendantsInput
  segmentRequirementProperties: UpdateManySegmentRequirementSegmentRequirementPropertiesInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementSegmentRequirementMaterialRequirementsInput
  segmentRequirementPersonnelRequirements: UpdateManySegmentRequirementSegmentRequirementPersonnelRequirementsInput
  segmentRequirementEquipmentRequirements: UpdateManySegmentRequirementSegmentRequirementEquipmentRequirementsInput
}

input UpdateSegmentRequirementSegmentRequirementMaterialRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields
  where: FindSegmentRequirementMaterialRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  materialDefinition: UpsertMaterialDefinitionParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  materialLot: UpsertMaterialLotParentInput
  materialUse: String
  remainingQuantity: Float
  remainingQuantityUnitOfMeasure: String
  parent: UpsertSegmentRequirementMaterialRequirementParentInput
  scenario: UpsertScenarioParentInput
  segmentRequirementMaterialRequirements: UpdateManySegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementsInput
}

input UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  data: UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields
  where: FindSegmentRequirementPersonnelRequirementInput
}

input UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields {
  id: Int
  hierarchyScope: UpsertHierarchyScopeParentInput
  externalId: String
  person: UpsertPersonParentInput
  personnelClass: UpsertPersonnelClassParentInput
  quantity: Float
  quantityUnitOfMeasure: String
  description: String
  operationalLocation: UpsertOperationalLocationParentInput
  personnelUse: String
  scenario: UpsertScenarioParentInput
}

input UpdateSegmentRequirementSegmentRequirementPropertyInput {
  data: UpdateSegmentRequirementSegmentRequirementPropertyInputFields
  where: ConnectSegmentRequirementSegmentRequirementPropertyInput
}

input UpdateSegmentRequirementSegmentRequirementPropertyInputFields {
  id: Int
  externalId: String
  value: String
  dataType: String
  scenario: UpsertScenarioParentInput
}

input UpdateTimePeriodInput {
  id: Int
  startTime: String
  endTime: String
  scenario: UpsertScenarioParentInput
}

input UpsertAvailabilityTemplateAvailabilityTemplateItemInput {
  create: CreateAvailabilityTemplateAvailabilityTemplateItemInput
  update: UpdateAvailabilityTemplateAvailabilityTemplateItemInputFields
}

input UpsertAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput {
  create: CreateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInput
  update: UpdateAvailabilityTemplateCalendarisedAvailabilityTemplateSetItemInputFields
}

input UpsertAvailabilityTemplateInput {
  create: CreateAvailabilityTemplateInput
  update: UpdateAvailabilityTemplateInput
}

input UpsertAvailabilityTemplateParentInput {
  connect: FindAvailabilityTemplateInput
  create: CreateAvailabilityTemplateInput
  update: UpdateAvailabilityTemplateInput
  upsert: UpsertAvailabilityTemplateInput
}

input UpsertCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput {
  create: CreateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInput
  update: UpdateCalendarisedAvailabilityTemplateSetCalendarisedAvailabilityTemplateSetItemInputFields
}

input UpsertCalendarisedAvailabilityTemplateSetEquipmentInput {
  create: CreateCalendarisedAvailabilityTemplateSetEquipmentInput
  update: UpdateCalendarisedAvailabilityTemplateSetEquipmentInputFields
}

input UpsertCalendarisedAvailabilityTemplateSetInput {
  create: CreateCalendarisedAvailabilityTemplateSetInput
  update: UpdateCalendarisedAvailabilityTemplateSetInput
}

input UpsertCalendarisedAvailabilityTemplateSetParentInput {
  connect: FindCalendarisedAvailabilityTemplateSetInput
  create: CreateCalendarisedAvailabilityTemplateSetInput
  update: UpdateCalendarisedAvailabilityTemplateSetInput
  upsert: UpsertCalendarisedAvailabilityTemplateSetInput
}

input UpsertCalendarisedAvailabilityTemplateSetPersonInput {
  create: CreateCalendarisedAvailabilityTemplateSetPersonInput
  update: UpdateCalendarisedAvailabilityTemplateSetPersonInputFields
}

input UpsertCalendarisedThroughputSetCalendarisedThroughputSetItemInput {
  create: CreateCalendarisedThroughputSetCalendarisedThroughputSetItemInput
  update: UpdateCalendarisedThroughputSetCalendarisedThroughputSetItemInputFields
}

input UpsertCalendarisedThroughputSetInput {
  create: CreateCalendarisedThroughputSetInput
  update: UpdateCalendarisedThroughputSetInput
}

input UpsertCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput {
  create: CreateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInput
  update: UpdateCalendarisedThroughputSetOperationsSegmentMaterialSpecificationInputFields
}

input UpsertCalendarisedThroughputSetParentInput {
  connect: FindCalendarisedThroughputSetInput
  create: CreateCalendarisedThroughputSetInput
  update: UpdateCalendarisedThroughputSetInput
  upsert: UpsertCalendarisedThroughputSetInput
}

input UpsertChangeoverSetChangeoverSetItemInput {
  create: CreateChangeoverSetChangeoverSetItemInput
  update: UpdateChangeoverSetChangeoverSetItemInputFields
}

input UpsertChangeoverSetEquipmentInput {
  create: CreateChangeoverSetEquipmentInput
  update: UpdateChangeoverSetEquipmentInputFields
}

input UpsertChangeoverSetInput {
  create: CreateChangeoverSetInput
  update: UpdateChangeoverSetInput
}

input UpsertChangeoverSetParentInput {
  connect: FindChangeoverSetInput
  create: CreateChangeoverSetInput
  update: UpdateChangeoverSetInput
  upsert: UpsertChangeoverSetInput
}

input UpsertColourSchemeColourSchemeItemInput {
  create: CreateColourSchemeColourSchemeItemInput
  update: UpdateColourSchemeColourSchemeItemInputFields
}

input UpsertColourSchemeInput {
  create: CreateColourSchemeInput
  update: UpdateColourSchemeInput
}

input UpsertColourSchemeParentInput {
  connect: FindColourSchemeInput
  create: CreateColourSchemeInput
  update: UpdateColourSchemeInput
  upsert: UpsertColourSchemeInput
}

input UpsertDowntimePeriodEquipmentDowntimePeriodInput {
  create: CreateDowntimePeriodEquipmentDowntimePeriodInput
  update: UpdateDowntimePeriodEquipmentDowntimePeriodInputFields
}

input UpsertDowntimePeriodInput {
  create: CreateDowntimePeriodInput
  update: UpdateDowntimePeriodInput
}

input UpsertDowntimePeriodParentInput {
  connect: FindDowntimePeriodInput
  create: CreateDowntimePeriodInput
  update: UpdateDowntimePeriodInput
  upsert: UpsertDowntimePeriodInput
}

input UpsertDowntimePeriodPersonDowntimePeriodInput {
  create: CreateDowntimePeriodPersonDowntimePeriodInput
  update: UpdateDowntimePeriodPersonDowntimePeriodInputFields
}

input UpsertEquipmentClassEquipmentClassEquipmentMemberInput {
  create: CreateEquipmentClassEquipmentClassEquipmentMemberInput
  update: UpdateEquipmentClassEquipmentClassEquipmentMemberInputFields
}

input UpsertEquipmentClassInput {
  create: CreateEquipmentClassInput
  update: UpdateEquipmentClassInput
}

input UpsertEquipmentClassOperationsSegmentEquipmentSpecificationInput {
  create: CreateEquipmentClassOperationsSegmentEquipmentSpecificationInput
  update: UpdateEquipmentClassOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertEquipmentClassParentInput {
  connect: FindEquipmentClassInput
  create: CreateEquipmentClassInput
  update: UpdateEquipmentClassInput
  upsert: UpsertEquipmentClassInput
}

input UpsertEquipmentEquipmentCapabilityInput {
  create: CreateEquipmentEquipmentCapabilityInput
  update: UpdateEquipmentEquipmentCapabilityInputFields
}

input UpsertEquipmentEquipmentChildChildInput {
  create: CreateEquipmentEquipmentChildChildInput
  update: UpdateEquipmentEquipmentChildChildInputFields
}

input UpsertEquipmentEquipmentChildParentInput {
  create: CreateEquipmentEquipmentChildParentInput
  update: UpdateEquipmentEquipmentChildParentInputFields
}

input UpsertEquipmentEquipmentClassEquipmentMemberInput {
  create: CreateEquipmentEquipmentClassEquipmentMemberInput
  update: UpdateEquipmentEquipmentClassEquipmentMemberInputFields
}

input UpsertEquipmentEquipmentDescendantAscendantInput {
  create: CreateEquipmentEquipmentDescendantAscendantInput
  update: UpdateEquipmentEquipmentDescendantAscendantInputFields
}

input UpsertEquipmentEquipmentDescendantDescendantInput {
  create: CreateEquipmentEquipmentDescendantDescendantInput
  update: UpdateEquipmentEquipmentDescendantDescendantInputFields
}

input UpsertEquipmentEquipmentDowntimePeriodInput {
  create: CreateEquipmentEquipmentDowntimePeriodInput
  update: UpdateEquipmentEquipmentDowntimePeriodInputFields
}

input UpsertEquipmentEquipmentPropertyInput {
  create: CreateEquipmentEquipmentPropertyInput
  update: UpdateEquipmentEquipmentPropertyInputFields
}

input UpsertEquipmentHierarchyScopeInput {
  create: CreateEquipmentHierarchyScopeInput
  update: UpdateEquipmentHierarchyScopeInputFields
}

input UpsertEquipmentInput {
  create: CreateEquipmentInput
  update: UpdateEquipmentInput
}

input UpsertEquipmentOperationsRequestEquipmentInput {
  create: CreateEquipmentOperationsRequestEquipmentInput
  update: UpdateEquipmentOperationsRequestEquipmentInputFields
}

input UpsertEquipmentOperationsSegmentEquipmentSpecificationInput {
  create: CreateEquipmentOperationsSegmentEquipmentSpecificationInput
  update: UpdateEquipmentOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertEquipmentParentInput {
  connect: FindEquipmentInput
  create: CreateEquipmentInput
  update: UpdateEquipmentInput
  upsert: UpsertEquipmentInput
}

input UpsertEquipmentSegmentRequirementEquipmentRequirementInput {
  create: CreateEquipmentSegmentRequirementEquipmentRequirementInput
  update: UpdateEquipmentSegmentRequirementEquipmentRequirementInputFields
}

input UpsertHierarchyScopeEquipmentCapabilityInput {
  create: CreateHierarchyScopeEquipmentCapabilityInput
  update: UpdateHierarchyScopeEquipmentCapabilityInputFields
}

input UpsertHierarchyScopeEquipmentClassInput {
  create: CreateHierarchyScopeEquipmentClassInput
  update: UpdateHierarchyScopeEquipmentClassInputFields
}

input UpsertHierarchyScopeEquipmentInput {
  create: CreateHierarchyScopeEquipmentInput
  update: UpdateHierarchyScopeEquipmentInputFields
}

input UpsertHierarchyScopeHierarchyScopeDescendantAscendantInput {
  create: CreateHierarchyScopeHierarchyScopeDescendantAscendantInput
  update: UpdateHierarchyScopeHierarchyScopeDescendantAscendantInputFields
}

input UpsertHierarchyScopeHierarchyScopeDescendantDescendantInput {
  create: CreateHierarchyScopeHierarchyScopeDescendantDescendantInput
  update: UpdateHierarchyScopeHierarchyScopeDescendantDescendantInputFields
}

input UpsertHierarchyScopeHierarchyScopeInput {
  create: CreateHierarchyScopeHierarchyScopeInput
  update: UpdateHierarchyScopeHierarchyScopeInputFields
}

input UpsertHierarchyScopeInput {
  create: CreateHierarchyScopeInput
  update: UpdateHierarchyScopeInput
}

input UpsertHierarchyScopeMaterialDefinitionInput {
  create: CreateHierarchyScopeMaterialDefinitionInput
  update: UpdateHierarchyScopeMaterialDefinitionInputFields
}

input UpsertHierarchyScopeMaterialLotInput {
  create: CreateHierarchyScopeMaterialLotInput
  update: UpdateHierarchyScopeMaterialLotInputFields
}

input UpsertHierarchyScopeOpenPurchaseOrderInput {
  create: CreateHierarchyScopeOpenPurchaseOrderInput
  update: UpdateHierarchyScopeOpenPurchaseOrderInputFields
}

input UpsertHierarchyScopeOperationalLocationInput {
  create: CreateHierarchyScopeOperationalLocationInput
  update: UpdateHierarchyScopeOperationalLocationInputFields
}

input UpsertHierarchyScopeOperationsDefinitionClassInput {
  create: CreateHierarchyScopeOperationsDefinitionClassInput
  update: UpdateHierarchyScopeOperationsDefinitionClassInputFields
}

input UpsertHierarchyScopeOperationsDefinitionInput {
  create: CreateHierarchyScopeOperationsDefinitionInput
  update: UpdateHierarchyScopeOperationsDefinitionInputFields
}

input UpsertHierarchyScopeOperationsRequestInput {
  create: CreateHierarchyScopeOperationsRequestInput
  update: UpdateHierarchyScopeOperationsRequestInputFields
}

input UpsertHierarchyScopeOperationsSegmentEquipmentSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentEquipmentSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertHierarchyScopeOperationsSegmentInput {
  create: CreateHierarchyScopeOperationsSegmentInput
  update: UpdateHierarchyScopeOperationsSegmentInputFields
}

input UpsertHierarchyScopeOperationsSegmentMaterialSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentMaterialSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentMaterialSpecificationInputFields
}

input UpsertHierarchyScopeOperationsSegmentPersonnelSpecificationInput {
  create: CreateHierarchyScopeOperationsSegmentPersonnelSpecificationInput
  update: UpdateHierarchyScopeOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertHierarchyScopeParentInput {
  connect: FindHierarchyScopeInput
  create: CreateHierarchyScopeInput
  update: UpdateHierarchyScopeInput
  upsert: UpsertHierarchyScopeInput
}

input UpsertHierarchyScopePersonInput {
  create: CreateHierarchyScopePersonInput
  update: UpdateHierarchyScopePersonInputFields
}

input UpsertHierarchyScopePersonnelCapabilityInput {
  create: CreateHierarchyScopePersonnelCapabilityInput
  update: UpdateHierarchyScopePersonnelCapabilityInputFields
}

input UpsertHierarchyScopePersonnelClassInput {
  create: CreateHierarchyScopePersonnelClassInput
  update: UpdateHierarchyScopePersonnelClassInputFields
}

input UpsertHierarchyScopePersonnelPositionInput {
  create: CreateHierarchyScopePersonnelPositionInput
  update: UpdateHierarchyScopePersonnelPositionInputFields
}

input UpsertHierarchyScopeSegmentRequirementEquipmentRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementEquipmentRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementEquipmentRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementMaterialRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementMaterialRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementMaterialRequirementInputFields
}

input UpsertHierarchyScopeSegmentRequirementPersonnelRequirementInput {
  create: CreateHierarchyScopeSegmentRequirementPersonnelRequirementInput
  update: UpdateHierarchyScopeSegmentRequirementPersonnelRequirementInputFields
}

input UpsertMaterialDefinitionInput {
  create: CreateMaterialDefinitionInput
  update: UpdateMaterialDefinitionInput
}

input UpsertMaterialDefinitionMaterialLotInput {
  create: CreateMaterialDefinitionMaterialLotInput
  update: UpdateMaterialDefinitionMaterialLotInputFields
}

input UpsertMaterialDefinitionMaterialPropertyInput {
  create: CreateMaterialDefinitionMaterialPropertyInput
  update: UpdateMaterialDefinitionMaterialPropertyInputFields
}

input UpsertMaterialDefinitionOpenPurchaseOrderInput {
  create: CreateMaterialDefinitionOpenPurchaseOrderInput
  update: UpdateMaterialDefinitionOpenPurchaseOrderInputFields
}

input UpsertMaterialDefinitionOperationsSegmentMaterialSpecificationInput {
  create: CreateMaterialDefinitionOperationsSegmentMaterialSpecificationInput
  update: UpdateMaterialDefinitionOperationsSegmentMaterialSpecificationInputFields
}

input UpsertMaterialDefinitionParentInput {
  connect: FindMaterialDefinitionInput
  create: CreateMaterialDefinitionInput
  update: UpdateMaterialDefinitionInput
  upsert: UpsertMaterialDefinitionInput
}

input UpsertMaterialDefinitionSegmentRequirementMaterialRequirementInput {
  create: CreateMaterialDefinitionSegmentRequirementMaterialRequirementInput
  update: UpdateMaterialDefinitionSegmentRequirementMaterialRequirementInputFields
}

input UpsertMaterialLotInput {
  create: CreateMaterialLotInput
  update: UpdateMaterialLotInput
}

input UpsertMaterialLotParentInput {
  connect: FindMaterialLotInput
  create: CreateMaterialLotInput
  update: UpdateMaterialLotInput
  upsert: UpsertMaterialLotInput
}

input UpsertMaterialLotSegmentRequirementMaterialRequirementInput {
  create: CreateMaterialLotSegmentRequirementMaterialRequirementInput
  update: UpdateMaterialLotSegmentRequirementMaterialRequirementInputFields
}

input UpsertOperationalLocationInput {
  create: CreateOperationalLocationInput
  update: UpdateOperationalLocationInput
}

input UpsertOperationalLocationMaterialLotInput {
  create: CreateOperationalLocationMaterialLotInput
  update: UpdateOperationalLocationMaterialLotInputFields
}

input UpsertOperationalLocationOperationsSegmentEquipmentSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertOperationalLocationOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationalLocationOperationsSegmentPersonnelSpecificationInput {
  create: CreateOperationalLocationOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationalLocationOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertOperationalLocationParentInput {
  connect: FindOperationalLocationInput
  create: CreateOperationalLocationInput
  update: UpdateOperationalLocationInput
  upsert: UpsertOperationalLocationInput
}

input UpsertOperationalLocationSegmentRequirementEquipmentRequirementInput {
  create: CreateOperationalLocationSegmentRequirementEquipmentRequirementInput
  update: UpdateOperationalLocationSegmentRequirementEquipmentRequirementInputFields
}

input UpsertOperationalLocationSegmentRequirementMaterialRequirementInput {
  create: CreateOperationalLocationSegmentRequirementMaterialRequirementInput
  update: UpdateOperationalLocationSegmentRequirementMaterialRequirementInputFields
}

input UpsertOperationalLocationSegmentRequirementPersonnelRequirementInput {
  create: CreateOperationalLocationSegmentRequirementPersonnelRequirementInput
  update: UpdateOperationalLocationSegmentRequirementPersonnelRequirementInputFields
}

input UpsertOperationsDefinitionClassInput {
  create: CreateOperationsDefinitionClassInput
  update: UpdateOperationsDefinitionClassInput
}

input UpsertOperationsDefinitionClassOperationsDefinitionInput {
  create: CreateOperationsDefinitionClassOperationsDefinitionInput
  update: UpdateOperationsDefinitionClassOperationsDefinitionInputFields
}

input UpsertOperationsDefinitionClassOrderItemInput {
  create: CreateOperationsDefinitionClassOrderItemInput
  update: UpdateOperationsDefinitionClassOrderItemInputFields
}

input UpsertOperationsDefinitionClassParentInput {
  connect: FindOperationsDefinitionClassInput
  create: CreateOperationsDefinitionClassInput
  update: UpdateOperationsDefinitionClassInput
  upsert: UpsertOperationsDefinitionClassInput
}

input UpsertOperationsDefinitionInput {
  create: CreateOperationsDefinitionInput
  update: UpdateOperationsDefinitionInput
}

input UpsertOperationsDefinitionOperationsSegmentInput {
  create: CreateOperationsDefinitionOperationsSegmentInput
  update: UpdateOperationsDefinitionOperationsSegmentInputFields
}

input UpsertOperationsDefinitionParentInput {
  connect: FindOperationsDefinitionInput
  create: CreateOperationsDefinitionInput
  update: UpdateOperationsDefinitionInput
  upsert: UpsertOperationsDefinitionInput
}

input UpsertOperationsRequestInput {
  create: CreateOperationsRequestInput
  update: UpdateOperationsRequestInput
}

input UpsertOperationsRequestOperationsRequestEquipmentInput {
  create: CreateOperationsRequestOperationsRequestEquipmentInput
  update: UpdateOperationsRequestOperationsRequestEquipmentInputFields
}

input UpsertOperationsRequestOperationsRequestPersonnelInput {
  create: CreateOperationsRequestOperationsRequestPersonnelInput
  update: UpdateOperationsRequestOperationsRequestPersonnelInputFields
}

input UpsertOperationsRequestOperationsRequestProfileInput {
  create: CreateOperationsRequestOperationsRequestProfileInput
  update: UpdateOperationsRequestOperationsRequestProfileInputFields
}

input UpsertOperationsRequestParentInput {
  connect: FindOperationsRequestInput
  create: CreateOperationsRequestInput
  update: UpdateOperationsRequestInput
  upsert: UpsertOperationsRequestInput
}

input UpsertOperationsRequestSegmentRequirementInput {
  create: CreateOperationsRequestSegmentRequirementInput
  update: UpdateOperationsRequestSegmentRequirementInputFields
}

input UpsertOperationsSegmentChangeoverSetItemInput {
  create: CreateOperationsSegmentChangeoverSetItemInput
  update: UpdateOperationsSegmentChangeoverSetItemInputFields
}

input UpsertOperationsSegmentEquipmentCapabilityInput {
  create: CreateOperationsSegmentEquipmentCapabilityInput
  update: UpdateOperationsSegmentEquipmentCapabilityInputFields
}

input UpsertOperationsSegmentInput {
  create: CreateOperationsSegmentInput
  update: UpdateOperationsSegmentInput
}

input UpsertOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationInput
}

input UpsertOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationsSegmentMaterialSpecificationParentInput {
  connect: FindOperationsSegmentMaterialSpecificationInput
  create: CreateOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentMaterialSpecificationInput
  upsert: UpsertOperationsSegmentMaterialSpecificationInput
}

input UpsertOperationsSegmentOperationsRequestInput {
  create: CreateOperationsSegmentOperationsRequestInput
  update: UpdateOperationsSegmentOperationsRequestInputFields
}

input UpsertOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentDependencyFromOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentDependencyToOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentDescendantAscendantInput {
  create: CreateOperationsSegmentOperationsSegmentDescendantAscendantInput
  update: UpdateOperationsSegmentOperationsSegmentDescendantAscendantInputFields
}

input UpsertOperationsSegmentOperationsSegmentDescendantDescendantInput {
  create: CreateOperationsSegmentOperationsSegmentDescendantDescendantInput
  update: UpdateOperationsSegmentOperationsSegmentDescendantDescendantInputFields
}

input UpsertOperationsSegmentOperationsSegmentEquipmentSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentEquipmentSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentInput {
  create: CreateOperationsSegmentOperationsSegmentInput
  update: UpdateOperationsSegmentOperationsSegmentInputFields
}

input UpsertOperationsSegmentOperationsSegmentMaterialSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentMaterialSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentMaterialSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentPersonnelSpecificationInput {
  create: CreateOperationsSegmentOperationsSegmentPersonnelSpecificationInput
  update: UpdateOperationsSegmentOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertOperationsSegmentOperationsSegmentPropertyInput {
  create: CreateOperationsSegmentOperationsSegmentPropertyInput
  update: UpdateOperationsSegmentOperationsSegmentPropertyInputFields
}

input UpsertOperationsSegmentParentInput {
  connect: FindOperationsSegmentInput
  create: CreateOperationsSegmentInput
  update: UpdateOperationsSegmentInput
  upsert: UpsertOperationsSegmentInput
}

input UpsertOperationsSegmentPersonnelCapabilityInput {
  create: CreateOperationsSegmentPersonnelCapabilityInput
  update: UpdateOperationsSegmentPersonnelCapabilityInputFields
}

input UpsertOperationsSegmentSegmentRequirementInput {
  create: CreateOperationsSegmentSegmentRequirementInput
  update: UpdateOperationsSegmentSegmentRequirementInputFields
}

input UpsertOptimisationHierarchyEquipmentInput {
  create: CreateOptimisationHierarchyEquipmentInput
  update: UpdateOptimisationHierarchyEquipmentInputFields
}

input UpsertOptimisationHierarchyInput {
  create: CreateOptimisationHierarchyInput
  update: UpdateOptimisationHierarchyInput
}

input UpsertOptimisationHierarchyOptimisationHierarchyAttributeInput {
  create: CreateOptimisationHierarchyOptimisationHierarchyAttributeInput
  update: UpdateOptimisationHierarchyOptimisationHierarchyAttributeInputFields
}

input UpsertOptimisationHierarchyParentInput {
  connect: FindOptimisationHierarchyInput
  create: CreateOptimisationHierarchyInput
  update: UpdateOptimisationHierarchyInput
  upsert: UpsertOptimisationHierarchyInput
}

input UpsertOptimisationPreferredSequenceEquipmentInput {
  create: CreateOptimisationPreferredSequenceEquipmentInput
  update: UpdateOptimisationPreferredSequenceEquipmentInputFields
}

input UpsertOptimisationPreferredSequenceInput {
  create: CreateOptimisationPreferredSequenceInput
  update: UpdateOptimisationPreferredSequenceInput
}

input UpsertOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput {
  create: CreateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInput
  update: UpdateOptimisationPreferredSequenceOptimisationPreferredSequenceItemInputFields
}

input UpsertOptimisationPreferredSequenceParentInput {
  connect: FindOptimisationPreferredSequenceInput
  create: CreateOptimisationPreferredSequenceInput
  update: UpdateOptimisationPreferredSequenceInput
  upsert: UpsertOptimisationPreferredSequenceInput
}

input UpsertOptimisationPropertyInput {
  create: CreateOptimisationPropertyInput
  update: UpdateOptimisationPropertyInput
}

input UpsertOptimisationPropertyOptimisationHierarchyAttributeInput {
  create: CreateOptimisationPropertyOptimisationHierarchyAttributeInput
  update: UpdateOptimisationPropertyOptimisationHierarchyAttributeInputFields
}

input UpsertOptimisationPropertyOptimisationPreferredSequenceInput {
  create: CreateOptimisationPropertyOptimisationPreferredSequenceInput
  update: UpdateOptimisationPropertyOptimisationPreferredSequenceInputFields
}

input UpsertOptimisationPropertyOptimisationPropertyValueInput {
  create: CreateOptimisationPropertyOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyOptimisationPropertyValueInputFields
}

input UpsertOptimisationPropertyParentInput {
  connect: FindOptimisationPropertyInput
  create: CreateOptimisationPropertyInput
  update: UpdateOptimisationPropertyInput
  upsert: UpsertOptimisationPropertyInput
}

input UpsertOptimisationPropertyValueChangeoverSetItemFromValueInput {
  create: CreateOptimisationPropertyValueChangeoverSetItemFromValueInput
  update: UpdateOptimisationPropertyValueChangeoverSetItemFromValueInputFields
}

input UpsertOptimisationPropertyValueChangeoverSetItemToValueInput {
  create: CreateOptimisationPropertyValueChangeoverSetItemToValueInput
  update: UpdateOptimisationPropertyValueChangeoverSetItemToValueInputFields
}

input UpsertOptimisationPropertyValueColourSchemeItemInput {
  create: CreateOptimisationPropertyValueColourSchemeItemInput
  update: UpdateOptimisationPropertyValueColourSchemeItemInputFields
}

input UpsertOptimisationPropertyValueInput {
  create: CreateOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyValueInput
}

input UpsertOptimisationPropertyValueMaterialPropertyInput {
  create: CreateOptimisationPropertyValueMaterialPropertyInput
  update: UpdateOptimisationPropertyValueMaterialPropertyInputFields
}

input UpsertOptimisationPropertyValueOptimisationPreferredSequenceItemInput {
  create: CreateOptimisationPropertyValueOptimisationPreferredSequenceItemInput
  update: UpdateOptimisationPropertyValueOptimisationPreferredSequenceItemInputFields
}

input UpsertOptimisationPropertyValueParentInput {
  connect: FindOptimisationPropertyValueInput
  create: CreateOptimisationPropertyValueInput
  update: UpdateOptimisationPropertyValueInput
  upsert: UpsertOptimisationPropertyValueInput
}

input UpsertOrderInput {
  create: CreateOrderInput
  update: UpdateOrderInput
}

input UpsertOrderItemInput {
  create: CreateOrderItemInput
  update: UpdateOrderItemInput
}

input UpsertOrderItemOperationsRequestProfileInput {
  create: CreateOrderItemOperationsRequestProfileInput
  update: UpdateOrderItemOperationsRequestProfileInputFields
}

input UpsertOrderItemParentInput {
  connect: FindOrderItemInput
  create: CreateOrderItemInput
  update: UpdateOrderItemInput
  upsert: UpsertOrderItemInput
}

input UpsertOrderOrderItemInput {
  create: CreateOrderOrderItemInput
  update: UpdateOrderOrderItemInputFields
}

input UpsertOrderOrderPropertyInput {
  create: CreateOrderOrderPropertyInput
  update: UpdateOrderOrderPropertyInputFields
}

input UpsertOrderParentInput {
  connect: FindOrderInput
  create: CreateOrderInput
  update: UpdateOrderInput
  upsert: UpsertOrderInput
}

input UpsertOrderStatusInput {
  create: CreateOrderStatusInput
  update: UpdateOrderStatusInput
}

input UpsertOrderStatusOrderInput {
  create: CreateOrderStatusOrderInput
  update: UpdateOrderStatusOrderInputFields
}

input UpsertOrderStatusParentInput {
  connect: FindOrderStatusInput
  create: CreateOrderStatusInput
  update: UpdateOrderStatusInput
  upsert: UpsertOrderStatusInput
}

input UpsertPersonInput {
  create: CreatePersonInput
  update: UpdatePersonInput
}

input UpsertPersonnelClassInput {
  create: CreatePersonnelClassInput
  update: UpdatePersonnelClassInput
}

input UpsertPersonnelClassOperationsSegmentPersonnelSpecificationInput {
  create: CreatePersonnelClassOperationsSegmentPersonnelSpecificationInput
  update: UpdatePersonnelClassOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertPersonnelClassParentInput {
  connect: FindPersonnelClassInput
  create: CreatePersonnelClassInput
  update: UpdatePersonnelClassInput
  upsert: UpsertPersonnelClassInput
}

input UpsertPersonnelClassPersonnelCapabilityInput {
  create: CreatePersonnelClassPersonnelCapabilityInput
  update: UpdatePersonnelClassPersonnelCapabilityInputFields
}

input UpsertPersonnelClassPersonnelClassPersonMemberInput {
  create: CreatePersonnelClassPersonnelClassPersonMemberInput
  update: UpdatePersonnelClassPersonnelClassPersonMemberInputFields
}

input UpsertPersonnelClassPersonnelClassPropertyInput {
  create: CreatePersonnelClassPersonnelClassPropertyInput
  update: UpdatePersonnelClassPersonnelClassPropertyInputFields
}

input UpsertPersonnelClassPersonnelPositionInput {
  create: CreatePersonnelClassPersonnelPositionInput
  update: UpdatePersonnelClassPersonnelPositionInputFields
}

input UpsertPersonnelClassSegmentRequirementPersonnelRequirementInput {
  create: CreatePersonnelClassSegmentRequirementPersonnelRequirementInput
  update: UpdatePersonnelClassSegmentRequirementPersonnelRequirementInputFields
}

input UpsertPersonnelPositionInput {
  create: CreatePersonnelPositionInput
  update: UpdatePersonnelPositionInput
}

input UpsertPersonnelPositionParentInput {
  connect: FindPersonnelPositionInput
  create: CreatePersonnelPositionInput
  update: UpdatePersonnelPositionInput
  upsert: UpsertPersonnelPositionInput
}

input UpsertPersonnelPositionPersonnelPositionPersonMemberInput {
  create: CreatePersonnelPositionPersonnelPositionPersonMemberInput
  update: UpdatePersonnelPositionPersonnelPositionPersonMemberInputFields
}

input UpsertPersonnelPositionPersonnelPositionPropertyInput {
  create: CreatePersonnelPositionPersonnelPositionPropertyInput
  update: UpdatePersonnelPositionPersonnelPositionPropertyInputFields
}

input UpsertPersonOperationsRequestPersonnelInput {
  create: CreatePersonOperationsRequestPersonnelInput
  update: UpdatePersonOperationsRequestPersonnelInputFields
}

input UpsertPersonOperationsSegmentPersonnelSpecificationInput {
  create: CreatePersonOperationsSegmentPersonnelSpecificationInput
  update: UpdatePersonOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertPersonParentInput {
  connect: FindPersonInput
  create: CreatePersonInput
  update: UpdatePersonInput
  upsert: UpsertPersonInput
}

input UpsertPersonPersonDowntimePeriodInput {
  create: CreatePersonPersonDowntimePeriodInput
  update: UpdatePersonPersonDowntimePeriodInputFields
}

input UpsertPersonPersonnelClassPersonMemberInput {
  create: CreatePersonPersonnelClassPersonMemberInput
  update: UpdatePersonPersonnelClassPersonMemberInputFields
}

input UpsertPersonPersonnelPositionPersonMemberInput {
  create: CreatePersonPersonnelPositionPersonMemberInput
  update: UpdatePersonPersonnelPositionPersonMemberInputFields
}

input UpsertPersonPersonPropertyInput {
  create: CreatePersonPersonPropertyInput
  update: UpdatePersonPersonPropertyInputFields
}

input UpsertPersonSegmentRequirementPersonnelRequirementInput {
  create: CreatePersonSegmentRequirementPersonnelRequirementInput
  update: UpdatePersonSegmentRequirementPersonnelRequirementInputFields
}

input UpsertScenarioAvailabilityTemplateInput {
  create: CreateScenarioAvailabilityTemplateInput
  update: UpdateScenarioAvailabilityTemplateInputFields
}

input UpsertScenarioAvailabilityTemplateItemInput {
  create: CreateScenarioAvailabilityTemplateItemInput
  update: UpdateScenarioAvailabilityTemplateItemInputFields
}

input UpsertScenarioCalendarisedAvailabilityTemplateSetInput {
  create: CreateScenarioCalendarisedAvailabilityTemplateSetInput
  update: UpdateScenarioCalendarisedAvailabilityTemplateSetInputFields
}

input UpsertScenarioCalendarisedAvailabilityTemplateSetItemInput {
  create: CreateScenarioCalendarisedAvailabilityTemplateSetItemInput
  update: UpdateScenarioCalendarisedAvailabilityTemplateSetItemInputFields
}

input UpsertScenarioCalendarisedThroughputSetInput {
  create: CreateScenarioCalendarisedThroughputSetInput
  update: UpdateScenarioCalendarisedThroughputSetInputFields
}

input UpsertScenarioCalendarisedThroughputSetItemInput {
  create: CreateScenarioCalendarisedThroughputSetItemInput
  update: UpdateScenarioCalendarisedThroughputSetItemInputFields
}

input UpsertScenarioChangeoverSetInput {
  create: CreateScenarioChangeoverSetInput
  update: UpdateScenarioChangeoverSetInputFields
}

input UpsertScenarioChangeoverSetItemInput {
  create: CreateScenarioChangeoverSetItemInput
  update: UpdateScenarioChangeoverSetItemInputFields
}

input UpsertScenarioColourSchemeInput {
  create: CreateScenarioColourSchemeInput
  update: UpdateScenarioColourSchemeInputFields
}

input UpsertScenarioColourSchemeItemInput {
  create: CreateScenarioColourSchemeItemInput
  update: UpdateScenarioColourSchemeItemInputFields
}

input UpsertScenarioConfigurableApplicationParameterInput {
  create: CreateScenarioConfigurableApplicationParameterInput
  update: UpdateScenarioConfigurableApplicationParameterInputFields
}

input UpsertScenarioDowntimePeriodInput {
  create: CreateScenarioDowntimePeriodInput
  update: UpdateScenarioDowntimePeriodInputFields
}

input UpsertScenarioEquipmentCapabilityInput {
  create: CreateScenarioEquipmentCapabilityInput
  update: UpdateScenarioEquipmentCapabilityInputFields
}

input UpsertScenarioEquipmentChildInput {
  create: CreateScenarioEquipmentChildInput
  update: UpdateScenarioEquipmentChildInputFields
}

input UpsertScenarioEquipmentClassEquipmentMemberInput {
  create: CreateScenarioEquipmentClassEquipmentMemberInput
  update: UpdateScenarioEquipmentClassEquipmentMemberInputFields
}

input UpsertScenarioEquipmentClassInput {
  create: CreateScenarioEquipmentClassInput
  update: UpdateScenarioEquipmentClassInputFields
}

input UpsertScenarioEquipmentDescendantInput {
  create: CreateScenarioEquipmentDescendantInput
  update: UpdateScenarioEquipmentDescendantInputFields
}

input UpsertScenarioEquipmentDowntimePeriodInput {
  create: CreateScenarioEquipmentDowntimePeriodInput
  update: UpdateScenarioEquipmentDowntimePeriodInputFields
}

input UpsertScenarioEquipmentInput {
  create: CreateScenarioEquipmentInput
  update: UpdateScenarioEquipmentInputFields
}

input UpsertScenarioEquipmentPropertyInput {
  create: CreateScenarioEquipmentPropertyInput
  update: UpdateScenarioEquipmentPropertyInputFields
}

input UpsertScenarioHierarchyScopeDescendantInput {
  create: CreateScenarioHierarchyScopeDescendantInput
  update: UpdateScenarioHierarchyScopeDescendantInputFields
}

input UpsertScenarioHierarchyScopeInput {
  create: CreateScenarioHierarchyScopeInput
  update: UpdateScenarioHierarchyScopeInputFields
}

input UpsertScenarioInput {
  create: CreateScenarioInput
  update: UpdateScenarioInput
}

input UpsertScenarioMaterialDefinitionInput {
  create: CreateScenarioMaterialDefinitionInput
  update: UpdateScenarioMaterialDefinitionInputFields
}

input UpsertScenarioMaterialLotInput {
  create: CreateScenarioMaterialLotInput
  update: UpdateScenarioMaterialLotInputFields
}

input UpsertScenarioMaterialPropertyInput {
  create: CreateScenarioMaterialPropertyInput
  update: UpdateScenarioMaterialPropertyInputFields
}

input UpsertScenarioOpenPurchaseOrderInput {
  create: CreateScenarioOpenPurchaseOrderInput
  update: UpdateScenarioOpenPurchaseOrderInputFields
}

input UpsertScenarioOperationalLocationInput {
  create: CreateScenarioOperationalLocationInput
  update: UpdateScenarioOperationalLocationInputFields
}

input UpsertScenarioOperationsDefinitionClassInput {
  create: CreateScenarioOperationsDefinitionClassInput
  update: UpdateScenarioOperationsDefinitionClassInputFields
}

input UpsertScenarioOperationsDefinitionInput {
  create: CreateScenarioOperationsDefinitionInput
  update: UpdateScenarioOperationsDefinitionInputFields
}

input UpsertScenarioOperationsRequestEquipmentInput {
  create: CreateScenarioOperationsRequestEquipmentInput
  update: UpdateScenarioOperationsRequestEquipmentInputFields
}

input UpsertScenarioOperationsRequestInput {
  create: CreateScenarioOperationsRequestInput
  update: UpdateScenarioOperationsRequestInputFields
}

input UpsertScenarioOperationsRequestPersonnelInput {
  create: CreateScenarioOperationsRequestPersonnelInput
  update: UpdateScenarioOperationsRequestPersonnelInputFields
}

input UpsertScenarioOperationsRequestProfileInput {
  create: CreateScenarioOperationsRequestProfileInput
  update: UpdateScenarioOperationsRequestProfileInputFields
}

input UpsertScenarioOperationsSegmentDependencyInput {
  create: CreateScenarioOperationsSegmentDependencyInput
  update: UpdateScenarioOperationsSegmentDependencyInputFields
}

input UpsertScenarioOperationsSegmentDescendantInput {
  create: CreateScenarioOperationsSegmentDescendantInput
  update: UpdateScenarioOperationsSegmentDescendantInputFields
}

input UpsertScenarioOperationsSegmentEquipmentSpecificationInput {
  create: CreateScenarioOperationsSegmentEquipmentSpecificationInput
  update: UpdateScenarioOperationsSegmentEquipmentSpecificationInputFields
}

input UpsertScenarioOperationsSegmentInput {
  create: CreateScenarioOperationsSegmentInput
  update: UpdateScenarioOperationsSegmentInputFields
}

input UpsertScenarioOperationsSegmentMaterialSpecificationInput {
  create: CreateScenarioOperationsSegmentMaterialSpecificationInput
  update: UpdateScenarioOperationsSegmentMaterialSpecificationInputFields
}

input UpsertScenarioOperationsSegmentPersonnelSpecificationInput {
  create: CreateScenarioOperationsSegmentPersonnelSpecificationInput
  update: UpdateScenarioOperationsSegmentPersonnelSpecificationInputFields
}

input UpsertScenarioOperationsSegmentPropertyInput {
  create: CreateScenarioOperationsSegmentPropertyInput
  update: UpdateScenarioOperationsSegmentPropertyInputFields
}

input UpsertScenarioOptimisationHierarchyAttributeInput {
  create: CreateScenarioOptimisationHierarchyAttributeInput
  update: UpdateScenarioOptimisationHierarchyAttributeInputFields
}

input UpsertScenarioOptimisationHierarchyInput {
  create: CreateScenarioOptimisationHierarchyInput
  update: UpdateScenarioOptimisationHierarchyInputFields
}

input UpsertScenarioOptimisationPreferredSequenceInput {
  create: CreateScenarioOptimisationPreferredSequenceInput
  update: UpdateScenarioOptimisationPreferredSequenceInputFields
}

input UpsertScenarioOptimisationPreferredSequenceItemInput {
  create: CreateScenarioOptimisationPreferredSequenceItemInput
  update: UpdateScenarioOptimisationPreferredSequenceItemInputFields
}

input UpsertScenarioOptimisationPropertyInput {
  create: CreateScenarioOptimisationPropertyInput
  update: UpdateScenarioOptimisationPropertyInputFields
}

input UpsertScenarioOptimisationPropertyValueInput {
  create: CreateScenarioOptimisationPropertyValueInput
  update: UpdateScenarioOptimisationPropertyValueInputFields
}

input UpsertScenarioOptimizationHierarchyInput {
  create: CreateScenarioOptimizationHierarchyInput
  update: UpdateScenarioOptimizationHierarchyInputFields
}

input UpsertScenarioOrderInput {
  create: CreateScenarioOrderInput
  update: UpdateScenarioOrderInputFields
}

input UpsertScenarioOrderItemInput {
  create: CreateScenarioOrderItemInput
  update: UpdateScenarioOrderItemInputFields
}

input UpsertScenarioOrderPropertyInput {
  create: CreateScenarioOrderPropertyInput
  update: UpdateScenarioOrderPropertyInputFields
}

input UpsertScenarioOrderStatusInput {
  create: CreateScenarioOrderStatusInput
  update: UpdateScenarioOrderStatusInputFields
}

input UpsertScenarioParentInput {
  connect: FindScenarioInput
  create: CreateScenarioInput
  update: UpdateScenarioInput
  upsert: UpsertScenarioInput
}

input UpsertScenarioPersonDowntimePeriodInput {
  create: CreateScenarioPersonDowntimePeriodInput
  update: UpdateScenarioPersonDowntimePeriodInputFields
}

input UpsertScenarioPersonInput {
  create: CreateScenarioPersonInput
  update: UpdateScenarioPersonInputFields
}

input UpsertScenarioPersonnelCapabilityInput {
  create: CreateScenarioPersonnelCapabilityInput
  update: UpdateScenarioPersonnelCapabilityInputFields
}

input UpsertScenarioPersonnelClassInput {
  create: CreateScenarioPersonnelClassInput
  update: UpdateScenarioPersonnelClassInputFields
}

input UpsertScenarioPersonnelClassPersonMemberInput {
  create: CreateScenarioPersonnelClassPersonMemberInput
  update: UpdateScenarioPersonnelClassPersonMemberInputFields
}

input UpsertScenarioPersonnelClassPropertyInput {
  create: CreateScenarioPersonnelClassPropertyInput
  update: UpdateScenarioPersonnelClassPropertyInputFields
}

input UpsertScenarioPersonnelPositionInput {
  create: CreateScenarioPersonnelPositionInput
  update: UpdateScenarioPersonnelPositionInputFields
}

input UpsertScenarioPersonnelPositionPersonMemberInput {
  create: CreateScenarioPersonnelPositionPersonMemberInput
  update: UpdateScenarioPersonnelPositionPersonMemberInputFields
}

input UpsertScenarioPersonnelPositionPropertyInput {
  create: CreateScenarioPersonnelPositionPropertyInput
  update: UpdateScenarioPersonnelPositionPropertyInputFields
}

input UpsertScenarioPersonPropertyInput {
  create: CreateScenarioPersonPropertyInput
  update: UpdateScenarioPersonPropertyInputFields
}

input UpsertScenarioScenarioAttributeInput {
  create: CreateScenarioScenarioAttributeInput
  update: UpdateScenarioScenarioAttributeInputFields
}

input UpsertScenarioSegmentRequirementDescendantInput {
  create: CreateScenarioSegmentRequirementDescendantInput
  update: UpdateScenarioSegmentRequirementDescendantInputFields
}

input UpsertScenarioSegmentRequirementEquipmentRequirementInput {
  create: CreateScenarioSegmentRequirementEquipmentRequirementInput
  update: UpdateScenarioSegmentRequirementEquipmentRequirementInputFields
}

input UpsertScenarioSegmentRequirementInput {
  create: CreateScenarioSegmentRequirementInput
  update: UpdateScenarioSegmentRequirementInputFields
}

input UpsertScenarioSegmentRequirementMaterialRequirementInput {
  create: CreateScenarioSegmentRequirementMaterialRequirementInput
  update: UpdateScenarioSegmentRequirementMaterialRequirementInputFields
}

input UpsertScenarioSegmentRequirementPersonnelRequirementInput {
  create: CreateScenarioSegmentRequirementPersonnelRequirementInput
  update: UpdateScenarioSegmentRequirementPersonnelRequirementInputFields
}

input UpsertScenarioSegmentRequirementPropertyInput {
  create: CreateScenarioSegmentRequirementPropertyInput
  update: UpdateScenarioSegmentRequirementPropertyInputFields
}

input UpsertScenarioTimePeriodInput {
  create: CreateScenarioTimePeriodInput
  update: UpdateScenarioTimePeriodInputFields
}

input UpsertSegmentRequirementInput {
  create: CreateSegmentRequirementInput
  update: UpdateSegmentRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementParentInput {
  connect: FindSegmentRequirementMaterialRequirementInput
  create: CreateSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementInput
  upsert: UpsertSegmentRequirementMaterialRequirementInput
}

input UpsertSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementMaterialRequirementSegmentRequirementMaterialRequirementInputFields
}

input UpsertSegmentRequirementParentInput {
  connect: FindSegmentRequirementInput
  create: CreateSegmentRequirementInput
  update: UpdateSegmentRequirementInput
  upsert: UpsertSegmentRequirementInput
}

input UpsertSegmentRequirementSegmentRequirementDescendantAscendantInput {
  create: CreateSegmentRequirementSegmentRequirementDescendantAscendantInput
  update: UpdateSegmentRequirementSegmentRequirementDescendantAscendantInputFields
}

input UpsertSegmentRequirementSegmentRequirementDescendantDescendantInput {
  create: CreateSegmentRequirementSegmentRequirementDescendantDescendantInput
  update: UpdateSegmentRequirementSegmentRequirementDescendantDescendantInputFields
}

input UpsertSegmentRequirementSegmentRequirementEquipmentRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementEquipmentRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementEquipmentRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementMaterialRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementMaterialRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementMaterialRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementPersonnelRequirementInput {
  create: CreateSegmentRequirementSegmentRequirementPersonnelRequirementInput
  update: UpdateSegmentRequirementSegmentRequirementPersonnelRequirementInputFields
}

input UpsertSegmentRequirementSegmentRequirementPropertyInput {
  create: CreateSegmentRequirementSegmentRequirementPropertyInput
  update: UpdateSegmentRequirementSegmentRequirementPropertyInputFields
}
